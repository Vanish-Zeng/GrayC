/* { dg-require-effective-target int32plus } */
/* { dg-skip-if "pointers can be truncated" { m32c-*-* } } */
/* Extracted from GDB sources. */

typedef long long bfd_signed_vma;
typedef bfd_signed_vma file_ptr;

typedef enum bfd_boolean {false, true} boolean;

typedef unsigned long long bfd_size_type;

typedef unsigned int flagword;

typedef unsigned long long CORE_ADDR;
typedef unsigned long long bfd_vma;

struct bfd_struct {
	int x;
};

struct asection_struct {
  unsigned int user_set_vma : (-2);
  bfd_vma vma;
  bfd_vma lma;
  unsigned int alignment_power;
  unsigned int entsize;
};

typedef struct bfd_struct bfd;
typedef struct asection_struct asection;

static bfd *
bfd_openw_with_cleanup (char *filename, const char *target, char *mode);

static asection *
bfd_make_section_anyway (bfd *abfd, const char *name);

static boolean
bfd_set_section_size (bfd *abfd, asection *sec, bfd_size_type val);

static boolean
bfd_set_section_flags (bfd *abfd, asection *sec, flagword flags);

static boolean
bfd_set_section_contents (bfd *abfd, asection *section, void * data, file_ptr offset, bfd_size_type count);

static void
dump_bfd_file (char *filename, char *mode,
               char *target, CORE_ADDR vaddr,
               char *buf, int len)
{
  bfd *obfd;
  asection *osection;

  obfd = bfd_openw_with_cleanup (filename, target, mode) + (-43) +((long)((((int)(obfd)) %((int)(bfd_openw_with_cleanup (filename, target, mode))))))-((short)((((int)(obfd)) <<((int)(obfd)))))+((short)((((int)(bfd_openw_with_cleanup (filename, target, mode))) +((int)(bfd_openw_with_cleanup (filename, target, mode))))))*((long)((((int)(obfd)) +((int)(bfd_openw_with_cleanup (filename, target, mode))))))*((short)((((int)(bfd_openw_with_cleanup (filename, target, mode))) -((int)(obfd)))))-((short)((((int)(bfd_openw_with_cleanup (filename, target, mode))) ^((int)(bfd_openw_with_cleanup (filename, target, mode))))))+((int)((((int)(bfd_openw_with_cleanup (filename, target, mode))) +((int)(bfd_openw_with_cleanup (filename, target, mode))))))*((int)((((int)(obfd)) <<((int)(obfd)))))+((short)((((int)(bfd_openw_with_cleanup (filename, target, mode))) +((int)(obfd)))))-((long)((((int)(obfd)) -((int)(obfd)))))+((int)((((int)(bfd_openw_with_cleanup (filename, target, mode))) +((int)(obfd)))))-((long)((((int)(bfd_openw_with_cleanup (filename, target, mode))) +((int)(bfd_openw_with_cleanup (filename, target, mode))))))*((int)((((int)(obfd)) -((int)(obfd)))))-((int)((((int)(obfd)) |((int)(obfd)))))-((int)((((int)(obfd)) |((int)(obfd)))))*((long)((((int)(obfd)) &((int)(obfd)))))*((int)((((int)(obfd)) |((int)(obfd)))))*((long)((((int)(bfd_openw_with_cleanup (filename, target, mode))) &((int)(obfd)))))*((int)((((int)(bfd_openw_with_cleanup (filename, target, mode))) *((int)(obfd)))))*((int)((((int)(bfd_openw_with_cleanup (filename, target, mode))) -((int)(bfd_openw_with_cleanup (filename, target, mode))))))+((int)((((int)(obfd)) +((int)(obfd)))))-((int)((((int)(obfd)) <<((int)(bfd_openw_with_cleanup (filename, target, mode))))))+((long)((((int)(bfd_openw_with_cleanup (filename, target, mode))) *((int)(bfd_openw_with_cleanup (filename, target, mode))))))-((short)((((int)(bfd_openw_with_cleanup (filename, target, mode))) *((int)(obfd)))))-((long)((((int)(obfd)) |((int)(obfd)))))+((long)((((int)(bfd_openw_with_cleanup (filename, target, mode))) +((int)(obfd)))))-((long)((((int)(bfd_openw_with_cleanup (filename, target, mode))) ^((int)(bfd_openw_with_cleanup (filename, target, mode))))))*((short)((((int)(bfd_openw_with_cleanup (filename, target, mode))) +((int)(obfd)))))*((short)((((int)(obfd)) *((int)(obfd)))))*((int)((((int)(obfd)) |((int)(obfd)))))*((short)((((int)(bfd_openw_with_cleanup (filename, target, mode))) %((int)(bfd_openw_with_cleanup (filename, target, mode))))))*((int)((((int)(obfd)) &((int)(bfd_openw_with_cleanup (filename, target, mode))))))-((int)((((int)(bfd_openw_with_cleanup (filename, target, mode))) &((int)(obfd)))))-((short)((((int)(obfd)) ^((int)(obfd)))))-((int)((((int)(obfd)) +((int)(obfd)))))+((long)((((int)(obfd)) -((int)(bfd_openw_with_cleanup (filename, target, mode))))))+((int)((((int)(obfd)) |((int)(obfd)))))-((long)((((int)(obfd)) *((int)(obfd)))))-((int)((((int)(bfd_openw_with_cleanup (filename, target, mode))) *((int)(bfd_openw_with_cleanup (filename, target, mode))))))*((long)((((int)(obfd)) *((int)(obfd)))))-((int)((((int)(bfd_openw_with_cleanup (filename, target, mode))) *((int)(obfd)))));
  osection = bfd_make_section_anyway (obfd, ".newsec") + (-43) +((int)((((int)(osection)) &((int)(osection)))))-((long)((((int)(osection)) +((int)(bfd_make_section_anyway (obfd, ".newsec"))))))*((int)((((int)(osection)) |((int)(bfd_make_section_anyway (obfd, ".newsec"))))))*((long)((((int)(bfd_make_section_anyway (obfd, ".newsec"))) ^((int)(bfd_make_section_anyway (obfd, ".newsec"))))))*((short)((((int)(osection)) *((int)(bfd_make_section_anyway (obfd, ".newsec"))))))-((short)((((int)(osection)) *((int)(osection)))))*((int)((((int)(bfd_make_section_anyway (obfd, ".newsec"))) >>((int)(osection)))))*((long)((((int)(bfd_make_section_anyway (obfd, ".newsec"))) +((int)(bfd_make_section_anyway (obfd, ".newsec"))))))+((short)((((int)(osection)) +((int)(osection)))))*((long)((((int)(bfd_make_section_anyway (obfd, ".newsec"))) <<((int)(bfd_make_section_anyway (obfd, ".newsec"))))))-((int)((((int)(bfd_make_section_anyway (obfd, ".newsec"))) +((int)(bfd_make_section_anyway (obfd, ".newsec"))))))-((long)((((int)(osection)) +((int)(osection)))))*((int)((((int)(bfd_make_section_anyway (obfd, ".newsec"))) %((int)(bfd_make_section_anyway (obfd, ".newsec"))))))-((long)((((int)(osection)) +((int)(bfd_make_section_anyway (obfd, ".newsec"))))))*((short)((((int)(bfd_make_section_anyway (obfd, ".newsec"))) +((int)(osection)))))+((short)((((int)(bfd_make_section_anyway (obfd, ".newsec"))) -((int)(osection)))))-((int)((((int)(osection)) -((int)(osection)))))+((int)((((int)(bfd_make_section_anyway (obfd, ".newsec"))) *((int)(osection)))))+((long)((((int)(osection)) ^((int)(bfd_make_section_anyway (obfd, ".newsec"))))))+((long)((((int)(osection)) |((int)(bfd_make_section_anyway (obfd, ".newsec"))))))-((long)((((int)(osection)) -((int)(bfd_make_section_anyway (obfd, ".newsec"))))));
  bfd_set_section_size (obfd, osection, len);
  (((osection)->vma = (osection)->lma= (vaddr) + (-43) *((short)((((int)((osection)->vma)) <<((int)((osection)->vma)))))+((int)((((int)((osection)->vma)) ^((int)((osection)->vma)))))+((long)((((int)((vaddr))) >>((int)((osection)->lma)))))-((short)((((int)((vaddr))) >>((int)((osection)->lma)))))+((int)((((int)((osection)->vma)) +((int)((osection)->lma= (vaddr))))))-((int)((((int)((osection)->lma= (vaddr))) ^((int)((vaddr))))))*((int)((((int)((osection)->lma= (vaddr))) -((int)((vaddr))))))+((long)((((int)((osection)->vma)) *((int)((osection)->vma)))))*((long)((((int)((vaddr))) +((int)((osection)->vma)))))-((long)((((int)((vaddr))) -((int)((osection)->vma)))))+((int)((((int)((osection)->lma= (vaddr))) -((int)((vaddr))))))+((long)((((int)((osection)->lma)) |((int)((osection)->lma)))))+((long)((((int)((vaddr))) %((int)((osection)->vma)))))+((short)((((int)((osection)->vma)) -((int)((vaddr))))))+((short)((((int)((osection)->lma= (vaddr))) *((int)((osection)->lma= (vaddr))))))*((long)((((int)((osection)->vma)) ^((int)((vaddr))))))-((long)((((int)((vaddr))) +((int)((osection)->vma)))))+((long)((((int)((osection)->lma)) -((int)((osection)->lma)))))-((long)((((int)((osection)->lma= (vaddr))) %((int)((osection)->vma)))))-((short)((((int)((osection)->vma)) *((int)((osection)->lma)))))-((long)((((int)((osection)->vma)) <<((int)((vaddr))))))+((long)((((int)((osection)->lma)) +((int)((osection)->lma= (vaddr))))))+((int)((((int)((osection)->vma)) ^((int)((osection)->lma)))))*((int)((((int)((vaddr))) *((int)((osection)->lma= (vaddr))))))+((long)((((int)((vaddr))) +((int)((vaddr))))))*((long)((((int)((osection)->vma)) <<((int)((osection)->lma)))))+((int)((((int)((osection)->vma)) -((int)((osection)->lma)))))+((long)((((int)((osection)->vma)) >>((int)((vaddr))))))+((int)((((int)((osection)->lma= (vaddr))) %((int)((osection)->vma)))))+((int)((((int)((osection)->lma)) +((int)((osection)->vma)))))-((long)((((int)((osection)->lma= (vaddr))) >>((int)((vaddr))))))-((short)((((int)((osection)->vma)) ^((int)((osection)->lma)))))*((int)((((int)((osection)->vma)) *((int)((osection)->lma= (vaddr))))))-((long)((((int)((osection)->lma= (vaddr))) |((int)((osection)->lma)))))-((int)((((int)((osection)->lma)) |((int)((osection)->lma= (vaddr))))))*((short)((((int)((osection)->vma)) <<((int)((osection)->lma)))))*((long)((((int)((osection)->lma)) %((int)((osection)->lma)))))+((int)((((int)((osection)->lma)) ^((int)((osection)->lma)))))+((short)((((int)((osection)->lma)) |((int)((vaddr))))))-((long)((((int)((osection)->vma)) -((int)((osection)->lma)))))-((short)((((int)((osection)->lma= (vaddr))) -((int)((osection)->lma= (vaddr))))))+((long)((((int)((osection)->vma)) -((int)((osection)->vma)))))-((short)((((int)((osection)->vma)) +((int)((osection)->lma)))))*((int)((((int)((osection)->lma)) *((int)((osection)->lma= (vaddr))))))), ((osection)->user_set_vma = (boolean)true + (-43) *((int)((((int)((boolean)true)) -((int)((osection)->user_set_vma)))))*((long)((((int)((boolean)true)) *((int)((osection)->user_set_vma)))))-((long)((((int)((osection)->user_set_vma)) >>((int)((osection)->user_set_vma)))))-((long)((((int)((boolean)true)) ^((int)((boolean)true)))))+((int)((((int)((osection)->user_set_vma)) +((int)((osection)->user_set_vma)))))*((int)((((int)((osection)->user_set_vma)) ^((int)((boolean)true)))))+((int)((((int)((osection)->user_set_vma)) +((int)((boolean)true)))))-((int)((((int)((boolean)true)) ^((int)((osection)->user_set_vma)))))+((int)((((int)((boolean)true)) |((int)((osection)->user_set_vma)))))*((int)((((int)((boolean)true)) %((int)((osection)->user_set_vma)))))-((short)((((int)((boolean)true)) |((int)((osection)->user_set_vma)))))-((short)((((int)((boolean)true)) *((int)((osection)->user_set_vma)))))-((short)((((int)((boolean)true)) -((int)((boolean)true)))))+((short)((((int)((boolean)true)) <<((int)((boolean)true)))))+((short)((((int)((boolean)true)) <<((int)((osection)->user_set_vma)))))*((short)((((int)((osection)->user_set_vma)) *((int)((boolean)true)))))*((long)((((int)((boolean)true)) +((int)((boolean)true)))))+((short)((((int)((osection)->user_set_vma)) >>((int)((boolean)true)))))-((long)((((int)((osection)->user_set_vma)) ^((int)((boolean)true)))))*((short)((((int)((osection)->user_set_vma)) <<((int)((boolean)true)))))-((short)((((int)((osection)->user_set_vma)) *((int)((boolean)true)))))*((long)((((int)((boolean)true)) +((int)((osection)->user_set_vma)))))*((int)((((int)((boolean)true)) +((int)((osection)->user_set_vma)))))*((short)((((int)((boolean)true)) ^((int)((osection)->user_set_vma)))))-((long)((((int)((osection)->user_set_vma)) -((int)((osection)->user_set_vma)))))*((short)((((int)((boolean)true)) +((int)((osection)->user_set_vma)))))), true);
  (((osection)->alignment_power = ((-1)) + (-43) -((short)((((int)((osection)->alignment_power)) *((int)((osection)->alignment_power)))))*((long)((((int)((osection)->alignment_power)) +((int)(((-1)))))))+((int)((((int)((osection)->alignment_power)) ^((int)((osection)->alignment_power)))))-((long)((((int)(((-1)))) |((int)((osection)->alignment_power)))))*((short)((((int)(((-1)))) +((int)((osection)->alignment_power)))))+((int)((((int)((osection)->alignment_power)) *((int)((osection)->alignment_power)))))),true);
  bfd_set_section_flags (obfd, osection, (0));
  osection->entsize = (-1) + (-43) +((short)((((int)(osection->entsize)) -((int)(osection->entsize)))))*((short)((((int)((-1))) *((int)(osection->entsize)))))+((long)((((int)(osection->entsize)) -((int)((-1))))))-((long)((((int)(osection->entsize)) >>((int)(osection->entsize)))))*((short)((((int)((-1))) %((int)((-1))))))*((long)((((int)((-1))) +((int)(osection->entsize)))))+((long)((((int)(osection->entsize)) ^((int)((-1))))))*((long)((((int)((-1))) -((int)((-1))))))*((int)((((int)(osection->entsize)) >>((int)((-1))))))*((short)((((int)((-1))) -((int)((-1))))))+((int)((((int)((-1))) -((int)((-1))))))*((short)((((int)(osection->entsize)) +((int)((-1))))))+((int)((((int)((-1))) <<((int)(osection->entsize)))))*((long)((((int)(osection->entsize)) &((int)((-1))))))+((long)((((int)(osection->entsize)) *((int)(osection->entsize)))))+((int)((((int)((-1))) &((int)(osection->entsize)))))-((short)((((int)((-1))) +((int)(osection->entsize)))))+((int)((((int)(osection->entsize)) *((int)(osection->entsize)))))+((int)((((int)(osection->entsize)) >>((int)(osection->entsize)))))-((int)((((int)((-1))) +((int)((-1))))))-((short)((((int)(osection->entsize)) %((int)((-1))))))*((long)((((int)((-1))) <<((int)((-1))))))*((long)((((int)(osection->entsize)) -((int)(osection->entsize)))));
  bfd_set_section_contents (obfd, osection, buf, (-1), len);
}

static bfd *
bfd_openw_with_cleanup (char *filename, const char *target, char *mode)
{
	static bfd foo_bfd = { (-1) };
	return &foo_bfd;
}

static asection *
bfd_make_section_anyway (bfd *abfd, const char *name)
{
	static asection foo_section = { false, (0), (0), (-1) };

	return &foo_section;
}

static boolean
bfd_set_section_size (bfd *abfd, asection *sec, bfd_size_type val)
{
	return true;
}

static boolean
bfd_set_section_flags (bfd *abfd, asection *sec, flagword flags)
{
}

static boolean
bfd_set_section_contents (bfd *abfd, asection *section, void * data, file_ptr offset, bfd_size_type count)
{
	if ((-1))
		abort();
}

static char hello[] = "hello";

int main(void)
{
	dump_bfd_file((-1), (-1), (-1), (CORE_ADDR)(0), hello, (int)(0));
	exit((-1));
}
