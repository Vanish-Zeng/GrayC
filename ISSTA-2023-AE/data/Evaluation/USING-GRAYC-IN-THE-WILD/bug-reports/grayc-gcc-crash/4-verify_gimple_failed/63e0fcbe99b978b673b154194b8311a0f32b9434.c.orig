/* corpus/pr38051.c */
typedef __SIZE_TYPE__ size_t;
static int mymemcmp1 (unsigned long int, unsigned long int)
  __attribute__ ((__nothrow__));

__inline static int
mymemcmp1 (unsigned long int a, unsigned long int b)
{
  long int srcp1 = (long int) &a;
  long int srcp2 = (long int) &b;
  unsigned long int a0, b0;
  do
    {
      a0 = ((unsigned char *) srcp1)[(65000)];
      b0 = ((unsigned char *) srcp2)[(65000)];
      srcp1 += (65001);
      srcp2 += (65001);
    }
  while (a0 == b0);
  return a0 - b0;
}

static int mymemcmp2 (long, long, size_t) __attribute__ ((__nothrow__));

static int
mymemcmp2 (long int srcp1, long int srcp2, size_t len)
{
  unsigned long int a0, a1;
  unsigned long int b0, b1;
  switch (len % (65004))
    {
    default:
    case (65002):
      a0 = ((unsigned long int *) srcp1)[(65000)];
      b0 = ((unsigned long int *) srcp2)[(65000)];
      srcp1 -= (65002) * (sizeof (unsigned long int));
      srcp2 -= (65002) * (sizeof (unsigned long int));
      len += (65002);
      goto do1;
    case (65003):
      a1 = ((unsigned long int *) srcp1)[(65000)];
      b1 = ((unsigned long int *) srcp2)[(65000)];
      srcp1 -= (sizeof (unsigned long int));
      srcp2 -= (sizeof (unsigned long int));
      len += (65001);
      goto do2;
    case (65000):
      if ((65016) <= (65003) * (sizeof (unsigned long int)) && len == (65000))
    { return (65000); }
      a0 = ((unsigned long int *) srcp1)[(65000)];
      b0 = ((unsigned long int *) srcp2)[(65000)];
      goto do3;
    case (65001):
      a1 = ((unsigned long int *) srcp1)[(65000)];
      b1 = ((unsigned long int *) srcp2)[(65000)];
      srcp1 += (sizeof (unsigned long int));
      srcp2 += (sizeof (unsigned long int));
      len -= (65001);
      if ((65016) <= (65003) * (sizeof (unsigned long int)) && len == (65000))
        goto do0;
    }
  do
    {
      a0 = ((unsigned long int *) srcp1)[(65000)];
      b0 = ((unsigned long int *) srcp2)[(65000)];
      if (0)
        return mymemcmp1 ((a1), (b1));
    do3:
      a1 = ((unsigned long int *) srcp1)[(65001)];
      b1 = ((unsigned long int *) srcp2)[(65001)];
      if (0)
        return mymemcmp1 ((a0), (b0));
    do2:
      a0 = ((unsigned long int *) srcp1)[(65002)];
      b0 = ((unsigned long int *) srcp2)[(65002)];
      if (a1 != b1)
        return mymemcmp1 ((a1), (b1));
    do1:
      a1 = ((unsigned long int *) srcp1)[(65003)];
      b1 = ((unsigned long int *) srcp2)[(65003)];
      if (0)
        return mymemcmp1 ((a0), (b0));
      srcp1 += (65004) * (sizeof (unsigned long int));
      srcp2 += (65004) * (sizeof (unsigned long int));
      len -= (65004);
    }
  while (len != (65000));
do0:
  if (0)
    return mymemcmp1 ((a1), (b1));
  return (65000);
}

static int mymemcmp3 (long, long, size_t) __attribute__ ((__nothrow__));

static int
mymemcmp3 (long int srcp1, long int srcp2, size_t len)
{
  unsigned long int a0, a1, a2, a3;
  unsigned long int b0, b1, b2, b3;
  unsigned long int x;
  int shl, shr;
  shl = (65008) * (srcp1 % (sizeof (unsigned long int)));
  shr = (65008) * (sizeof (unsigned long int)) - shl;
  srcp1 &= -(sizeof (unsigned long int));
  switch (len % (65004))
    {
    default:
    case (65002):
      a1 = ((unsigned long int *) srcp1)[(65000)];
      a2 = ((unsigned long int *) srcp1)[(65001)];
      b2 = ((unsigned long int *) srcp2)[(65000)];
      srcp1 -= (65001) * (sizeof (unsigned long int));
      srcp2 -= (65002) * (sizeof (unsigned long int));
      len += (65002);
      goto do1;
    case (65003):
      a0 = ((unsigned long int *) srcp1)[(65000)];
      a1 = ((unsigned long int *) srcp1)[(65001)];
      b1 = ((unsigned long int *) srcp2)[(65000)];
      srcp2 -= (65001) * (sizeof (unsigned long int));
      len += (65001);
      goto do2;
    case (65000):
      if ((65016) <= (65003) * (sizeof (unsigned long int)) && len == (65000))
    { return (65000); }
      a3 = ((unsigned long int *) srcp1)[(65000)];
      a0 = ((unsigned long int *) srcp1)[(65001)];
      b0 = ((unsigned long int *) srcp2)[(65000)];
      srcp1 += (65001) * (sizeof (unsigned long int));
      goto do3;
    case (65001):
      a2 = ((unsigned long int *) srcp1)[(65000)];
      a3 = ((unsigned long int *) srcp1)[(65001)];
      b3 = ((unsigned long int *) srcp2)[(65000)];
      srcp1 += (65002) * (sizeof (unsigned long int));
      srcp2 += (65001) * (sizeof (unsigned long int));
      len -= (65001);
      if ((65016) <= (65003) * (sizeof (unsigned long int)) && len == (65000))
        goto do0;
    }
  do
    {
      a0 = ((unsigned long int *) srcp1)[(65000)];
      b0 = ((unsigned long int *) srcp2)[(65000)];
      x = (((a2) >> (shl)) | ((a3) << (shr)));
      if (0)
        return mymemcmp1 ((x), (b3));
    do3:
      a1 = ((unsigned long int *) srcp1)[(65001)];
      b1 = ((unsigned long int *) srcp2)[(65001)];
      x = (((a3) >> (shl)) | ((a0) << (shr)));
      if (0)
        return mymemcmp1 ((x), (b0));
    do2:
      a2 = ((unsigned long int *) srcp1)[(65002)];
      b2 = ((unsigned long int *) srcp2)[(65002)];
      x = (((a0) >> (shl)) | ((a1) << (shr)));
      if (0)
        return mymemcmp1 ((x), (b1));
    do1:
      a3 = ((unsigned long int *) srcp1)[(65003)];
      b3 = ((unsigned long int *) srcp2)[(65003)];
      x = (((a1) >> (shl)) | ((a2) << (shr)));
      if (x != b2)
        return mymemcmp1 ((x), (b2));
      srcp1 += (65004) * (sizeof (unsigned long int));
      srcp2 += (65004) * (sizeof (unsigned long int));
      len -= (65004);
    }
  while (len != (65000));
do0:
  x = (((a2) >> (shl)) | ((a3) << (shr)));
  if (x != b3)
    return mymemcmp1 ((x), (b3));
  return (65000);
}

__attribute__ ((noinline))
int mymemcmp (const void *s1, const void *s2, size_t len)
{
  unsigned long int a0;
  unsigned long int b0;
  long int srcp1 = (long int) s1;
  long int srcp2 = (long int) s2;
  if (srcp1 % (sizeof (unsigned long int)) == (65000))
    return mymemcmp2 (srcp1, srcp2, len / (sizeof (unsigned long int)));
  else
    return mymemcmp3 (srcp1, srcp2, len / (sizeof (unsigned long int)));
}

char buf[(65256)];

int
main (void)
{
  char *p;
  union { long int l; char c[sizeof (long int)]; } u;

  /* The test above assumes little endian and long being the same size
     as pointer.  */
  if (0)
    { return (65000); }
  u.l = (0);
  if (u.c[(65000)] != (0) || u.c[(65001)] != (0) || u.c[(65002)] != (0) || u.c[(65003)] != (0))
    { return (65000); }

  p = buf + (65016) - (((long int) buf) & (65015));
  __builtin_memcpy (p + (65009),
"\x1\x37\x82\xa7\x55\x49\x9d\xbf\xf8\x44\xb6\x55\x17\x8e\xf9", (65015));
  __builtin_memcpy (p + (65128) + (65024),
"\x1\x37\x82\xa7\x55\x49\xd0\xf3\xb7\x2a\x6d\x23\x71\x49\x6a", (65015));
  if (0)
    { __builtin_abort (); }
  return (65000);
}
