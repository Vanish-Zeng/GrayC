Reported here: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=105232

gcc-11 and gcc-12

c;
#define d(expr, e)                                                             \
  char *f = expr;                                                              \
  strlen(f) ?: ++c;
struct {
  char a[0], b[1537228674000000000]
} cma[] = {{}, {}, {}, {}, {}, {}};
g() { d(cma[4].a, ) }
white_check_mark
eyes
raised_hands

============ test /home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/fuzzer-output-directory-fuzzed-files/fuzzer-file-3200.c ============
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/fuzzer-output-directory-fuzzed-files/fuzzer-file-3200.c:239:13: internal compiler error: in tree_to_poly_int64, at tree.cc:3188
--
	.././../gcc-source/gcc/gimple-ssa-warn-access.cc:4731
Please submit a full bug report, with preprocessed source (by using -freport-bug).
Please include the complete backtrace with any bug report.
See <https://gcc.gnu.org/bugs/> for instructions.


user42@srg08:~/directed-compiler-fuzzing-code/scripts/9-reduce-bugs/crash-1$ gcc-11 -O0 fuzzer-file-3200.c
fuzzer-file-3200.c:1:1: warning: data definition has no type or storage class
    1 | c;
      | ^
fuzzer-file-3200.c:1:1: warning: type defaults to ‘int’ in declaration of ‘c’ [-Wimplicit-int]
fuzzer-file-3200.c:7:1: warning: no semicolon at end of struct or union
    7 | } cma[] = {{}, {}, {}, {}, {}, {}};
      | ^
fuzzer-file-3200.c:7:3: warning: size of ‘cma’ 9223372044000000000 bytes exceeds maximum object size 9223372036854775807 [-Wlarger-than=]
    7 | } cma[] = {{}, {}, {}, {}, {}, {}};
      |   ^~~
fuzzer-file-3200.c:8:1: warning: return type defaults to ‘int’ [-Wimplicit-int]
    8 | g() { d(cma[4].a, ) }
      | ^
fuzzer-file-3200.c: In function ‘g’:
fuzzer-file-3200.c:4:3: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
    4 |   strlen(f) ?: ++c;
      |   ^~~~~~
fuzzer-file-3200.c:8:7: note: in expansion of macro ‘d’
    8 | g() { d(cma[4].a, ) }
      |       ^
fuzzer-file-3200.c:1:1: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
  +++ |+#include <string.h>
    1 | c;
fuzzer-file-3200.c:4:3: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
    4 |   strlen(f) ?: ++c;
      |   ^~~~~~
fuzzer-file-3200.c:8:7: note: in expansion of macro ‘d’
    8 | g() { d(cma[4].a, ) }
      |       ^
fuzzer-file-3200.c:4:3: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
    4 |   strlen(f) ?: ++c;
      |   ^~~~~~
fuzzer-file-3200.c:8:7: note: in expansion of macro ‘d’
    8 | g() { d(cma[4].a, ) }
      |       ^
fuzzer-file-3200.c: At top level:
fuzzer-file-3200.c:7:3: error: size of variable ‘cma’ is too large
    7 | } cma[] = {{}, {}, {}, {}, {}, {}};
user42@srg08:~/directed-compiler-fuzzing-code/scripts/9-reduce-bugs/crash-1$ gcc-11 -O2 fuzzer-file-3200.c
fuzzer-file-3200.c:1:1: warning: data definition has no type or storage class
    1 | c;
      | ^
fuzzer-file-3200.c:1:1: warning: type defaults to ‘int’ in declaration of ‘c’ [-Wimplicit-int]
fuzzer-file-3200.c:7:1: warning: no semicolon at end of struct or union
    7 | } cma[] = {{}, {}, {}, {}, {}, {}};
      | ^
fuzzer-file-3200.c:7:3: warning: size of ‘cma’ 9223372044000000000 bytes exceeds maximum object size 9223372036854775807 [-Wlarger-than=]
    7 | } cma[] = {{}, {}, {}, {}, {}, {}};
      |   ^~~
fuzzer-file-3200.c:8:1: warning: return type defaults to ‘int’ [-Wimplicit-int]
    8 | g() { d(cma[4].a, ) }
      | ^
fuzzer-file-3200.c: In function ‘g’:
fuzzer-file-3200.c:4:3: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
    4 |   strlen(f) ?: ++c;
      |   ^~~~~~
fuzzer-file-3200.c:8:7: note: in expansion of macro ‘d’
    8 | g() { d(cma[4].a, ) }
      |       ^
fuzzer-file-3200.c:1:1: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
  +++ |+#include <string.h>
    1 | c;
fuzzer-file-3200.c:4:3: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
    4 |   strlen(f) ?: ++c;
      |   ^~~~~~
fuzzer-file-3200.c:8:7: note: in expansion of macro ‘d’
    8 | g() { d(cma[4].a, ) }
      |       ^
fuzzer-file-3200.c:4:3: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
    4 |   strlen(f) ?: ++c;
      |   ^~~~~~
fuzzer-file-3200.c:8:7: note: in expansion of macro ‘d’
    8 | g() { d(cma[4].a, ) }
      |       ^
during RTL pass: expand
fuzzer-file-3200.c:4:3: internal compiler error: in tree_to_poly_int64, at tree.c:3091
    4 |   strlen(f) ?: ++c;
      |   ^~~~~~~~~
fuzzer-file-3200.c:8:7: note: in expansion of macro ‘d’
    8 | g() { d(cma[4].a, ) }
      |       ^
0x1582527 internal_error(char const*, ...)
	???:0
0x610373 fancy_abort(char const*, int, char const*)
	???:0
0xdb4482 component_ref_size(tree_node*, special_array_member*)
	???:0
0x7161ac compute_objsize(tree_node*, int, access_ref*, range_query*)
	???:0
0x71f11e expand_builtin(tree_node*, rtx_def*, rtx_def*, machine_mode, int)
	???:0
0x843155 expand_expr_real_1(tree_node*, rtx_def*, machine_mode, expand_modifier, rtx_def**, bool)
	???:0
0x84e0be store_expr(tree_node*, rtx_def*, int, bool, bool)
	???:0
Please submit a full bug report,
with preprocessed source if appropriate.
Please include the complete backtrace with any bug report.
See <file:///usr/share/doc/gcc-11/README.Bugs> for instructions.
user42@srg08:~/directed-compiler-fuzzing-code/scripts/9-reduce-bugs/crash-1$ /home/user42/data/gcc-csmith-1201/gcc-install/bin/gcc -O2 fuzzer-file-3200.c
fuzzer-file-3200.c:1:1: warning: data definition has no type or storage class
    1 | c;
      | ^
fuzzer-file-3200.c:1:1: warning: type defaults to ‘int’ in declaration of ‘c’ [-Wimplicit-int]
fuzzer-file-3200.c:7:1: warning: no semicolon at end of struct or union
    7 | } cma[] = {{}, {}, {}, {}, {}, {}};
      | ^
fuzzer-file-3200.c:7:3: warning: size of ‘cma’ 9223372044000000000 bytes exceeds maximum object size 9223372036854775807 [-Wlarger-than=]
    7 | } cma[] = {{}, {}, {}, {}, {}, {}};
      |   ^~~
fuzzer-file-3200.c:8:1: warning: return type defaults to ‘int’ [-Wimplicit-int]
    8 | g() { d(cma[4].a, ) }
      | ^
fuzzer-file-3200.c: In function ‘g’:
fuzzer-file-3200.c:4:3: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
    4 |   strlen(f) ?: ++c;
      |   ^~~~~~
fuzzer-file-3200.c:8:7: note: in expansion of macro ‘d’
    8 | g() { d(cma[4].a, ) }
      |       ^
fuzzer-file-3200.c:1:1: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
  +++ |+#include <string.h>
    1 | c;
fuzzer-file-3200.c:4:3: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
    4 |   strlen(f) ?: ++c;
      |   ^~~~~~
fuzzer-file-3200.c:8:7: note: in expansion of macro ‘d’
    8 | g() { d(cma[4].a, ) }
      |       ^
fuzzer-file-3200.c:4:3: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
    4 |   strlen(f) ?: ++c;
      |   ^~~~~~
fuzzer-file-3200.c:8:7: note: in expansion of macro ‘d’
    8 | g() { d(cma[4].a, ) }
      |       ^
during GIMPLE pass: waccess
fuzzer-file-3200.c:8:1: internal compiler error: in tree_to_poly_int64, at tree.cc:3188
    8 | g() { d(cma[4].a, ) }
      | ^
0x7e6047 tree_to_poly_int64(tree_node const*)
	.././../gcc-source/gcc/tree.cc:3188
0x7e6047 tree_to_poly_int64(tree_node const*)
	.././../gcc-source/gcc/tree.cc:3186
0x1218bdb component_ref_size(tree_node*, special_array_member*)
	.././../gcc-source/gcc/tree.cc:12871
0xe3c44f set_component_ref_size
	.././../gcc-source/gcc/pointer-query.cc:1857
0xe3c44f handle_component_ref
	.././../gcc-source/gcc/pointer-query.cc:1937
0xe3c44f compute_objsize_r
	.././../gcc-source/gcc/pointer-query.cc:2249
0xe3be62 compute_objsize_r
	.././../gcc-source/gcc/pointer-query.cc:2227
0xe403e5 compute_objsize(tree_node*, gimple*, int, access_ref*, pointer_query*)
	.././../gcc-source/gcc/pointer-query.cc:2352
0xc0c97c check_read_access
	.././../gcc-source/gcc/gimple-ssa-warn-access.cc:2768
0xc0d6c8 check_read_access
	.././../gcc-source/gcc/gimple-ssa-warn-access.cc:2757
0xc0d6c8 check_builtin
	.././../gcc-source/gcc/gimple-ssa-warn-access.cc:3181
0xc0d6c8 check_call
	.././../gcc-source/gcc/gimple-ssa-warn-access.cc:4280
0xc0d6c8 check_block
	.././../gcc-source/gcc/gimple-ssa-warn-access.cc:4393
0xc0d6c8 execute
	.././../gcc-source/gcc/gimple-ssa-warn-access.cc:4731
Please submit a full bug report, with preprocessed source (by using -freport-bug).
Please include the complete backtrace with any bug report.
See <https://gcc.gnu.org/bugs/> for instructions.
user42@srg08:~/directed-compiler-fuzzing-code/scripts/9-reduce-bugs/crash-1$ /home/user42/data/gcc-csmith-120411/gcc-install/bin/gcc -O2 fuzzer-file-3200.c
fuzzer-file-3200.c:1:1: warning: data definition has no type or storage class
    1 | c;
      | ^
fuzzer-file-3200.c:1:1: warning: type defaults to ‘int’ in declaration of ‘c’ [-Wimplicit-int]
fuzzer-file-3200.c:7:1: warning: no semicolon at end of struct or union
    7 | } cma[] = {{}, {}, {}, {}, {}, {}};
      | ^
fuzzer-file-3200.c:7:3: warning: size of ‘cma’ 9223372044000000000 bytes exceeds maximum object size 9223372036854775807 [-Wlarger-than=]
    7 | } cma[] = {{}, {}, {}, {}, {}, {}};
      |   ^~~
fuzzer-file-3200.c:8:1: warning: return type defaults to ‘int’ [-Wimplicit-int]
    8 | g() { d(cma[4].a, ) }
      | ^
fuzzer-file-3200.c: In function ‘g’:
fuzzer-file-3200.c:4:3: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
    4 |   strlen(f) ?: ++c;
      |   ^~~~~~
fuzzer-file-3200.c:8:7: note: in expansion of macro ‘d’
    8 | g() { d(cma[4].a, ) }
      |       ^
fuzzer-file-3200.c:1:1: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
  +++ |+#include <string.h>
    1 | c;
fuzzer-file-3200.c:4:3: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
    4 |   strlen(f) ?: ++c;
      |   ^~~~~~
fuzzer-file-3200.c:8:7: note: in expansion of macro ‘d’
    8 | g() { d(cma[4].a, ) }
      |       ^
fuzzer-file-3200.c:4:3: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
    4 |   strlen(f) ?: ++c;
      |   ^~~~~~
fuzzer-file-3200.c:8:7: note: in expansion of macro ‘d’
    8 | g() { d(cma[4].a, ) }
      |       ^
during GIMPLE pass: waccess
fuzzer-file-3200.c:8:1: internal compiler error: in tree_to_poly_int64, at tree.cc:3224
    8 | g() { d(cma[4].a, ) }
      | ^
0x7e75cb tree_to_poly_int64(tree_node const*)
	.././../gcc-source/gcc/tree.cc:3224
0x7e75cb tree_to_poly_int64(tree_node const*)
	.././../gcc-source/gcc/tree.cc:3222
0x121e5db component_ref_size(tree_node*, special_array_member*)
	.././../gcc-source/gcc/tree.cc:12964
0xe4047f set_component_ref_size
	.././../gcc-source/gcc/pointer-query.cc:1857
0xe4047f handle_component_ref
	.././../gcc-source/gcc/pointer-query.cc:1937
0xe4047f compute_objsize_r
	.././../gcc-source/gcc/pointer-query.cc:2249
0xe3fe92 compute_objsize_r
	.././../gcc-source/gcc/pointer-query.cc:2227
0xe444b5 compute_objsize(tree_node*, gimple*, int, access_ref*, pointer_query*)
	.././../gcc-source/gcc/pointer-query.cc:2355
0xc0f26c check_read_access
	.././../gcc-source/gcc/gimple-ssa-warn-access.cc:2768
0xc0ffb8 check_read_access
	.././../gcc-source/gcc/gimple-ssa-warn-access.cc:2757
0xc0ffb8 check_builtin
	.././../gcc-source/gcc/gimple-ssa-warn-access.cc:3181
0xc0ffb8 check_call
	.././../gcc-source/gcc/gimple-ssa-warn-access.cc:4280
0xc0ffb8 check_block
	.././../gcc-source/gcc/gimple-ssa-warn-access.cc:4393
0xc0ffb8 execute
	.././../gcc-source/gcc/gimple-ssa-warn-access.cc:4742
Please submit a full bug report, with preprocessed source (by using -freport-bug).
Please include the complete backtrace with any bug report.
See <https://gcc.gnu.org/bugs/> for instructions.
user42@srg08:~/directed-compiler-fuzzing-code/scripts/9-reduce-bugs/crash-1$ /home/user42/data/gcc-csmith-120411/gcc-install/bin/gcc -O2 fuzzer-file-3200-1.c
fuzzer-file-3200-1.c:1:1: warning: data definition has no type or storage class
    1 | c;
      | ^
fuzzer-file-3200-1.c:1:1: warning: type defaults to ‘int’ in declaration of ‘c’ [-Wimplicit-int]
fuzzer-file-3200-1.c:7:1: warning: no semicolon at end of struct or union
    7 | } cma[] = {{}, {}, {}, {}};
      | ^
fuzzer-file-3200-1.c:7:3: warning: size of ‘cma’ 10164820840962746720 bytes exceeds maximum object size 9223372036854775807 [-Wlarger-than=]
    7 | } cma[] = {{}, {}, {}, {}};
      |   ^~~
fuzzer-file-3200-1.c:8:1: warning: return type defaults to ‘int’ [-Wimplicit-int]
    8 | g() { d(cma[4].a, ) }
      | ^
fuzzer-file-3200-1.c: In function ‘g’:
fuzzer-file-3200-1.c:4:3: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
    4 |   strlen(f) ?: ++c;
      |   ^~~~~~
fuzzer-file-3200-1.c:8:7: note: in expansion of macro ‘d’
    8 | g() { d(cma[4].a, ) }
      |       ^
fuzzer-file-3200-1.c:1:1: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
  +++ |+#include <string.h>
    1 | c;
fuzzer-file-3200-1.c:4:3: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
    4 |   strlen(f) ?: ++c;
      |   ^~~~~~
fuzzer-file-3200-1.c:8:7: note: in expansion of macro ‘d’
    8 | g() { d(cma[4].a, ) }
      |       ^
fuzzer-file-3200-1.c:4:3: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
    4 |   strlen(f) ?: ++c;
      |   ^~~~~~
fuzzer-file-3200-1.c:8:7: note: in expansion of macro ‘d’
    8 | g() { d(cma[4].a, ) }
      |       ^
during GIMPLE pass: waccess
fuzzer-file-3200-1.c:8:1: internal compiler error: in tree_to_poly_int64, at tree.cc:3224
    8 | g() { d(cma[4].a, ) }
      | ^
0x7e75cb tree_to_poly_int64(tree_node const*)
	.././../gcc-source/gcc/tree.cc:3224
0x7e75cb tree_to_poly_int64(tree_node const*)
	.././../gcc-source/gcc/tree.cc:3222
0x121e5db component_ref_size(tree_node*, special_array_member*)
	.././../gcc-source/gcc/tree.cc:12964
0xe4047f set_component_ref_size
	.././../gcc-source/gcc/pointer-query.cc:1857
0xe4047f handle_component_ref
	.././../gcc-source/gcc/pointer-query.cc:1937
0xe4047f compute_objsize_r
	.././../gcc-source/gcc/pointer-query.cc:2249
0xe3fe92 compute_objsize_r
	.././../gcc-source/gcc/pointer-query.cc:2227
0xe444b5 compute_objsize(tree_node*, gimple*, int, access_ref*, pointer_query*)
	.././../gcc-source/gcc/pointer-query.cc:2355
0xc0f26c check_read_access
	.././../gcc-source/gcc/gimple-ssa-warn-access.cc:2768
0xc0ffb8 check_read_access
	.././../gcc-source/gcc/gimple-ssa-warn-access.cc:2757
0xc0ffb8 check_builtin
	.././../gcc-source/gcc/gimple-ssa-warn-access.cc:3181
0xc0ffb8 check_call
	.././../gcc-source/gcc/gimple-ssa-warn-access.cc:4280
0xc0ffb8 check_block
	.././../gcc-source/gcc/gimple-ssa-warn-access.cc:4393
0xc0ffb8 execute
	.././../gcc-source/gcc/gimple-ssa-warn-access.cc:4742
Please submit a full bug report, with preprocessed source (by using -freport-bug).
Please include the complete backtrace with any bug report.
See <https://gcc.gnu.org/bugs/> for instructions.
