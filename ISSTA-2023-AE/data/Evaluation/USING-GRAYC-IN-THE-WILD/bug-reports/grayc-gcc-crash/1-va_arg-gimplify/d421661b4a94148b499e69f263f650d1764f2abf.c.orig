#include <stdarg.h>

extern void abort (void);
extern void exit (int);

void bar (int n, int c)
{
  static int lastn = -1, lastc = -1;

  if (lastn != n)
    {
      if (lastc != lastn)
	abort ();
      lastc = 0;
      lastn = n;
    }

  if (c != (char) (lastc ^ (n << 3)))
    abort ();
  lastc++;
}

#define D(N) typedef struct { char x[N]; } A##N;
D(0) D(1) D(2) D(3) D(4) D(5) D(6) D(7)
D(8) D(9) D(10) D(11) D(12) D(13) D(14) D(15)
D(16) D(31) D(32) D(35) D(72)
#undef D

void foo (int size, ...)
{
#define D(N) A##N a##N;
D(0) D(1) D(2) D(3) D(4) D(5) D(6) D(7)
D(8) D(9) D(10) D(11) D(12) D(13) D(14) D(15)
D(16) D(31) D(32) D(35) D(72)
#undef D
  va_list ap;
  int i;

  if (size != 21)
    abort ();
  va_start (ap, size);
#define D(N)					\
  a##N = va_arg (ap, typeof (a##N));		\
  for (i = 0; i < N; i++)			\
    bar (N, a##N.x[i]);
D(0) D(1) D(2) D(3) D(4) D(5) D(6) D(7)
D(8) D(9) D(10) D(11) D(12) D(13) D(14) D(15)
D(16) D(31) D(32) D(35) D(72)
#undef D
  va_end (ap);
}

int main (void)
{
int i;
char c = 'c';
long long base_offset;
struct S t = { 0, -3161L };
char a[1];
const char*ss=s;
const char *p = in + 1;
char out[4];
short j = f;
int k = 0;
int b = (-3 * a[0] -3 * a[1]) / 12;
int i = 1;
unsigned short u;
char buf[18];
unsigned short s[18];
unsigned char c[18] = "abcdefghijklmnopq";
struct packed_ushort rv;
struct source s;
int *q;
int j;
int j = i + 1;
int j = arrindex + 1;
int j = i - 1;
int j = arrindex - 1;
int c = 2;
int a = 128;
unsigned char a = 128;
long long a = 0x80000000LL;
unsigned int a = 0x80000000;
float f[3] = { 2.0f, 3.0f, 4.0f };
union U z;
unsigned char v = x->c.a;
struct a k = {};
int j = 0;
int outgo = 0;
volatile unsigned x = 10;
volatile long long y = -10000;
int t = 0;
int *s = &a;
struct a a = {0};
long dx[VLEN+1];
long dy[VLEN+1];
long s1[VLEN];
long size;
char b[100];
int i = 0;
int next_n = 1;
int n;
PgHdr *pTail;
PgHdr a[5];
PgHdr *p;
_Bool c = a != b;
unsigned long l;
unsigned char i;
unsigned int x[256];
int listElem[NUM_ELEM]={30,2,10,5};
int listSmall[SMALL_N];
char j;
int b = 0x0332F5C8;
struct S e = c[0];
struct S o = x;
unsigned int i;
int h = d != 10;
int *i = 0;
struct A h[30] = {{0,0,0}};
int *c = &b;
struct reg_stat r;
int g = -1L;
int h = ~d;
int i=0;
signed int y = ((-__INT_MAX__ - 1) / 2);
signed int r;
int a[32];
unsigned long long l = 0x40000000000ULL;
int counter  = 0;
int **e = &b;
int *g[3] = {0, 0, 0};
int **h[1] = { &g[2] };
const char d = 0;
const char c = 0;
const char *end;
int len = 1;
int c = *p;
const char *input = "Bbb:";
unsigned long long a = x / y;
unsigned long long b = x % y;
register int *b;
int c;
volatile a_struct *a;
union U u;
unsigned char a = 0;
unsigned int d = 3;
char *s = ":ab";
char *lim = s + 3;
int i0 = 0;
int i1 = i0 + 1;
int i2 = i1 + 1;
int i3 = i2 + 1;
int i4 = i3 + 1;
int h = 0;
unsigned int k = 0;
int l[8];
unsigned long int z = 0;
unsigned int z = 0;
int b=INT_MIN;
int b=INT_MIN+1;
int b=INT_MAX;
int b=-1;
int ret;
long int b;
struct S d = { 0x123456 };
void *p;
register int s1;
register void *base_addr = &&sim_base_addr;
unsigned int x = vaddr_page % 0x100;
struct A a;
int v = 4;
union u0 *e = 0;
union u0 *k = 0;
union u0 **v5 = b->m0;
union u0 *c = b->m1;
union u0 **d = &v5[0];
union u0 uv[] = {{ .i = 111 }, { .i = 222 }, { .i = 333 }, { .i = 444 }};
struct s1 s = { 0, {{ .i = 555 }, { .i = 0 }, { .i = 999 }, { .i = 777 }}};
int tmp = x;
int first = 1;
int count = c;
ST *item = s;
int a = s->a;
int x;
ST _1[2] = {{2}, {1}};
int *d = &a;
struct x a = {x, y, z};
struct x b = {x, y, z};
struct x *c = &b;
int i5 = i4 + 1;
__complex__ float f[1];
__complex__ double d[1];
void *buf[32];
void *buf[5];
int f2;
char buf[16] = "1234567890";
char *p = buf;
int cur_bitshift = ((start + len) % 8) - 8;
unsigned int m = n;
unsigned char input[sizeof data + 16];
struct Foo *f = (struct Foo *)(x - 1);
struct Foo f;
;
unsigned a = ~b;
struct tiny x;
long x = va_arg (ap, long);
struct tiny x[3];
unsigned len;
int *p = &i;
char *args[] = {"a", "b", "c", "d", "e"};
int opt = 0;
char *g = 0;
char *p = 0;
struct baz x = { 3, 4, 5 };
volatile int a = 0;
volatile int b = -INT_MAX;
short *q;
char type;
int integer_size;
int sh = 0x100;
struct S s;
int y = INT_MIN;
int o;
double i;
double o;
void *x;
__complex__ double x;
__complex__ float y;
__complex__ long double z;
__int128 mask = (__int128)0xffff << 56;
__int128 in = 1;
long aus;
long avs;
long t = aus;
int g;
short ssi = 126;
unsigned short usi = 65280;
int fail = !(ssi < usi);
int tot = 0;
int a = 0;
int b = 0;
signed char m[256];
signed char n[256];
volatile int v[4];
int *p;
unsigned int n = x;
unsigned int u = 32;
int fail_count = 0;
unsigned long tlen;
unsigned long e = 1000000000 / 460800 * test_length;
io *iop = i;
unsigned int tmp = (b[i] * 0xaf286bcbULL) >> 32;
int fixed;
int temp1 = 2;
int temp2 = 1;
struct large temp3;
struct large temp4;
struct e j = {};
int *g = 0;
int year=548;
int j=1081;
struct S s = { 6, 12, { 1, 2, 3, 4, 5, 6 },		 { 7, { 8, 9, 10, 11, 12, 13, 14, 15 } } };
int z = a > 0 ? a : -a;
long long x = z;
unsigned int m;
int gx[100];
int *hx = gx;
int ix;
int b[10];
int *pb = b;
struct S t;
struct S *pt = &t;
int j = 4;
int e;
short x = *p++ << 16;
char *p = "";
struct obstack *__o = (__h);
int __len = ((sizeof (struct field)));
struct obstack *__o1 = (__h);
void *value;
int *f1;
char *list = g_list;
char *element;
char *prevList = list;
int y;
char a[ARRAY_SIZE];
int ch;
union tree_node **q;
int a;
unsigned int x = (short)y;
short x = *p;
short x = -10;
void* p2;
unsigned e = 2;
unsigned timeout = 0;
int f = ~e / 7;
struct S v;
struct U v;
struct U w;
struct Foo *f = (struct Foo *)x;
unsigned char error = 0;
int x = a;
struct T t = { 0x0001, 0x0203, 0x0405, 0x0607 };
volatile int i;
unsigned int x;
int i = p->i;
struct D attr;
long col;
struct E e = {.row = 5,.col = 0,.defaults =      {6, {-1, -1, -1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}} };
struct C c[4];
struct A a = { c, 4 };
struct B b = { &a, 1 };
struct D d;
const char *x[8];
int y[8];
const unsigned top[2] = {0xff7a7a7a, 0xff7a7a7a};
const unsigned left = 0xff7b7b7b;
unsigned long long cr;
int intType;
unsigned int *vramPtr;
int width;
int c = a ^ b;
unsigned int u;
long l = ((a + win) - b);
unsigned long totalsize = 80;
unsigned long msize = 64;
double e;
double f;
double g;
struct s s = { 1, 2, 3, 4 };
int n = count;
int c = 0;
struct S f = { };
int n=2;
double x[n];
char buf[7];
int ae = 0;
struct c w;
struct c *const ar = &w;
short *i = &d;
int *j = &e;
struct S s = { &t.b[5], 27 };
char c;
void *q = p > &c ? p : &c;
char d;
void *q = p < &c ? &c < &d ? &d : &c : p;
void *q = p < &c ? p : &c;
void *q = p > &c ? &c > &d ? &d : &c : p;
char *p0 = &a;
char *p1 = &b;
char *p4 = p2 < p0 ? p2 : p0;
char *p5 = p3 < p1 ? p3 : p1;
struct delay_block *q = Timer_Queue.succ;
volatile double *pd;
volatile float *pf;
struct B b;
int timeout = 0;
int x = 0;
const struct F i = { x++, };
struct a a;
int num = 0;
const int a[8] = { 0, 1, 2, 3, 4, 5, 6, 7 };
int g = b < 0 ? 0 : f + b;
int __j;
long double x;
int must_annul;
int z = -y;
int b;
int y = 0;
const int *p = &x;
char e;
char *formatc;
char *f = "0123456789abcdef";
int width = t->precision;
int a[SIZE] = {1};
u8 outbuf[32] = "buffer     ";
u8 inbuf[32] = "\f";
int j = i;
int g = 6;
int i = c >> ~(~e | ~g);
unsigned long a = (*p++) >> 24;
unsigned long x = 0x80000000UL;
volatile int d = 1;
volatile int e = 1;
int f = 1 / a;
int g = 1U < f;
int h = 2 + g;
int i = 3 % h;
int j = e && b;
int k = 1 == c;
int l = d != 0;
short m = (short) (-1 * i * l);
short x = j * (k * m);
double v[n];
union U t = {};
int tmp;
int h;
struct two t = { 0, 0 };
int r;
float d;
int gitt[128][128];
int nww;
double val = ( ri - le ) / ( ri * ( le + 1.0 ) );
double retval;
double x = __FLT_MIN__ / 2.0;
double darg;
int iarg;
int flag = 0;
int Result = 0;
int Array[100][100];
int stereo1;
double x = -0.0;
int cnt = 0;
int e = 0;
long long i;
long double x = 1.0;
unsigned long retval;
char *p = (char*) &x;
char a[sizeof (long)];
struct A r = { 0, 0, 0 };
struct A a[3] = { { &v[1], 1, 1LL }, { &v[0], 0, 0LL }, { &v[2], 2, 2LL } };
unsigned long a[18] = { 4, 2, -200, 200, 2, -400, 400, 3, -600, 0, 600, 5, -100, -66, 0, 66, 100, __LONG_MAX__ / 8 + 1 };
Data DataList[4];
int *l_100 = &g_23;
int **l_110 = &l_100;
struct S1 l_128 = { 1 };
unsigned i = 0;
int z = *x;
int k;
char c2;
char *pc = &c;
char *pc2 = &c2;
int *pi = &i;
int z;
unsigned char cy;
unsigned short sy;
unsigned int iy;
unsigned long ly;
unsigned long long Ly;
struct s *t = & (struct s) { 3, "hey there" };
int c = 1;
int c = a + 512;
int c = a + 513;
int b0 = -1;
int b1 = -1;
int p = b || a;
signed char i;
RenderBox *this = thisin;
char d = x[0];
int c = d;
const char c[] = { 0x54, 0x87 };
unsigned long long aLL = 1000000000000000000ULL;
struct S e = {1, 1};
COMPLEX a;
COMPLEX  x;
float bdm[4][2][4][2];
const char X[8] = { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H' };
char buffer[8];
const char X[10] = { 'A', 'B', 'C', 'D', 'E' };
char buffer[10];
const struct foo X = { a : 'A', c : 'C', e : 'E', g : 'G', i : 'I' };
const struct foo X = { .b = 'B', .d = 'D', .f = 'F', .h = 'H' , .j = 'J' };
int a = 2;
int b = 5;
char c[] = {    2, 4, 1, 2, 5, 5, 2, 4, 4, 0, 0, 0, 0, 0, 0, 3, 4, 4, 2, 4,    1, 2, 5, 5, 2, 4, 1, 0, 0, 0, 2, 4, 4, 3, 4, 3, 3, 5, 1, 3,    5, 5, 2, 4, 4, 2, 4, 1, 3, 5, 3, 3, 5, 1, 3, 5, 1, 2, 4, 4,    2, 4, 2, 3, 5, 1, 3, 5, 1, 3, 5, 5, 2, 4, 1, 2, 4, 2, 3, 5,    3, 3, 5, 1, 3, 5, 5, 2, 4, 1, 2, 4, 1, 3, 5, 3, 3, 5, 1, 3,    5, 5, 2, 4, 4, 2, 4, 1, 3, 5, 3, 3, 5, 1, 3, 5, 1, 2, 4, 1,    2, 4, 2, 3, 5, 1, 3, 5, 1, 3, 5, 1, 2, 4, 1, 2, 4, 1, 3, 5,    1, 3, 5, 1, 3, 5, 1, 2, 4, 4, 2, 4, 1, 3, 5, 1, 3, 5, 1, 3,    5, 5, 2, 4, 4, 2, 4, 2, 3, 5, 3, 3, 5, 1, 3, 5, 5, 2, 4, 4,    2, 4, 1, 3, 5, 3, 3, 5, 1, 3, 5, 1, 2, 5, 5, 2, 4, 2, 3, 5,    1, 3, 4, 1, 3, 5, 1, 2, 5, 5, 2, 4, 1, 2, 5, 1, 3, 5, 3, 3,    5, 1, 2, 5, 5, 2, 4, 2, 2, 5, 1, 3, 5, 3, 3, 5, 1, 2, 5, 1,    2, 4, 1, 2, 5, 2, 3, 5, 1, 3, 5, 1, 2, 5, 1, 2, 4, 2, 2, 5,    1, 3, 5, 1, 3, 5, 1, 2, 5, 5, 2, 4, 2, 2, 5, 2, 3, 5, 3, 3,    5, 1, 2, 5, 5, 2, 4, 2, 2, 5, 2, 3, 5, 3, 3, 5, 1, 2, 5, 5,    2, 4, 2, 2, 5, 1, 3, 5, 3, 3, 5, 1, 2, 5, 5, 2, 4, 2, 2, 5,    1, 3, 5, 3, 3, 5, 1, 2, 5, 1, 2, 4, 1, 2, 5, 2, 3, 5, 1, 3,    5, 1, 2, 5, 5, 2, 4, 2, 2, 5, 2, 3, 5, 3, 3, 5, 1, 2, 5, 5,    2, 4, 1, 2, 5, 1, 3, 5, 3, 3, 5, 1, 2, 5, 5, 2, 4, 2, 2, 5,    1, 3, 5, 3, 3, 5, 1, 2, 5, 5, 2, 4, 2, 2, 5, 1, 3, 5, 3, 3,    5, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  };
char *f = c + 390;
int x = i - a;
char l = 'D';
double d = -12.0;
long l = (d > 10000) ? (unsigned long) d : (long) d;
int a[2] = { -1, 0 };
double y;
unsigned long long int ull3;
unsigned long o;
const char *const foo = "hello world";
char dst [64];
const int i = 5;
int mat[2][1];
int (*a)[1] = mat;
int det = 0;
unsigned long long uv = 0x1000000001ULL;
struct A *r;
unsigned long a[40];
struct S s = { 1, 2, 3, 4 };
void **w = u;
void *t[] = { u[2], u[4] };
int s[] = { 7, 8, 9, 10, 11, 12 };
signed char k = -83;
unsigned int y = (unsigned int)INT_MIN;
__complex double dc;
double *dp = &(__real dc);
unsigned int count = n;
char superblock[2048+3300];
int ret = 0;
short *p;
short buf[6];
int f = 0;
int *tmp;
char *c1 = "foo";
char *c2 = "foo";
unsigned i;
int size;
int *MyArray;
int numbers[4] = { 0xdead, 0xbeef, 0x1337, 0x4242 };
struct B b = { 0, 1 };
struct A a = { 2, b };
int v = 0;
unsigned int param  = 1;
double x;
unsigned long *scan_fp_;
int n_uses;
struct du_chain *last;
struct du_chain du1 = { 0, 0 };
struct du_chain du0 = { &du1, 1 };
unsigned char h = ~a;
unsigned char *s;
unsigned int x = 2;
unsigned int y = (0U - x / 2) / 2;
register const char * const *wordptr = &wordlist[207u + i];
unsigned long long i;
int z = 0x1234;
unsigned int z = 0x1234;
int y = 0x1234;
int z = INT_MIN;
unsigned int y = 0x1234;
unsigned int z = (unsigned int)INT_MIN;
long j = 0x40000000;
unsigned char a[2];
int si1 = a;
int si2 = b;
unsigned b = 0;
unsigned int regno;
volatile int x1 = 0;
volatile long long x2 = 0;
volatile int x3 = 0;
volatile int x4 = 1;
volatile int x5 = 1;
volatile long long x6 = 1;
long long t = ((x1 * (x2 << x3)) / (x4 * x5)) + x6;
struct a g;
long diff;
long tmp = ct;
int hicount = 0;
unsigned char *c;
char *str = "\x7f\xff";
const unsigned long n = y->d + 1;
const double m = 0.25 * (y->b - y->a);
unsigned long i;
unsigned x;
unsigned int r;
unsigned int *c = s->c;
unsigned int *c = s.c;
unsigned int s;
union at6 bav6;
unsigned char bev7;
int z = 0;
int x = -214748365 * (v - 1);
int x = 214748365 * (v + 1);
unsigned int x = -214748365U * (v - 1);
unsigned int x = 214748365U * (v + 1);
int *ip = &i;
int *i3p = &i3;
int *i4p = &i4;
int *a = va_arg (list, int *);
struct T *p = s;
int number_columns=9;
int cnt0 = 0;
int cnt1 = 0;
unsigned int u = INT_MAX;
long s = 1;
long d[7] = { 975, 975, 975, 975, 975, 975, 975 };
int iNbr = 1;
int test = 0;
unsigned long long this = seed * 1103515245 + 12345;
unsigned long long int x;
int n_bits;
long long ran;
int tot_bits = 0;
long long int i;
struct e m = {};
int del = 1;
unsigned int i = 0;
int i = 0x30011;
struct A r;
struct a f = {};
unsigned int x7;
int result = 0;
int c = -3;
int n=1000;
char title[] = "foo and stuff\n";
int d = x[i];
int h = 5;
double c;
int d;
float t = x - y;
double t = x - y;
long double t = x - y;
int t1;
int *t2 = 0;
int *const *t3[] = {	      0, 0, 0, 0, 0, 0, 0, 0, 0, &t2, 0, 0, &t2, &t2, &t2,	      &t2, &t2, 0, 0, 0, 0, 0, 0, 0, &t2, 0, 0, 0, 0, 0, 0,	      0, 0, 0, 0, &t2, 0, 0, 0, 0, 0, 0, 0, &t2, &t2,	      &t2, &t2, &t2, 0, 0, 0, 0, 0, 0, 0, &t2, 0, 0, 0,	      &t2, 0, 0, 0, &t2, 0, &t2, 0, 0, &t2, 0, 0, 0, 0,	      0, &t2, 0, 0, 0, 0, &t2, &t2, 0, 0, 0, 0, &t2, 0,	      0, 0, 0, 0, 0, 0, &t2, 0, 0, 0, 0, 0, &t2, 0, 0, 0,	      &t2, &t2	    };
int *const **t4[] = {&t3[0]};
int t5;
int *t6[6] = {&d, &d};
int *t7[] = {0};
int t8[5] = {0};
int *const *t9 = &t6[0];
int *const **t10 = &t9;
unsigned long x = 0;
const char *name;
struct S r = { 6, 8, -8, -5 };
double sum = 0.0;
struct a h[][1] = {2};
struct foo bar;
unsigned t;
unsigned long long pow;
unsigned long *xp = factab;
unsigned long q = 1;
unsigned long long a = a_int;
unsigned long d;
int j = 1;
unsigned long tmp;
int jj = 0;
unsigned long long t;
unsigned p;
long int xx = *y & 255;
long int xx = *y & 65535;
short int xx = *y & 255;
long int y[] = {-1, 16000};
short int yw[] = {-1, 16000};
int res;
struct foo k;
int *k = &h;
struct A **c;
int g[1];
int x = 1;
char big[0x1000];
V *w = &v;
struct S s[2];
char blah[33] = "01234567890123456789";
_Bool f = 0;
char buf[6];
enum e x = a;
unsigned c = (0x7000U / (x - 2)) ^ a;
short r = *a;
long long arg0 = args[i];
long long arg1 = args[j];
vector(16, char) c1;
vector(8, short) s1;
vector(4, int) i1;
vector(2, long) l1;
int f = 2;
int x = 7;
unsigned int e = a;
char s[2] = "";
char s[] = "x";
bfd *obfd;
asection *osection;
unsigned bno = *bit_no;
bitmap_element *elt1;
int k = i + 1;
int b = a == 0 ? 0 : -a;
double* deletedEntry = 0;
double* entry = table + i;
union _D_rep _D_inf = {{ 0, 0, 0, 0x7ff0 }};
union _D_rep _D_inf2 = {{ 0, 0, 0, 0x7ff0 }};
union _D_rep infinit = {{ 0, 0, 0, 0x7ff0 }};
double table[2] = { infinit.val, 23 };
double key = 23;
long double e;
int m;
char o = m;
char *p = &h;
int array1[1] = { 1 };
int array2[2][1]= { { 1 }, { 0 } };
float x[4];
float temp;
register const long long constant = 0xc000000080000000LL;
register const unsigned long long constant = 0xc000000080000000LL;
unsigned long long value = 0xc000000000000001LL;
float arg0 = args[i];
float arg1 = args[j];
long double tmp = 1.0l;
int eval;
char x[] = "IJKLMNOPQR";
union bf_or_uint32 bfin;
char cin[] = { 0x83, 0x85, 0x87, 0x89 };
char *str = "abcdefghijkl";
unsigned long long xx;
unsigned long long *x = (unsigned long long *) &xx;
long int i = -2147483647L - 1L;
char ca = 1;
unsigned int arg0 = args[i];
unsigned int arg1 = args[j];
char *q;
int off;
char *p;
unsigned x = 1234;
struct S *s;
char c[] = { 97, 97, 97, 97, 97, 0 };
int *__restrict q;
int *__restrict r;
int mask = -1 << bitcount;
struct s x;
unsigned T irslt = 1;
T ix = ixi;
unsigned T res;
unsigned short *tmp;
int n = 0;
int x[n % 1000 + 1];
int *t;
struct f f;
int p[4] = { 16, 32, 64, 128 };
int q[4] = { 8, 4, 2, 1 };
int tmp[2];
struct foo f = { 7, 8, 9 };
int op = ops[j];
struct s s = {1, 10, 3};
struct s t = {1, 2, 3};
char g[256];
void **h;
void *n = 0;
int *i = &a[sizeof(a)/sizeof(*a)];
int array[10];
volatile long long l1 = 1;
volatile long long l2 = -1;
volatile long long l3 = -1;
struct s s = { 1, ~0ULL };
register n=(count+7)/8;
short Array[100];
short Sum = 0;
int a = 1;
int *q[40];
__SIZE_TYPE__ start;
short *q = &c;
short *l = &h;
char *m = &e;
long b = *p;
short a = 0xff00;
long d;
int len;
struct baz x;
int T355;
int *T356;
struct A loc;
int str;
const int j = i;
char dummy[DUMMY_SIZE];
volatile struct s rec = { &rec };
struct S *r;
struct S ret;
char *p = &r;
struct s *pp;
struct s *next;

#define D(N) A##N a##N;
D(0) D(1) D(2) D(3) D(4) D(5) D(6) D(7)
D(8) D(9) D(10) D(11) D(12) D(13) D(14) D(15)
D(16) D(31) D(32) D(35) D(72)
#undef D
  int i;

#define D(N)					\
  for (i = 0; i < N; i++)			\
    a##N.x[i] = i ^ (N << 3);
D(0) D(1) D(2) D(3) D(4) D(5) D(6) D(7)
D(8) D(9) D(10) D(11) D(12) D(13) D(14) D(15)
D(16) D(31) D(32) D(35) D(72)
#undef D

  foo (21
#define D(N) , a##N
D(0) D(1) D(2) D(3) D(4) D(5) D(6) D(7)
D(8) D(9) D(10) D(11) D(12) D(13) D(14) D(15)
D(16) D(31) D(32) D(35) D(72)
#undef D
      );
  exit (0);
}
