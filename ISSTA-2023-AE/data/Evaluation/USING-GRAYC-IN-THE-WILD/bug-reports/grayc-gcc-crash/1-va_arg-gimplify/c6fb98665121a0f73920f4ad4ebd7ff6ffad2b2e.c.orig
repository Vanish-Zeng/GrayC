#include <stdarg.h>

extern void abort (void);

int foo_arg, bar_arg;
long x;
double d;
va_list gap;
struct S1 { int i; double d; int j; double e; } s1;
struct S2 { double d; long i; } s2;
int y;

void
bar (int v)
{
  bar_arg = v;
}

void
f1 (int i, ...)
{
  va_list ap;
  va_start (ap, i);
  
int while_condition_1312 = i-- > 0;

int while_condition_1342 = while_condition_1312;

int while_condition_1372 = while_condition_1342;
while (while_condition_1372)
    x = va_arg (ap, long);
  va_end (ap);
}

void
f2 (int i, ...)
{
  va_list ap;
  va_start (ap, i);
  
int while_condition_1564 = i-- > 0;

int while_condition_1624 = while_condition_1564;

int while_condition_1691 = while_condition_1624;
while (while_condition_1691)
    d = va_arg (ap, double);
  va_end (ap);
}

void
f3 (int i, ...)
{
  va_list ap;
  int j = i;
  
int while_condition_1839 = j-- > 0;

int while_condition_1932 = while_condition_1839;

int while_condition_2033 = while_condition_1932;
while (while_condition_2033)
    {
      va_start (ap, i);
      x = va_arg (ap, long);
      va_end (ap);
      bar (x);
    
break;

break;

break;
}
}

void
f4 (int i, ...)
{
  va_list ap;
  int j = i;
  
int while_condition_2093 = j-- > 0;

int while_condition_2224 = while_condition_2093;

int while_condition_2356 = while_condition_2224;
while (while_condition_2356)
    {
      va_start (ap, i);
      d = va_arg (ap, double);
      va_end (ap);
      bar (d + 4.0);
    
break;

break;

break;
}
}

void
f5 (int i, ...)
{
  va_list ap;
  va_start (ap, i);
  
int while_condition_2257 = i-- > 0;

int while_condition_2419 = while_condition_2257;

int while_condition_2587 = while_condition_2419;
while (while_condition_2587)
    s1 = va_arg (ap, struct S1);
  va_end (ap);
}

void
f6 (int i, ...)
{
  va_list ap;
  va_start (ap, i);
  
int while_condition_2445 = i-- > 0;

int while_condition_2643 = while_condition_2445;

int while_condition_2837 = while_condition_2643;
while (while_condition_2837)
    s2 = va_arg (ap, struct S2);
  va_end (ap);
}

void
f7 (int i, ...)
{
  va_list ap;
  int j = i;
  
int while_condition_2728 = j-- > 0;

int while_condition_2950 = while_condition_2728;

int while_condition_3181 = while_condition_2950;
while (while_condition_3181)
    {
      va_start (ap, i);
      s1 = va_arg (ap, struct S1);
      va_end (ap);
      bar (s1.i);
    
break;

break;

break;
}
}

void
f8 (int i, ...)
{
  va_list ap;
  int j = i;
  
int while_condition_3023 = j-- > 0;

int while_condition_3290 = while_condition_3023;

int while_condition_3544 = while_condition_3290;
while (while_condition_3544)
    {
      va_start (ap, i);
      s2 = va_arg (ap, struct S2);
      y = va_arg (ap, int);
      va_end (ap);
      bar (s2.i);
    
break;

break;

break;
}
}

int
main (void)
{
int i;
unsigned T irslt = 1;
T ix = ixi;
unsigned T res;
int x = 7;
double x = -0.0;
double y;
int *p;
int r;
int f2;
long long l2;
unsigned short us;
unsigned long long ul;
short s2;
int foo = 2;
int tab[2];
register int i;
int all = writes->all;
int nonscalar = writes->nonscalar;
struct write_data writes;
struct table_elt elt;
int e = 0;
unsigned int t = (unsigned char) (~b);
unsigned int i;
unsigned char *s;
struct S s;
double result1 = (35.7 * 100.0) / 45.0;
double result2 = (x * 100.0) / y;
struct s va_values;
int i = 0;
unsigned long x = 0;
struct rtattr *attr = rta[i - 1];
struct rtattr rt[2];
struct rtattr *rta[14];
const char X[8] = { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H' };
char buffer[8];
const char X[10] = { 'A', 'B', 'C', 'D', 'E' };
char buffer[10];
const struct foo X = { a : 'A', c : 'C', e : 'E', g : 'G', i : 'I' };
const struct foo X = { .b = 'B', .d = 'D', .f = 'F', .h = 'H' , .j = 'J' };
int j = 0;
int l = 0;
int k = 0;
char *str = "abcdefghijkl";
int *ip = &i;
int *i3p = &i3;
int *i4p = &i4;
unsigned int u;
int i = -1;
unsigned int h;
struct tiny x;
long x = va_arg (ap, long);
struct tiny x[3];
unsigned long ui = i;
char *p = buf + 127;
int c = a ^ b;
struct packed_ushort rv;
struct source s;
int fixed;
int temp1 = 2;
int temp2 = 1;
struct large temp3;
struct large temp4;
int a = x->c3;
const int b = y->a1 >> 9;
const unsigned long c = y->a2;
int d = a;
struct A a;
struct C b;
int c;
struct S t = { 0, -3161L };
vector(16, char) c1;
vector(8, short) s1;
vector(4, int) i1;
vector(2, long) l1;
;
int c=-2;
int d=0xfe;
int e=a&1;
int f=b&2;
struct s *pp;
struct s *next;
volatile int d = 1;
volatile int e = 1;
int f = 1 / a;
int g = 1U < f;
int h = 2 + g;
int i = 3 % h;
int j = e && b;
int k = 1 == c;
int l = d != 0;
short m = (short) (-1 * i * l);
short x = j * (k * m);
struct T *d;
struct S e = a;
struct S *c = 0;
char buf[16];
char *output = buf;
int b = a == 0 ? 0 : -a;
double c;
int d;
char s[32] = { 'f', 'o', 'o', 'b', 'a', 'r', 0 };
st *next = 0;
int nIndx;
char b[100];
int **e = &b;
int *g[3] = {0, 0, 0};
int **h[1] = { &g[2] };
unsigned char i;
int j;
unsigned int x[256];
register int something;
const char *rl_cp;
int len;
int ae = 0;
struct c w;
struct c *const ar = &w;
unsigned short n = 0;
unsigned short org_g;
int f = 2;
long long k = b;
int l;
int *m = &e;
unsigned long a[18] = { 4, 2, -200, 200, 2, -400, 400, 3, -600, 0, 600, 5, -100, -66, 0, 66, 100, __LONG_MAX__ / 8 + 1 };
int *t = x->sc;
int t1 = t[0];
int t2 = t[1];
int t3 = t[2];
int a0 = x->a[0];
int a1 = x->a[1];
long tmp = ++level;
long tmp = level;
struct S ret;
char *p = &r;
int X;
struct X x;
volatile unsigned char a = 1;
long long b = 0x80000000L;
int c = -((int)(-b) - (-0x7fffffff * a));
int a = 0x12345678;
short_a *b = (short_a*) &a;
int ret = 0;
struct b ad = {};
short ssi = 126;
unsigned short usi = 65280;
int fail = !(ssi < usi);
struct A d;
int x;
char *data;
char c;
char c2;
char *pc = &c;
char *pc2 = &c2;
int *pi = &i;
long diff;
long tmp = ct;
int c = 2;
int h = 5;
unsigned i = 0;
TYPE x[10];
TYPE alpha = 2;
int k = i + 1;
int tmp = x;
unsigned ret = i + 1;
unsigned ret = i - 1;
register unsigned int z;
char c[16];
int f = 0;
int b = 0x0332F5C8;
int colinear;
register long double __value;
register long double __result;
double x;
int tot = 0;
int a = 0;
int b = 0;
unsigned char m[256];
unsigned char n[256];
struct R r;
char buf[10];
signed char d;
signed char f = e ^ b;
volatile int g = (int) f;
float a[100000];
long int i = -2147483647L - 1L;
char ca = 1;
unsigned align;
double e;
double f;
double g;
int size = sizeof (int);
int si1 = a;
int si2 = b;
char d;
int nbits;
int i0 = 0;
int i1 = i0 + 1;
int i2 = i1 + 1;
int i3 = i2 + 1;
int i4 = i3 + 1;
int i5 = i4 + 1;
const unsigned top[2] = {0xff7a7a7a, 0xff7a7a7a};
const unsigned left = 0xff7b7b7b;
unsigned int count = n;
char superblock[2048+3300];
short *p;
short buf[6];
int x = -214748365 * (v - 1);
int x = 214748365 * (v + 1);
unsigned int x = -214748365U * (v - 1);
unsigned int x = 214748365U * (v + 1);
int y = INT_MIN;
unsigned int y = (unsigned int)INT_MIN;
struct obstack *__o = (__h);
int __len = ((sizeof (struct field)));
struct obstack *__o1 = (__h);
void *value;
int j[2];
va_list aps[10];
int n=2;
double x[n];
int width = t->precision;
long double e;
unsigned int u = -1;
struct a h[][1] = {2};
long long blkoffset = _RNDDOWN(offset, (long long )pxp->blksz);
unsigned int diff = (unsigned int)(offset - blkoffset);
unsigned int blkextent = _RNDUP(diff + extent, pxp->blksz);
long long xx;
int a = ~x;
int * l_17 = &g_9;
unsigned char l_11 = 254;
int *k = 0;
int a = 128;
unsigned char a = 128;
long long a = 0x80000000LL;
unsigned int a = 0x80000000;
struct s s = { 1, 2, 3, 4 };
__complex__ double x;
__complex__ float y;
__complex__ long double z;
int I;
float F;
char x[] = "IJKLMNOPQR";
char *p;
int dev_zero;
double d = -12.0;
long l = (d > 10000) ? (unsigned long) d : (long) d;
struct B b = { .a.j = 5 };
struct C c = { .a.j = 5 };
struct D d = { .a.j = 5 };
int t = x.x;
struct foo x;
char *q;
int off;
char buf[0x10000];
int y = a[0];
float x[4];
float temp;
unsigned int x7;
char *list = g_list;
char *element;
char *prevList = list;
int addr;
char *e;
long l = ((a + win) - b);
int y = x >> 2;
int y = 0;
int a=10;
test *p=(test *)&a;
struct B b;
const char *x[8];
int y[8];
unsigned int m = n;
int ab = 0;
struct a ae;
struct big b = {};
unsigned char x = v;
unsigned x = 0x80000000;
const int *p = &x;
float t = x - y;
double t = x - y;
long double t = x - y;
const int diff   = i-radius;
const int lowk   = (diff>0 ? diff : 0 );
int k;
int idx = ((k-i+radius)*width-j+radius);
int exc_rad=2;
int N=8;
int n = 0;
int x[n % 1000 + 1];
struct a aa = {};
__complex double dc;
double *dp = &(__real dc);
unsigned x = 1234;
int *q = (int *)&p->f;
int i = *q;
int i = 1;
unsigned long j;
int n;
unsigned long addr1;
unsigned long addr2;
__int128 mask = (__int128)0xffff << 56;
__int128 in = 1;
unsigned int tmp = (b[i] * 0xaf286bcbULL) >> 32;
unsigned char error = 0;
int tmp;
int c = a + 512;
int c = a + 513;
int b0 = -1;
int b1 = -1;
signed char k = -83;
int iNbr = 1;
int test = 0;
int z = *x;
unsigned int a;
unsigned short b;
unsigned char x[8] = { 0x01, 0x01, 0x01, 0x01 };
char a[] = "c";
char *f = "0123456789abcdef";
unsigned long long l = 0x40000000000ULL;
struct S s = { 1, 2, 3, 4 };
void **w = u;
void *t[] = { u[2], u[4] };
int s[] = { 7, 8, 9, 10, 11, 12 };
long long s;
const int h = 0;
unsigned long long r = 0x8000000000000001ull;
int x = 80;
char x;
struct stuff x = {0, 0, 0, 0, 0, NULL, 0};
volatile unsigned x = 10;
volatile long long y = -10000;
int count = 0;
long winds = 0;
const int i = 5;
long double x;
struct C c = { 0, 0, 0 };
struct E e[2] = { { 0, &e[1] }, { 1, 0 } };
int *p = &i;
int *g = 0;
char x = '\0';
char g[256];
void **h;
void *n = 0;
long long vector;
int answer;
int t1;
int *t2 = 0;
int *const *t3[] = {	      0, 0, 0, 0, 0, 0, 0, 0, 0, &t2, 0, 0, &t2, &t2, &t2,	      &t2, &t2, 0, 0, 0, 0, 0, 0, 0, &t2, 0, 0, 0, 0, 0, 0,	      0, 0, 0, 0, &t2, 0, 0, 0, 0, 0, 0, 0, &t2, &t2,	      &t2, &t2, &t2, 0, 0, 0, 0, 0, 0, 0, &t2, 0, 0, 0,	      &t2, 0, 0, 0, &t2, 0, &t2, 0, 0, &t2, 0, 0, 0, 0,	      0, &t2, 0, 0, 0, 0, &t2, &t2, 0, 0, 0, 0, &t2, 0,	      0, 0, 0, 0, 0, 0, &t2, 0, 0, 0, 0, 0, &t2, 0, 0, 0,	      &t2, &t2	    };
int *const **t4[] = {&t3[0]};
int t5;
int *t6[6] = {&d, &d};
int *t7[] = {0};
int t8[5] = {0};
int *const *t9 = &t6[0];
int *const **t10 = &t9;
union bf_or_uint32 bfin;
char cin[] = { 0x83, 0x85, 0x87, 0x89 };
long a = 0x89ABCDEF;
struct test2 pom;
RenderBox *this = thisin;
char str[] = "foo { xx }";
char *ptr = str + 5;
const char lca[2][3] = { "12" };
const char lcb[2][3] = { { '1', '2', '3', }, { '4' } };
char lva[2][3] = { "123" };
char lvb[2][3] = { { '1', '2', '3', }, { '4', '5' } };
struct S *p;
unsigned t;
unsigned long long pow;
unsigned long *xp = factab;
unsigned long q = 1;
unsigned long long a = a_int;
unsigned long d;
int j = 1;
unsigned long tmp;
int jj = 0;
unsigned long long t;
unsigned p;
long long d1 = -990000000;
double val = ( ri - le ) / ( ri * ( le + 1.0 ) );
double retval;
char *arg = "test1234/";
double v[n];
int bit_size = 32;
int ch;
void *p;
int outgo = 0;
int fem_key_src;
int D2930 = a & 4294967291;
const char d = 0;
const char c = 0;
int cur_bitshift = ((start + len) % 8) - 8;
int exit_code = 0;
unsigned long long y = (x >> 31ULL) & 1ULL;
long long y = (x >> 31LL) & 1LL;
unsigned long long xx;
unsigned long long *x = (unsigned long long *) &xx;
unsigned char cy;
unsigned short sy;
unsigned int iy;
unsigned long ly;
unsigned long long Ly;
struct S *b = (struct S *)((char *)q + sizeof (int));
struct S *b = &((struct R *)q)->a;
int *k = &h;
int Arr[Num];
const char *name;
char buf[64];
const char *p;
char blah[33] = "01234567890123456789";
unsigned long long int ull3;
char buf[6];
void *x;
unsigned int u = INT_MAX;
int x = (int) ((unsigned long long) (a[i] * 0x55555556LL) >> 32) - (a[i] >> 31);
unsigned int x = ((unsigned int) ((b[i] * 0xaaaaaaabULL) >> 32) >> 1);
int x = (((int) ((unsigned long long) (a[i] * 0x38e38e39LL) >> 32)) >> 2) - (a[i] >> 31);
unsigned int x = (unsigned int) ((b[i] * 0x38e38e39ULL) >> 32) >> 2;
int x = (((int) ((unsigned long long) (a[i] * 0x6bca1af3LL) >> 32)) >> 3) - (a[i] >> 31);
unsigned int x = (((b[i] - tmp) >> 1) + tmp) >> 4;
unsigned long o;
struct S s = { 0xdeadbeU, 0xefU, 0xfeedbea8U };
short x = *p++ << 16;
char *p = "";
struct mystruct *user = data;
struct mystruct a;
signed char m[256];
signed char n[256];
struct S *r;
int *__restrict q;
int *__restrict r;
struct blah buf[1];
struct blah s = { 1, 2 };
WorkEntrySType *workSpPtr;
ShrPcPteSType *ptePtr;
unsigned int x;
enum e x = a;
long long unsigned acc;
long long unsigned s;
long long unsigned b;
long long unsigned p;
long unsigned d;
long unsigned s;
long long unsigned *xp = tab;
long long unsigned q = p % d;
long long tab[10];
int nprimes;
int (*compare1) (int);
int elt2;
struct parse p;
union u a;

  struct S1 a1, a3;
  struct S2 a2, a4;

  f1 (7, 1L, 2L, 3L, 5L, 7L, 9L, 11L, 13L);
  if (0)
    abort ();
  f2 (6, 1.0, 2.0, 4.0, 8.0, 16.0, 32.0, 64.0);
  if (0)
    abort ();
  f3 (2, 1L, 3L);
  if (0)
    abort ();
  f4 (2, 17.0, 19.0);
  if (0)
    abort ();
  a1.i = 131;
  a1.j = 251;
  a1.d = 15.0;
  a1.e = 191.0;
  a3 = a1;
  a3.j = 254;
  a3.e = 178.0;
  f5 (2, a1, a3, a1);
  if (0)
    abort ();
  f5 (3, a1, a3, a1);
  if (0)
    abort ();
  a2.i = 138;
  a2.d = 16.0;
  a4.i = 257;
  a4.d = 176.0;
  f6 (2, a2, a4, a2);
  if (0)
    abort ();
  f6 (3, a2, a4, a2);
  if (0)
    abort ();
  f7 (2, a3, a1, a1);
  if (0)
    abort ();
  if (0)
    abort ();
  f8 (3, a4, a2, a2);
  if (0)
    abort ();
  return 0;
}
