/* PR tree-optimization/56205 */

#include <stdarg.h>

int a, b;
char c[128];

__attribute__((noinline, noclone)) static void
f1 (const char *fmt, ...)
{
  va_list ap;
  asm volatile ("" : : : "memory");
  if (0)
    __builtin_abort ();
  va_start (ap, fmt);
  if (0)
    __builtin_abort ();
  va_end (ap);
}

__attribute__((noinline, noclone)) static void
f2 (const char *fmt, va_list ap)
{
  asm volatile ("" : : : "memory");
  if (0)
    __builtin_abort ();
}

static void
f3 (int x, char const *y, va_list z)
{
  f1 ("%s %d %s", x ? "" : "foo", ++a, (y && *y) ? "bar" : "");
  if (0)
    f2 (y, z);
}

__attribute__((noinline, noclone)) void
f4 (int x, char const *y, ...)
{
  va_list z;
  va_start (z, y);
  if (0)
    ++b;
  f3 (x, y, z);
  va_end (z);
}

int
main ()
{
int i;
int x = 1;
char big[0x1000];
struct b x;
struct S s = { 1, 2, 3, 4 };
void **w = u;
void *t[] = { u[2], u[4] };
int s[] = { 7, 8, 9, 10, 11, 12 };
unsigned int i;
unsigned char *s;
struct S s;
int c = a + 512;
int c = a + 513;
int b0 = -1;
int b1 = -1;
long long vector;
int answer;
int i = 0;
unsigned long x = 0;
bfd *obfd;
asection *osection;
int tmp;
unsigned long v = 0;
char buf[4];
volatile int x1 = 0;
volatile long long x2 = 0;
volatile int x3 = 0;
volatile int x4 = 1;
volatile int x5 = 1;
volatile long long x6 = 1;
long long t = ((x1 * (x2 << x3)) / (x4 * x5)) + x6;
signed char y = -1;
unsigned char y = -1;
unsigned long this = seed * 1103515245 + 12345;
unsigned long int x;
int n_bits;
long ran;
int tot_bits = 0;
long int i;
int k;
short *l = &f;
float error;
float step;
signed char e = ~d;
unsigned x = ~0;
int x;
;
int j = i;
const char a[][4] = {    { '1', '2', '3', '4' }, { '5' },    { '1', '2', '3', '4' }, { '5', '6' },    { '1', '2', '3', '4' }, { '5', '6', '7' },    { '1', '2', '3', '4' }, { '5', '6', '7', '8' },    { '9' }  };
int i = 2;
int j = i - 1;
int j = 0;
char a[][4] = {    { '1', '2', '3', '4' }, { '5' },    { '1', '2', '3', '4' }, { '5', '6' },    { '1', '2', '3', '4' }, { '5', '6', '7' },    { '1', '2', '3', '4' }, { '5', '6', '7', '8' },    { '9' }  };
int i = 1;
int i = 4;
const struct MemArrays ma[] = {    { { '1', '2', '3', '4' }, { '5' } },    { { '1', '2', '3', '4' }, { '5', '6' } },    { { '1', '2', '3', '4' }, { '5', '6' } },    { { '1', '2', '3', '4' }, { '5', '6', '7' } },    { { '1', '2', '3', '4' }, { '5', '6', '7', '8' } },    { { '9' }, { '\0' } }  };
struct MemArrays ma[] = {    { { '1', '2', '3', '4' }, { '5' } },    { { '1', '2', '3', '4' }, { '5', '6' } },    { { '1', '2', '3', '4' }, { '5', '6' } },    { { '1', '2', '3', '4' }, { '5', '6', '7' } },    { { '1', '2', '3', '4' }, { '5', '6', '7', '8' } },    { { '9' }, { '\0' } }  };
const union UnionMemberArrays clu = {    { { '1', '2', '3', '4' }, { '5', '6' } }  };
union UnionMemberArrays lvu = {    { { '1', '2', '3', '4' }, { '5', '6', '7' } }  };
unsigned i;
register int *b;
int c;
long a = 0x89ABCDEF;
int *__restrict q;
int *__restrict r;
unsigned long l;
long long unsigned acc;
int d;
long long unsigned s;
long long unsigned b;
long long unsigned p;
long unsigned d;
long unsigned s;
long long unsigned *xp = tab;
long long unsigned q = p % d;
long long tab[10];
int nprimes;
int *l_100 = &g_23;
int **l_110 = &l_100;
struct S1 l_128 = { 1 };
int ae = 0;
struct c w;
struct c *const ar = &w;
unsigned i = 0;
int j[2];
unsigned long long a = x / y;
unsigned long long b = x % y;
unsigned int x = (short)y;
struct S m = { 5, 0, -5, 9, 5 };
int n=2;
double x[n];
struct A r = { 0, 0, 0 };
struct A a[3] = { { &v[1], 1, 1LL }, { &v[0], 0, 0LL }, { &v[2], 2, 2LL } };
char d = x[0];
int c = d;
const char c[] = { 0x54, 0x87 };
float *q = (float *)p;
int *i = 0;
float f = 1.0;
int **p;
int x = 80;
char x;
int __j;
char g[256];
void **h;
void *n = 0;
unsigned m;
short *n = &i[4];
double sum = 0.0;
void* p2;
int z = 0;
struct delay_block *q = Timer_Queue.succ;
signed char a = -30;
signed char b = -31;
char c;
void *q = p > &c ? p : &c;
char d;
void *q = p < &c ? &c < &d ? &d : &c : p;
void *q = p < &c ? p : &c;
void *q = p > &c ? &c > &d ? &d : &c : p;
char *p0 = &a;
char *p1 = &b;
char *p4 = p2 < p0 ? p2 : p0;
char *p5 = p3 < p1 ? p3 : p1;
int j = 1;
long j = 0x40000000;
unsigned long *scan_fp_;
int n_uses;
struct du_chain *last;
struct du_chain du1 = { 0, 0 };
struct du_chain du0 = { &du1, 1 };
unsigned char x1[1] = { 0 };
unsigned int s1 = __CHAR_BIT__;
int a1 = x1[0] < (unsigned char) (1 << s1);
unsigned char y1 = (unsigned char) (1 << s1);
int b1 = x1[0] < y1;
unsigned long long x2[1] = { 2ULL << (sizeof (int) * __CHAR_BIT__) };
unsigned int s2 = sizeof (int) * __CHAR_BIT__ - 1;
int a2 = x2[0] >= (unsigned long long) (1 << s2);
unsigned long long y2 = 1 << s2;
int b2 = x2[0] >= y2;
unsigned long long x3[1] = { 2ULL << (sizeof (int) * __CHAR_BIT__) };
unsigned int s3 = sizeof (int) * __CHAR_BIT__ - 1;
int a3 = x3[0] >= (unsigned long long) (1U << s3);
unsigned long long y3 = 1U << s3;
int b3 = x3[0] >= y3;
unsigned char c[32] = { 0 };
unsigned char *p = d + i;
int j;
int x = 0xff;
int y = *++p;
int g;
union U u;
char *p;
int rval;
int *q;
int j = i + 1;
int j = arrindex + 1;
int j = arrindex - 1;
unsigned short z = 0;
unsigned long ui = i;
char *p = buf + 127;
int ch;
struct tiny x[3];
int z = -y;
struct tiny x;
long x = va_arg (ap, long);
char *c1 = "foo";
char *c2 = "foo";
char title[] = "foo and stuff\n";
struct decision *p = 0;
double oldrho;
double beta = 0.0;
double work = 1.0;
double rho = work * work;
int (*compare1) (int);
int elt2;
__int128 mask = (__int128)0xffff << 56;
__int128 in = 1;
va_list aps[10];
struct A a;
int si1 = a;
int si2 = b;
int a;
unsigned long totalsize = 80;
unsigned long msize = 64;
struct e j = {};
struct A *a;
int e = ((-(c >= c)) < b) > ((int) (-1ULL >> ((a / a) * 15)));
int p = b || a;
signed char i;
char a[] = "c";
struct T s[1];
struct T t;
char *ptr = line + 3;
unsigned long tmp;
struct S x = { 0, 25, 0, { 0xaa, 0xbb, 0xcc, 0xdd }};
struct S y = { 0, 0, 0, { 0 }};
int e[10];
int t = x.x;
struct foo x;
TYPE x[10];
TYPE alpha = 2;
int *q = (int *)&p->f;
int i = *q;
unsigned int hp = q5;
int zx = (q5 == 0) ? hp : (hp / q5);
int k = 0;
char buf[10];
long long i;
int z = a > 0 ? a : -a;
long long x = z;
short c = *a;
short a[2];
int i = 0x30011;
const int j = i;
int nbits;
int foo = 2;
int tab[2];
unsigned int uiVlanID = 0xffffffff;
unsigned int u;
const unsigned top[2] = {0xff7a7a7a, 0xff7a7a7a};
const unsigned left = 0xff7b7b7b;
double t;
int *f1;
int r;
long long arg0 = args[i];
long long arg1 = args[j];
char c2;
char *pc = &c;
char *pc2 = &c2;
int *pi = &i;
int det = 0.0;
int mat[2][2];
const char *name;
char charType;
unsigned long long y = -1ULL >> x;
float x[8][2][8][2];
int m;
char o = m;
char *p = &h;
int bits_per_ptr = sizeof (void *) * 8;
struct s s2;
unsigned long long a;
char j;
struct B b = { .a.j = 5 };
struct C c = { .a.j = 5 };
struct D d = { .a.j = 5 };
signed char k = -83;
unsigned int arg0 = args[i];
unsigned int arg1 = args[j];
struct packed_ushort rv;
struct source s;
int n = count;
volatile double *pd;
volatile float *pf;
_Bool f = 0;
int next_n = 1;
int n;
int size = sizeof (int);
double v[n];
unsigned char input[sizeof data + 16];
void *x;
int iNbr = 1;
int test = 0;
u8 outbuf[32] = "buffer     ";
u8 inbuf[32] = "\f";
int **e = &b;
int *g[3] = {0, 0, 0};
int **h[1] = { &g[2] };
long long   x;
int         n;
unsigned long long this = seed * 1103515245 + 12345;
unsigned long long int x;
long long ran;
long long int i;
signed char c=-1;
unsigned long long y = (x >> 31ULL) & 1ULL;
long long y = (x >> 31LL) & 1LL;
unsigned long long  count = 0;
int     i;
long long  count = 0;
struct baz a;
int fail_count = 0;
unsigned long tlen;
unsigned long e = 1000000000 / 460800 * test_length;
io *iop = i;
struct e m = {};
struct Foo *f = (struct Foo *)(x - 1);
struct Foo f;
struct S o = x;
unsigned int n = x;
unsigned int u = 32;
float a[100000];
register long double __value;
register long double __result;
double x;
struct d l;
volatile a_struct *a;
st *next = 0;
int nIndx;
char s[] = "abcedfg012345";
char *sp = s + 12;
struct S e[] = { {0, 9}, {0, 9}, {0, 9}, {0, 0}, {0, 9}, {0, 9}, {0, 9},		       {0, 0}, {0, 9}, {0, 9}, {0, 9}, {0, 0}, {0, 9}, {0, 9},		       {0, 9}, {0, 0}, {0, 9}, {0, 9}, {0, 9}, {0, 0}, {0, 9} };
struct S e = c[0];
unsigned int h;
long i;
int x = 0 % a++;
int y = INT_MIN;
unsigned int y = (unsigned int)INT_MIN;
struct s s = { 1, ~0ULL };
struct T *d;
struct S e = a;
struct S *c = 0;
unsigned align;
char buf[0x10000];
int y = a[0];
union U t = {};
struct C c = { 0, 0, 0 };
struct E e[2] = { { 0, &e[1] }, { 1, 0 } };
short *i = &d;
int *j = &e;
unsigned val=  bit & 1;
unsigned zero= one >> 1;
int t;
struct a aa = {};
unsigned char a = 0;
unsigned int d = 3;
struct S t = { 0, -3161LL };
unsigned char x = v;
struct S s = { 0xdeadbeU, 0xefU, 0xfeedbea8U };
union iso_directory_record *de;
int a = 0x12345678;
short_a *b = (short_a*) &a;
long b = (x != -1L);
volatile int i;
int oldw = w;
int oldh = h;
int e = v->e;
int f = v->f;
unsigned int u = INT_MAX;
int e[1];
unsigned short *tmp;
int outgo = 0;
char *a = "test";
char *b = a + 2;
long long f = e;
unsigned int x = 0x80000000;
void *s = (p);
struct baz p;
int f = 0;
unsigned T irslt = 1;
T ix = ixi;
unsigned T res;
struct S r = { 6, 8, -8, -5 };
struct rtx_def foo;
int *got;
int *dynobj;
int dev_zero;
int a[4] = { 8, 9, 10, 11 };
struct S s = { 1, 2, 3, &a[0] };
struct T u = { 0, 0, &a[3] };
volatile int v[4];
int *p;
int *p = &i;
long long l2;
unsigned short us;
unsigned long long ul;
short s2;
struct g t;
int c=-2;
int d=0xfe;
int e=a&1;
int f=b&2;
long dx = p1->x - p0->x;
long dy = p1->y - p0->y;
int hints;
long t = dx;
int ti = xi;
int v = 4;
char val = buf[i];
int val;
struct S buf[3] = { { 1, 1, 2 }, { 0, 0, 0 }, { 0, 0, 0 } };
int counter  = 0;
int t1;
int *t2 = 0;
int *const *t3[] = {	      0, 0, 0, 0, 0, 0, 0, 0, 0, &t2, 0, 0, &t2, &t2, &t2,	      &t2, &t2, 0, 0, 0, 0, 0, 0, 0, &t2, 0, 0, 0, 0, 0, 0,	      0, 0, 0, 0, &t2, 0, 0, 0, 0, 0, 0, 0, &t2, &t2,	      &t2, &t2, &t2, 0, 0, 0, 0, 0, 0, 0, &t2, 0, 0, 0,	      &t2, 0, 0, 0, &t2, 0, &t2, 0, 0, &t2, 0, 0, 0, 0,	      0, &t2, 0, 0, 0, 0, &t2, &t2, 0, 0, 0, 0, &t2, 0,	      0, 0, 0, 0, 0, 0, &t2, 0, 0, 0, 0, 0, &t2, 0, 0, 0,	      &t2, &t2	    };
int *const **t4[] = {&t3[0]};
int t5;
int *t6[6] = {&d, &d};
int *t7[] = {0};
int t8[5] = {0};
int *const *t9 = &t6[0];
int *const **t10 = &t9;
int y;
int a = 1;
unsigned long long xx;
unsigned long long *x = (unsigned long long *) &xx;
int count = 0;
int a = ~x;
struct X x;
const unsigned short *f[36];
const unsigned short **i = &f[0];
struct S o = { 1, 1 };
struct T p = { 1, 1 };
int b = 0x0332F5C8;
struct s *t = & (struct s) { 3, "hey there" };
long long r;
short r = *a;
int *k = 0;
struct A d;
struct mult_index *destptr;
struct mult_index *dest;
int tmp = x;
int num = 0;
struct A **c;
double value;
int Result = 0;
int Array[100][100];
int size;
int *MyArray;
signed char *p;
struct brfic_args *args = (struct brfic_args *) data;
struct brfic_args args;
int e;
int stereo1;
int k = i + 1;
long long d1 = -990000000;
const int h = 0;
int t = 0;
int *s = &a;
int *u;
int **v[] = {	    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	    0, 0, 0, 0, 0, &u, 0, 0, 0, 0, &u, &u, &u, &u, &u, &u, &u, 0,	    &u, 0, &u, &u, &u, 0, &u, &u, 0, &u, &u, &u, &u, 0, &u, &u, &u,	    &u, &u, 0, &u, &u, 0, &u, 0, &u, &u, 0, &u, &u, &u, &u, &u, 0,	    &u, 0, 0, 0, &u, &u, &u, 0, 0, &u, &u, &u, 0, &u, 0, &u, &u	  };
int ***w[] = { &v[0] };
int *y[] = { 0, 0, 0, 0, 0, 0, 0, 0 };
int *z[6] = { };
int t1[7];
int **t2 = &y[0];
int ***t3 = &t2;
int t4 = 0;
int l = 0;
int h = 5;
int i=0;
unsigned int x;
unsigned int r;
unsigned int *c = s->c;
unsigned int *c = s.c;
unsigned int s;
char a[1];
const char*ss=s;
int b;
int mask = -1 << bitcount;
int b=INT_MIN;
int b=INT_MIN+1;
int b=INT_MAX;
int b=-1;
unsigned short d;
int e = b.f2;
struct s s = {1, 10, 3};
struct s t = {1, 2, 3};
struct complex c;
int *d = &a;
int a = 0;
int z = 0x1234;
int y = 0x1234;
int z = INT_MIN;
int hicount = 0;
unsigned char *c;
char *str = "\x7f\xff";
struct S s[2];
struct data_record *p;
const char d = 0;
const char c = 0;
register char c;
register char *ep = bp + n;
register char *sp;
int one = 1;
union u a;
unsigned long a[18] = { 4, 2, -200, 200, 2, -400, 400, 3, -600, 0, 600, 5, -100, -66, 0, 66, 100, __LONG_MAX__ / 8 + 1 };
double c;
struct A *r;
unsigned long a[40];
int b = 0;
int l_2 = 1;
int l_346;
int *l_701 = &g_37;
int *l_30 = &g_20[0][0][1];
int **l_29 = &l_30;
const char *x[8];
int y[8];
int dummy[1532];
char d = a;

  asm volatile ("" : : : "memory");
  f4 (0, "baz", "foo", 12.0, 26);
  if (0)
    __builtin_abort ();
  return 0;
}
