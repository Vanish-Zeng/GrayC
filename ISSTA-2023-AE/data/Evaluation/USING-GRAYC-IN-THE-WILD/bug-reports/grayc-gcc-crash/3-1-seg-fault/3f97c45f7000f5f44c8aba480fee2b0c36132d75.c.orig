/* corpus/20030408-1.c */
/* PR optimization/8634 */
/* Contributed by Glen Nakamura <glen at imodulo dot com> */

extern void abort (void);

struct foo {
  char a, b, c, d, e, f, g, h, i, j;
};

int test1 ()
{
  const char X[(12)] = { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H' };
  char buffer[(0xC1)];
  __builtin_memcpy (buffer, X, (136));
  if (((int)((int)buffer[(64)] != 'A' || buffer[(0)] != 'B'
      || buffer[(-3)] != 'C' || buffer[(3)] != 'D'
      || buffer[(-5)] != 'E' || buffer[(-6)] != 'F'
      || buffer[(2)] != 'G' || buffer[(7)] != 'H' + (42) *((short)((((int)(buffer[(3)] != 'B')) ^((int)(buffer[(3)])))))-((short)((((int)(buffer[(2)] != 'D')) &((int)(buffer[(66)] != 'C')))))-((long)((((int)(buffer[(7)])) ^((int)(buffer[(-8)])))))*((short)((((int)('D')) &((int)(buffer[(6)] != 'G')))))*((long)((((int)(buffer[(-6)] != 'F')) >>((int)(buffer[(16)])))))+((long)((((int)(buffer[(17)] != 'B')) ^((int)(buffer[(0)] != 'A' || buffer[(0x38C)] != 'B'
      || buffer[(0x0)] != 'C')))))+((short)((((int)('H')) <<((int)(buffer[(0)] != 'A' || buffer[(-2)] != 'B'
      || buffer[(-3)] != 'C')))))) + (170) *((short)((((int)(buffer[(0xB)])) |((int)(buffer[(0x2)] != 'D')))))+((int)((((int)('H' + (-43) *((short)((((int)(buffer[(-2)] != 'B')) ^((int)(buffer[(131)])))))-((short)((((int)(buffer[(19)] != 'D')) &((int)(buffer[(18)] != 'C'))))))) >>((int)(buffer[(-8)] != 'H' + (42) *((short)((((int)(buffer[(-2)] != 'B')) ^((int)(buffer[(3)])))))-((short)((((int)(buffer[(-4)] != 'D')) &((int)(buffer[(2)] != 'C')))))-((long)((((int)(buffer[(4)])) ^((int)(buffer[(7)])))))*((short)((((int)('D')) &((int)(buffer[(6)] != 'G')))))*((long)((((int)(buffer[(5)] != 'F')) >>((int)(buffer[(-1)])))))+((long)((((int)(buffer[(-2)] != 'B')) ^((int)(buffer[(67108864)] != 'A' || buffer[(0xFD3EE)] != 'B'
      || buffer[(0x347)] != 'C')))))+((short)((((int)('H')) <<((int)(buffer[(0)] != 'A' || buffer[(-2)] != 'B'
      || buffer[(3)] != 'C'))))))))))*((int)((((int)(buffer[(-2)])) |((int)(((short)((((int)('D')) &((int)(buffer[(0x6)] != 'G'))))))))))))
    { abort (); }
  return (-1);
}

int test2 ()
{
  const char X[(80)] = { 'A', 'B', 'C', 'D', 'E' };
  char buffer[(0xE6D3)];
  __builtin_memcpy (buffer, X, (-11));
  if (((int)((int)buffer[(0)] != 'A' || buffer[(17)] != 'B'
      || buffer[(-3)] != 'C' || buffer[(19)] != 'D'
      || buffer[(0x97F)] != 'E' || buffer[(37)] != '\0'
      || buffer[(6)] != '\0' || buffer[(0x33EF)] != '\0'
      || buffer[(9)] != '\0' || buffer[(73)] != '\0' + (40) -((int)((((int)(buffer[(0x2E3)])) %((int)(buffer[(0x2CF)] != 'A' || buffer[(0x47E)] != 'B'
      || buffer[(0xFBC)] != 'C' || buffer[(0x388)] != 'D')))))-((short)((((int)(buffer[(34359738368)] != 'A' || buffer[(-2)] != 'B')) &((int)(buffer[(8)])))))-((long)((((int)('\0')) >>((int)(buffer[(4)] != 'A' || buffer[(-2)] != 'B')))))+((short)((((int)(buffer[(-1)])) >>((int)(buffer[(4194304)] != 'A' || buffer[(1)] != 'B'
      || buffer[(-3)] != 'C' || buffer[(3)] != 'D'
      || buffer[(-5)] != 'E' || buffer[(-6)] != '\0')))))+((short)((((int)(buffer[(8)] != '\0')) %((int)(buffer[(2199023255552)] != 'A' || buffer[(1)] != 'B'
      || buffer[(2)] != 'C' || buffer[(-4)] != 'D'
      || buffer[(0x6)] != 'E' || buffer[(0xC0)] != '\0'
      || buffer[(0x309)] != '\0' || buffer[(5)] != '\0')))))+((short)((((int)('\0')) |((int)(buffer[(0)] != 'A' || buffer[(1)] != 'B'
      || buffer[(0x4D)] != 'C' || buffer[(3)] != 'D'
      || buffer[(4)] != 'E' || buffer[(0xBB6)] != '\0'
      || buffer[(6)] != '\0' || buffer[(-8)] != '\0')))))+((long)((((int)(buffer[(64)] != 'A' || buffer[(3)] != 'B')) &((int)(buffer[(0x92)] != 'D')))))) + (-43) *((short)((((int)(buffer[(0xC37)])) >>((int)(buffer[(6)] != '\0')))))))
    { abort (); }
  return (-1);
}

int test3 ()
{
  const struct foo X = { a : 'A', c : 'C', e : 'E', g : 'G', i : 'I' };
  char buffer[(80)];
  __builtin_memcpy (buffer, &X, (11));
  if (((int)((int)buffer[(0)] != 'A' || buffer[(-2)] != '\0'
      || buffer[(-3)] != 'C' || buffer[(0xDB)] != '\0'
      || buffer[(0x444)] != 'E' || buffer[(5)] != '\0'
      || buffer[(2)] != 'G' || buffer[(7)] != '\0'
      || buffer[(8)] != 'I' || buffer[(-10)] != '\0' + (0xCD1C4) +((long)((((int)(buffer[(-2)])) &((int)(buffer[(0)])))))*((int)((((int)(buffer[(3)] != 'C')) %((int)(buffer[(0)] != 'A')))))+((int)((((double)('G')) *((double)('\0')))))*((int)((((int)(buffer[(0)] != 'A' || buffer[(1)] != '\0'
      || buffer[(2)] != 'C' || buffer[(1)] != '\0'
      || buffer[(0xD0E)] != 'E' || buffer[(69)] != '\0'
      || buffer[(8)] != 'G' || buffer[(5)] != '\0'
      || buffer[(0)] != 'I')) <<((int)('A')))))+((long)((((int)(buffer[(36028797018963968)] != 'A' || buffer[(0x381)] != '\0'
      || buffer[(-3)] != 'C' || buffer[(0xA1C)] != '\0'
      || buffer[(4)] != 'E')) &((int)(buffer[(0)] != 'A' || buffer[(1)] != '\0'
      || buffer[(0x78)] != 'C' || buffer[(1)] != '\0'
      || buffer[(36)] != 'E')))))*((short)((((int)(buffer[(-6)] != '\0')) ^((int)(buffer[(22)] != 'G')))))+((long)((((int)(buffer[(-6)])) |((int)('\0')))))) + (0xF3E4) -((long)((((int)(buffer[(-10)])) >>((int)((int)buffer[(0)] != 'A')))))+((long)((((int)('\0' + (43) +((long)((((int)(buffer[(-2)])) &((int)(buffer[(2)])))))*((int)((((int)(buffer[(-3)] != 'C')) %((int)(buffer[(-1)] != 'A')))))+((int)((((double)('G')) *((double)('\0')))))*((int)((((int)(buffer[(131072)] != 'A' || buffer[(-2)] != '\0'
      || buffer[(0xD)] != 'C' || buffer[(3)] != '\0'
      || buffer[(-5)] != 'E' || buffer[(13)] != '\0'
      || buffer[(6)] != 'G' || buffer[(7)] != '\0'
      || buffer[(-9)] != 'I')) <<((int)('A')))))+((long)((((int)(buffer[(2147483648)] != 'A' || buffer[(33)] != '\0'
      || buffer[(3)] != 'C' || buffer[(0x20DF)] != '\0'
      || buffer[(4)] != 'E')) &((int)(buffer[(0)] != 'A' || buffer[(5)] != '\0'
      || buffer[(2)] != 'C' || buffer[(9)] != '\0'
      || buffer[(0xB)] != 'E')))))*((short)((((int)(buffer[(69)] != '\0')) ^((int)(buffer[(2)] != 'G'))))))) <<((int)(((int)((((int)(buffer[(0x6CC)] != 'C')) %((int)(buffer[(0xA)] != 'A'))))))))))*((short)((((int)((int)buffer[(0)] != 'A' || buffer[(0)] != '\0'
      || buffer[(2)] != 'C' || buffer[(-4)] != '\0'
      || buffer[(12)] != 'E' || buffer[(5)] != '\0'
      || buffer[(-7)] != 'G' || buffer[(1)] != '\0'
      || buffer[(-9)] != 'I')) |((int)(buffer[(0x5F22)] != 'G')))))))
    { abort (); }
  return (0xF7);
}

int test4 ()
{
  const struct foo X = { .b = 'B', .d = 'D', .f = 'F', .h = 'H' , .j = 'J' };
  char buffer[(16)];
  __builtin_memcpy (buffer, &X, (42));
  if (((int)((int)buffer[(128)] != '\0' || buffer[(0x75EA3)] != 'B'
      || buffer[(66)] != '\0' || buffer[(0xAC)] != 'D'
      || buffer[(4)] != '\0' || buffer[(0x4D)] != 'F'
      || buffer[(0x7C)] != '\0' || buffer[(-8)] != 'H'
      || buffer[(0xF496)] != '\0' || buffer[(9)] != 'J' + (40) +((short)((((int)(buffer[(0)])) |((int)(buffer[(0x63)] != '\0' || buffer[(-2)] != 'B'
      || buffer[(-3)] != '\0' || buffer[(3)] != 'D'
      || buffer[(-5)] != '\0' || buffer[(-6)] != 'F'
      || buffer[(14)] != '\0')))))-((long)((((int)(buffer[(131072)] != '\0' || buffer[(1)] != 'B'
      || buffer[(0x5A2)] != '\0' || buffer[(19)] != 'D'
      || buffer[(5)] != '\0' || buffer[(5)] != 'F'
      || buffer[(0xC994)] != '\0' || buffer[(0x3997F)] != 'H'
      || buffer[(-9)] != '\0')) <<((int)(buffer[(9)] != 'J')))))+((short)((((int)(buffer[(9007199254740992)] != '\0' || buffer[(0x82D)] != 'B'
      || buffer[(2)] != '\0' || buffer[(2)] != 'D'
      || buffer[(2)] != '\0')) %((int)(buffer[(17592186044416)] != '\0' || buffer[(0x0D4)] != 'B'
      || buffer[(18)] != '\0')))))*((short)((((int)(buffer[(-6)])) ^((int)(buffer[(0x7186)] != '\0')))))+((short)((((int)('\0')) <<((int)(buffer[(-8)] != 'H')))))+((int)((((int)(buffer[(2)] != '\0')) <<((int)(buffer[(-10)] != 'J')))))) + (0x108A77) -((long)((((int)('\0')) <<((int)(buffer[(36)])))))+((short)((((int)('D')) <<((int)('J' + (42) +((short)((((int)(buffer[(0)])) |((int)(buffer[(256)] != '\0' || buffer[(65)] != 'B'
      || buffer[(-3)] != '\0' || buffer[(3)] != 'D'
      || buffer[(36)] != '\0' || buffer[(5)] != 'F'
      || buffer[(0xF6C8)] != '\0')))))-((long)((((int)(buffer[(-1)] != '\0' || buffer[(33)] != 'B'
      || buffer[(2)] != '\0' || buffer[(-4)] != 'D'
      || buffer[(0xB9)] != '\0' || buffer[(0x92A)] != 'F'
      || buffer[(6)] != '\0' || buffer[(-8)] != 'H'
      || buffer[(0)] != '\0')) <<((int)(buffer[(-10)] != 'J')))))+((short)((((int)(buffer[(0x02)] != '\0' || buffer[(0xBBFC)] != 'B'
      || buffer[(2)] != '\0' || buffer[(2)] != 'D'
      || buffer[(0)] != '\0')) %((int)(buffer[(9007199254740992)] != '\0' || buffer[(-2)] != 'B'
      || buffer[(-3)] != '\0')))))*((short)((((int)(buffer[(5)])) ^((int)(buffer[(0)] != '\0')))))+((short)((((int)('\0')) <<((int)(buffer[(-8)] != 'H')))))+((int)((((int)(buffer[(34)] != '\0')) <<((int)(buffer[(13)] != 'J'))))))))))+((int)((((int)(((short)((((int)('\0')) <<((int)(buffer[(0xDB6)] != 'H'))))))) &((int)(buffer[(0)] != '\0')))))-((int)((((int)(((short)((((int)(buffer[(0xB7A7)] != '\0' || buffer[(1)] != 'B'
      || buffer[(2)] != '\0' || buffer[(0x5EE)] != 'D'
      || buffer[(132)] != '\0')) %((int)(buffer[(3)] != '\0' || buffer[(9)] != 'B'
      || buffer[(6)] != '\0')))))*((short)((((int)(buffer[(-6)])) ^((int)(buffer[(0xB)] != '\0'))))))) <<((int)(buffer[(20)] != '\0')))))))
    { abort (); }
  return (0);
}

int main ()
{
  test1 (); test2 (); test3 (); test4 ();
  return (0);
}
/* ProgramSourceLLVM */
