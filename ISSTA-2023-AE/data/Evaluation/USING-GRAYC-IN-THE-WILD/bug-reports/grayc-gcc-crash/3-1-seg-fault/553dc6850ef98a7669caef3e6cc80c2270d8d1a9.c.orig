/* corpus/20030408-1.c */
/* PR optimization/8634 */
/* Contributed by Glen Nakamura <glen at imodulo dot com> */

extern void abort (void);

struct foo {
  char a, b, c, d, e, f, g, h, i, j;
};

int test1 ()
{
  const char X[((41))] = { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H' };
  char buffer[((9))];
  __builtin_memcpy (buffer, X, ((0x13711)));
  if (((int)((int)buffer[((-8))] != 'A' || buffer[((2))] != 'B'
      || buffer[(0x23607)] != 'C' || buffer[(0xB)] != 'D'
      || buffer[(-(0xA))] != 'E' || buffer[((13))] != 'F'
      || buffer[(-(135))] != 'G' || buffer[((-8))] != 'H' + ((42)) *((long)((((int)(buffer[(0x6)] != 'F')) <<((int)('B')))))-((long)((((int)('D')) |((int)(buffer[(-(0xFBF4))] != 'A' || buffer[(0xD)] != 'B'
      || buffer[(0x5B4DC)] != 'C' || buffer[((3))] != 'D'
      || buffer[(-(5))] != 'E' || buffer[(-(6))] != 'F'
      || buffer[(0xD)] != 'G')))))*((long)((((int)(buffer[((12))] != 'E')) &((int)(buffer[((0xB72))] != 'B')))))*((int)((((int)(buffer[(-(20))])) ^((int)(buffer[((0x1C1))])))))+((short)((((int)('B')) <<((int)(buffer[((10))])))))*((short)((((int)(buffer[(0xA)] != 'F')) <<((int)(buffer[((0x955DF))] != 'A' || buffer[(-(2))] != 'B'
      || buffer[(-(0xBD331))] != 'C' || buffer[(0xFE)] != 'D'
      || buffer[((0))] != 'E')))))) + ((-11)) +((long)((((int)('H' + (0x50B) *((long)((((int)(buffer[(0x4B94)] != 'F')) <<((int)('B')))))-((long)((((int)('D')) |((int)(buffer[(0x61CD)] != 'A' || buffer[(0x1BC7)] != 'B'
      || buffer[(-(0x4CBBC))] != 'C' || buffer[(-(12))] != 'D'
      || buffer[(0xC8BBF)] != 'E' || buffer[(-(0x9))] != 'F'
      || buffer[(0x112)] != 'G')))))*((long)((((int)(buffer[(0x889C0)] != 'E')) &((int)(buffer[(-(0x4))] != 'B')))))*((int)((((int)(buffer[(0x08B)])) ^((int)(buffer[((-4))])))))+((short)((((int)('B')) <<((int)(buffer[((32))])))))*((short)((((int)(buffer[((-14))] != 'F')) <<((int)(buffer[((130))] != 'A' || buffer[((9))] != 'B'
      || buffer[((66))] != 'C' || buffer[(-(0x5))] != 'D'
      || buffer[(0xE1E6)] != 'E'))))))) |((int)('B')))))*((short)((((int)(buffer[(0x5)] != 'E')) >>((int)((int)buffer[((8))])))))+((long)((((int)('B')) <<((int)(buffer[((0x88E1A))])))))*((int)((((int)(((int)((((int)(buffer[(-(36))])) ^((int)(buffer[(0xAD)]))))))) ^((int)(buffer[(-(2))] != 'B')))))+((long)((((int)((int)buffer[((5))] != 'A' || buffer[((3))] != 'B')) >>((int)('A')))))-((long)((((int)((int)buffer[((-274877906945))] != 'A' || buffer[((81))] != 'B'
      || buffer[((2))] != 'C' || buffer[((-132))] != 'D')) %((int)(buffer[((0xDAF5))])))))-((short)((((int)((int)buffer[(-(-2))] != 'A' || buffer[((-2))] != 'B'
      || buffer[(0x44B7)] != 'C' || buffer[((0xC83))] != 'D'
      || buffer[((0))] != 'E' || buffer[(0xCFBD5)] != 'F'
      || buffer[(-(7))] != 'G')) %((int)(((0xDD9)) *((long)((((int)(buffer[(0x94B9)] != 'F')) <<((int)('B'))))))))))-((int)((((int)(buffer[((0x02))])) <<((int)(buffer[((2))] != 'C')))))))
    { abort (); }
  return ((-1));
}

int test2 ()
{
  const char X[(0x9EFEB4)] = { 'A', 'B', 'C', 'D', 'E' };
  char buffer[(0x64C)];
  __builtin_memcpy (buffer, X, ((11)));
  if (((-17)))
    { abort (); }
  return ((0));
}

int test3 ()
{
  const struct foo X = { a : 'A', c : 'C', e : 'E', g : 'G', i : 'I' };
  char buffer[((0xA67B))];
  __builtin_memcpy (buffer, &X, (0xF0D2));
  if (((int)((int)buffer[(0x1AA7)] != 'A' || buffer[((0x1738))] != '\0'
      || buffer[((2))] != 'C' || buffer[((-36))] != '\0'
      || buffer[(-(69))] != 'E' || buffer[((69))] != '\0'
      || buffer[(0xF4)] != 'G' || buffer[((71))] != '\0'
      || buffer[(-(0x9))] != 'I' || buffer[(-(-11))] != '\0' + (-(41)) -((long)((((int)(buffer[(-(1))] != 'A' || buffer[((0))] != '\0'
      || buffer[(-(-4))] != 'C')) &((int)(buffer[(-(65))] != 'A')))))-((int)((((int)(buffer[((-3))] != '\0')) <<((int)(buffer[(-(8))])))))-((long)((((int)(buffer[((37))] != '\0')) %((int)(buffer[(-(-4))])))))-((long)((((int)(buffer[((0x50))] != 'A')) >>((int)('\0')))))-((short)((((int)(buffer[(0xDED3)] != '\0')) |((int)(buffer[(0x5596)] != 'A' || buffer[((1))] != '\0'
      || buffer[(-(131))] != 'C' || buffer[(0x8)] != '\0'
      || buffer[(0x9)] != 'E' || buffer[((37))] != '\0'
      || buffer[((6))] != 'G' || buffer[((14))] != '\0')))))+((short)((((int)(buffer[((7))])) |((int)(buffer[((134217728))] != 'A' || buffer[((-2))] != '\0'
      || buffer[((2))] != 'C' || buffer[((10))] != '\0')))))-((short)((((int)(buffer[((0x52C))] != 'A' || buffer[(-(0x9))] != '\0'
      || buffer[((-19))] != 'C' || buffer[(0x794)] != '\0'
      || buffer[(0x8D41A)] != 'E' || buffer[(0xA5B)] != '\0'
      || buffer[(0xE)] != 'G' || buffer[(-(0xB))] != '\0'
      || buffer[(0x4F16E)] != 'I')) %((int)('I')))))-((long)((((int)(buffer[((20))] != 'A' || buffer[((0x4513722))] != '\0'
      || buffer[((82))] != 'C' || buffer[((3))] != '\0'
      || buffer[((-5))] != 'E' || buffer[(-(0x2))] != '\0')) <<((int)(buffer[((2147483648))])))))*((int)((((int)(buffer[(-(-3))])) |((int)(buffer[(0xE)] != 'A' || buffer[((-2))] != '\0')))))+((int)((((int)(buffer[(0x5)] != '\0')) >>((int)('I')))))) + ((-43)) -((short)((((int)(buffer[((129))])) &((int)(buffer[((0))])))))*((long)((((int)((int)buffer[((8192))] != 'A' || buffer[((1))] != '\0'
      || buffer[((34))] != 'C' || buffer[((0x0))] != '\0'
      || buffer[((2))] != 'E' || buffer[((1))] != '\0'
      || buffer[(-(-8))] != 'G')) &((int)(((long)((((int)(buffer[(-(6))] != '\0')) %((int)(buffer[(0x9)]))))))))))*((short)((((int)((int)buffer[(0xA)] != 'A' || buffer[(0x3)] != '\0'
      || buffer[(0x6)] != 'C' || buffer[((0xBB85))] != '\0')) <<((int)('I')))))+((long)((((int)(((long)((((int)(buffer[((132))] != 'A' || buffer[(0xB452A)] != '\0'
      || buffer[((6))] != 'C' || buffer[(-(-5))] != '\0'
      || buffer[(0x0CDE6)] != 'E' || buffer[(-(3))] != '\0')) <<((int)(buffer[((2155872256))])))))*((int)((((int)(buffer[(0xAC9)])) |((int)(buffer[((8))] != 'A' || buffer[(-(0))] != '\0'))))))) &((int)('E')))))*((long)((((int)(buffer[((0x04))] != '\0')) &((int)('\0' + ((27)) -((long)((((int)(buffer[(0xF309)] != 'A' || buffer[(0xFA790)] != '\0'
      || buffer[(-(0xD6106))] != 'C')) &((int)(buffer[((0x1))] != 'A')))))-((int)((((int)(buffer[((-4))] != '\0')) <<((int)(buffer[(-(10))])))))-((long)((((int)(buffer[(0xA)] != '\0')) %((int)(buffer[(0xBC27)])))))-((long)((((int)(buffer[(0x18A63)] != 'A')) >>((int)('\0')))))-((short)((((int)(buffer[(0xA)] != '\0')) |((int)(buffer[((-1))] != 'A' || buffer[((-2))] != '\0'
      || buffer[((-131))] != 'C' || buffer[((2))] != '\0'
      || buffer[(-(5))] != 'E' || buffer[((17))] != '\0'
      || buffer[((0x420F))] != 'G' || buffer[((0x9329))] != '\0')))))+((short)((((int)(buffer[(-(0x70AF9))])) |((int)(buffer[((0xA8AC7))] != 'A' || buffer[((0x1004))] != '\0'
      || buffer[(0x6790C)] != 'C' || buffer[(-(0xCB))] != '\0')))))-((short)((((int)(buffer[(0xE)] != 'A' || buffer[((0x9))] != '\0'
      || buffer[((-1))] != 'C' || buffer[(-(20))] != '\0'
      || buffer[(0x77C6)] != 'E' || buffer[((-9))] != '\0'
      || buffer[(0xC)] != 'G' || buffer[(0x0BE05)] != '\0'
      || buffer[((-11))] != 'I')) %((int)('I')))))-((long)((((int)(buffer[((68719476736))] != 'A' || buffer[((0x12C))] != '\0'
      || buffer[(-(0x9C9B))] != 'C' || buffer[(0xB9AA)] != '\0'
      || buffer[(0xB)] != 'E' || buffer[(0xB11BF)] != '\0')) <<((int)(buffer[((537001984))])))))*((int)((((int)(buffer[((144115188075855872))])) |((int)(buffer[((67108864))] != 'A' || buffer[((3))] != '\0'))))))))))+((short)((((int)(((long)((((int)(buffer[(0x0E99)] != 'A')) >>((int)('\0'))))))) ^((int)('\0')))))*((short)((((int)('\0')) ^((int)(((short)((((int)(buffer[(0x1)])) |((int)(buffer[(-(0x9A91))] != 'A' || buffer[(0x16)] != '\0'
      || buffer[((70))] != 'C' || buffer[(0xC4094)] != '\0'))))))))))))
    { abort (); }
  return ((0x4BC));
}

int test4 ()
{
  const struct foo X = { .b = 'B', .d = 'D', .f = 'F', .h = 'H' , .j = 'J' };
  char buffer[(0x8F891)];
  __builtin_memcpy (buffer, &X, (-(0x3F)));
  if (((int)((int)buffer[((1))] != '\0' || buffer[(-(0x16081))] != 'B'
      || buffer[((6))] != '\0' || buffer[(0xD391)] != 'D'
      || buffer[((-133))] != '\0' || buffer[(0x1)] != 'F'
      || buffer[((22))] != '\0' || buffer[((3))] != 'H'
      || buffer[((-9))] != '\0' || buffer[((0xCF0))] != 'J' + ((11)) +((long)((((int)('B')) ^((int)(buffer[(0x7F0)] != 'B')))))+((long)((((int)(buffer[(0xC)] != '\0' || buffer[(-(66))] != 'B'
      || buffer[((18))] != '\0')) &((int)(buffer[(-(136))] != 'H')))))-((long)((((int)(buffer[((0))])) <<((int)(buffer[((144115222435594240))] != '\0' || buffer[((1))] != 'B'
      || buffer[(-(35))] != '\0' || buffer[((2))] != 'D'
      || buffer[(-(5))] != '\0')))))+((long)((((int)(buffer[(0xB53)] != '\0')) ^((int)(buffer[(-(0x17B9))] != 'F')))))*((int)((((int)(buffer[(-(65))] != '\0' || buffer[(0xD9277)] != 'B'
      || buffer[((-19))] != '\0' || buffer[(-(-5))] != 'D'
      || buffer[(0xF6)] != '\0' || buffer[((101))] != 'F'
      || buffer[((-23))] != '\0' || buffer[(0x9)] != 'H'
      || buffer[(0x27)] != '\0')) %((int)(buffer[(0xC)] != '\0' || buffer[((-2))] != 'B'
      || buffer[((10))] != '\0' || buffer[(-(-5))] != 'D'
      || buffer[((0))] != '\0' || buffer[(-(-7))] != 'F'
      || buffer[(0xFE628)] != '\0' || buffer[((31))] != 'H'
      || buffer[(-(9))] != '\0')))))-((long)((((int)(buffer[(0x4)] != '\0')) ^((int)('\0')))))-((long)((((int)(buffer[((16))] != '\0' || buffer[((149))] != 'B')) %((int)('J')))))-((short)((((int)('\0')) &((int)(buffer[(0xE7)])))))+((int)((((int)(buffer[(0x7)] != 'B')) >>((int)(buffer[(-(70))])))))) + ((0xFD5)) -((short)((((int)((int)buffer[(0xC74C4)] != '\0' || buffer[(0x0E53)] != 'B'
      || buffer[(0xB0)] != '\0' || buffer[(-(0xF5FFC))] != 'D')) &((int)('J' + ((110)) +((long)((((int)('B')) ^((int)(buffer[((25))] != 'B')))))+((long)((((int)(buffer[((0xDD20EA920C87E28D8B3))] != '\0' || buffer[(-(0xC8))] != 'B'
      || buffer[((0x41F6))] != '\0')) &((int)(buffer[((-7))] != 'H'))))))))))-((long)((((int)(buffer[((23))])) &((int)(((long)((((int)(buffer[((-549755813889))] != '\0')) ^((int)('\0'))))))))))*((long)((((int)(((long)((((int)(buffer[((130))] != '\0' || buffer[(-(1))] != 'B')) %((int)('J'))))))) <<((int)((int)buffer[(-(129))])))))-((int)((((int)(buffer[((-39))] != '\0')) %((int)(buffer[((-8))])))))-((int)((((int)(((long)((((int)(buffer[((0x113877C73E956BD7A4))])) <<((int)(buffer[(-(33))] != '\0' || buffer[(0x9444)] != 'B'
      || buffer[(0x285)] != '\0' || buffer[((3))] != 'D'
      || buffer[((20))] != '\0'))))))) >>((int)((int)buffer[((0x9142995D635672F0))])))))+((short)((((int)('J' + (0x6273C) +((long)((((int)('B')) ^((int)(buffer[((-4))] != 'B')))))+((long)((((int)(buffer[(-(5))] != '\0' || buffer[((-66))] != 'B'
      || buffer[(-(-4))] != '\0')) &((int)(buffer[(-(72))] != 'H')))))-((long)((((int)(buffer[(0x5CF)])) <<((int)(buffer[((-262145))] != '\0' || buffer[((49))] != 'B'
      || buffer[((0))] != '\0' || buffer[((-36))] != 'D'
      || buffer[((0x328))] != '\0'))))))) |((int)('J' + ((42)) +((long)((((int)('B')) ^((int)(buffer[((129))] != 'B')))))+((long)((((int)(buffer[(0x2C26C)] != '\0' || buffer[(0x3C2E2)] != 'B'
      || buffer[((0xE4A))] != '\0')) &((int)(buffer[(0x7407F)] != 'H')))))-((long)((((int)(buffer[((17592186044416))])) <<((int)(buffer[((67108864))] != '\0' || buffer[((161))] != 'B'
      || buffer[(0x1E)] != '\0' || buffer[(-(68))] != 'D'
      || buffer[((0xA7))] != '\0'))))))))))))
    { abort (); }
  return ((-1));
}

int main ()
{
  test1 (); test2 (); test3 (); test4 ();
  return (0x6E026);
}
/* ProgramSourceLLVM */
