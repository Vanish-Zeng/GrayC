PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: /usr/lib/llvm-12/bin/clang -cc1 -triple x86_64-pc-linux-gnu -emit-obj --mrelax-relocations -disable-free -disable-llvm-verifier -discard-value-names -main-file-name fuzzer-file-52838-2022-07-07-20:06:39-2b9cd1.c -mrelocation-model static -mframe-pointer=none -fmath-errno -fno-rounding-math -mconstructor-aliases -munwind-tables -target-cpu x86-64 -tune-cpu generic -fno-split-dwarf-inlining -debugger-tuning=gdb -resource-dir /usr/lib/llvm-12/lib/clang/12.0.1 -internal-isystem /usr/local/include -internal-isystem /usr/lib/llvm-12/lib/clang/12.0.1/include -internal-externc-isystem /usr/include/x86_64-linux-gnu -internal-externc-isystem /include -internal-externc-isystem /usr/include -O1 -pedantic -w -fdebug-compilation-dir /home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/dignostic -ferror-limit 19 -fgnuc-version=4.2.1 -faddrsig -o /tmp/fuzzer-file-52838-2022-07-07-20:06:39-2b9cd1-993828.o -x c fuzzer-file-52838-2022-07-07-20:06:39-2b9cd1.c
1.	<eof> parser at end of file
2.	Code generation
3.	Running pass 'Function Pass Manager' on module 'fuzzer-file-52838-2022-07-07-20:06:39-2b9cd1.c'.
4.	Running pass 'Greedy Register Allocator' on function '@NSReturnAddress'
 #0 0x00007f0f3921a001 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xd1a001)
 #1 0x00007f0f39218140 llvm::sys::RunSignalHandlers() (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xd18140)
 #2 0x00007f0f3921a712 (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xd1a712)
 #3 0x00007f0f40e30980 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x12980)
 #4 0x00007f0f394d52eb llvm::LiveRegMatrix::checkRegUnitInterference(llvm::LiveInterval&, llvm::MCRegister) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xfd52eb)
 #5 0x00007f0f394d5534 llvm::LiveRegMatrix::checkInterference(llvm::LiveInterval&, llvm::MCRegister) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xfd5534)
 #6 0x00007f0f3966bbf2 (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x116bbf2)
 #7 0x00007f0f396672c8 (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x11672c8)
 #8 0x00007f0f39664963 (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x1164963)
 #9 0x00007f0f39659726 llvm::RegAllocBase::allocatePhysRegs() (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x1159726)
#10 0x00007f0f39663f95 (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x1163f95)
#11 0x00007f0f3953f7de llvm::MachineFunctionPass::runOnFunction(llvm::Function&) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x103f7de)
#12 0x00007f0f3934ebd0 llvm::FPPassManager::runOnFunction(llvm::Function&) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xe4ebd0)
#13 0x00007f0f39354883 llvm::FPPassManager::runOnModule(llvm::Module&) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xe54883)
#14 0x00007f0f3934f208 llvm::legacy::PassManagerImpl::run(llvm::Module&) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xe4f208)
#15 0x00007f0f3f669b06 clang::EmitBackendOutput(clang::DiagnosticsEngine&, clang::HeaderSearchOptions const&, clang::CodeGenOptions const&, clang::TargetOptions const&, clang::LangOptions const&, llvm::DataLayout const&, llvm::Module*, clang::BackendAction, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream> >) (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x15ecb06)
#16 0x00007f0f3f91b74e (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x189e74e)
#17 0x00007f0f3e9c0eb4 clang::ParseAST(clang::Sema&, bool, bool) (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x943eb4)
#18 0x00007f0f3f9183b3 clang::CodeGenAction::ExecuteAction() (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x189b3b3)
#19 0x00007f0f4004d446 clang::FrontendAction::Execute() (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x1fd0446)
#20 0x00007f0f3ffd6c11 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x1f59c11)
#21 0x00007f0f400b4576 clang::ExecuteCompilerInvocation(clang::CompilerInstance*) (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x2037576)
#22 0x0000000000412a7a cc1_main(llvm::ArrayRef<char const*>, char const*, void*) (/usr/lib/llvm-12/bin/clang+0x412a7a)
#23 0x0000000000410dbf (/usr/lib/llvm-12/bin/clang+0x410dbf)
#24 0x0000000000410bb6 main (/usr/lib/llvm-12/bin/clang+0x410bb6)
#25 0x00007f0f3776dc87 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c87)
#26 0x000000000040ddfa _start (/usr/lib/llvm-12/bin/clang+0x40ddfa)
clang: error: unable to execute command: CPU time limit exceeded (core dumped)
clang: error: clang frontend command failed due to signal (use -v to see invocation)
Ubuntu clang version 12.0.1-++20211102090516+fed41342a82f-1~exp1~20211102211019.11
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/lib/llvm-12/bin
clang: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang: note: diagnostic msg: /tmp/fuzzer-file-52838-2022-07-07-20:06:39-2b9cd1-d1d9a6.c
clang: note: diagnostic msg: /tmp/fuzzer-file-52838-2022-07-07-20:06:39-2b9cd1-d1d9a6.sh
clang: note: diagnostic msg: 

********************
