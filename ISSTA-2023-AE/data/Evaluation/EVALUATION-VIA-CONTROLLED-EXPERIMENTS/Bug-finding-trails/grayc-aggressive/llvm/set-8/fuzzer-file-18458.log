/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:18:883: warning: array index -1 is before the beginning of the array [-Warray-bounds]
tmp[i][(0xF0)] = x[i][(0x70120)] + (-43) -((int)((((int)(x[i][(0)])) &((int)(x[i][(-1)])))))-((int)((((int)(x[i][(0)])) >>((int)(tmp[i][(0x00DE)])))))+((long)((((int)(x[i][(0)])) <<((int)(tmp[i][(0)]))))) + (0x2AFE) -((short)((((int)(((long)((((int)(x[i][(0)])) <<((int)(tmp[i][(8)]))))))) %((int)((42)))))) + (34) *((int)((((int)(x[i][(0x349)] + (52) -((int)((((int)(x[i][(0)])) &((int)(x[i][(576460752303423488)])))))-((int)((((int)(x[i][(0)])) >>((int)(tmp[i][(0x724)])))))+((long)((((int)(x[i][(1024)])) <<((int)(tmp[i][(2)]))))) + (22))) &((int)(x[i][(1048576)] + (-43) -((int)((((int)(x[i][(0)])) &((int)(x[i][(67108864)])))))-((int)((((int)(x[i][(0xA5)])) >>((int)(tmp[i][(2199023255552)])))))+((long)((((int)(x[i][(4096)])) <<((int)(tmp[i][(512)]))))))))))-((int)((((int)(tmp[i][(8192)])) <<((int)(((int)((((int)(x[i][(16384)])) &((int)(x[i][(32)]))))))))))-((long)((((int)(x[i][(-1)] + (-43) -((int)((((int)(x[i][(0x46)])) &((int)(x[i][(0)])))))-((int)((((int)(x[i][(0)])) >>((int)(tmp[i][(0)])))))+((long)((((int)(x[i][(8388608)])) <<((int)(tmp[i][(-1)]))))) + (-43))) |((int)(tmp[i][(-1)])))))-((short)((((int)(x[i][(0x5D130)])) &((int)(((int)((((int)(x[i][(0)])) &((int)(x[i][(0x0AF)]))))))))));
~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:2:1: note: array 'x' declared here
double x[(37)][(0x2A13A3)] = { { (-11), (0x67E5), (0x18379), (-14), (0xFE0), (15), -(9), -(0x49), -(-2), -(-2) },
^
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:19:883: warning: array index -1 is before the beginning of the array [-Warray-bounds]
tmp[i][(0xF0)] = x[i][(0x70120)] + (-43) -((int)((((int)(x[i][(0)])) &((int)(x[i][(-1)])))))-((int)((((int)(x[i][(0)])) >>((int)(tmp[i][(0x00DE)])))))+((long)((((int)(x[i][(0)])) <<((int)(tmp[i][(0)]))))) + (0x2AFE) -((short)((((int)(((long)((((int)(x[i][(0)])) <<((int)(tmp[i][(8)]))))))) %((int)((42)))))) + (34) *((int)((((int)(x[i][(0x349)] + (52) -((int)((((int)(x[i][(0)])) &((int)(x[i][(576460752303423488)])))))-((int)((((int)(x[i][(0)])) >>((int)(tmp[i][(0x724)])))))+((long)((((int)(x[i][(1024)])) <<((int)(tmp[i][(2)]))))) + (22))) &((int)(x[i][(1048576)] + (-43) -((int)((((int)(x[i][(0)])) &((int)(x[i][(67108864)])))))-((int)((((int)(x[i][(0xA5)])) >>((int)(tmp[i][(2199023255552)])))))+((long)((((int)(x[i][(4096)])) <<((int)(tmp[i][(512)]))))))))))-((int)((((int)(tmp[i][(8192)])) <<((int)(((int)((((int)(x[i][(16384)])) &((int)(x[i][(32)]))))))))))-((long)((((int)(x[i][(-1)] + (-43) -((int)((((int)(x[i][(0x46)])) &((int)(x[i][(0)])))))-((int)((((int)(x[i][(0)])) >>((int)(tmp[i][(0)])))))+((long)((((int)(x[i][(8388608)])) <<((int)(tmp[i][(-1)]))))) + (-43))) |((int)(tmp[i][(-1)])))))-((short)((((int)(x[i][(0x5D130)])) &((int)(((int)((((int)(x[i][(0)])) &((int)(x[i][(0x0AF)]))))))))));
~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:2:1: note: array 'x' declared here
double x[(37)][(0x2A13A3)] = { { (-11), (0x67E5), (0x18379), (-14), (0xFE0), (15), -(9), -(0x49), -(-2), -(-2) },
^
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:26:633: warning: array index -4 is before the beginning of the array [-Warray-bounds]
tmp[i][(131)] = x[i][(0x9B0CF)] + (-43) +((int)((((int)(x[i][(2)])) %((int)(x[i][(0xE64)])))))-((long)((((int)(tmp[i][(0xC2)])) &((int)(x[i][(-4)])))))+((int)((((int)(tmp[i][(-4)])) |((int)(tmp[i][(67)]))))) + (-43) *((long)((((int)(x[i][(0x1DA)] + (52) +((int)((((int)(x[i][(-4)])) %((int)(x[i][(3)])))))-((long)((((int)(tmp[i][(-4)])) &((int)(x[i][(131)])))))+((int)((((int)(tmp[i][(2)])) |((int)(tmp[i][(0xE7FA7)]))))))) <<((int)(((long)((((int)(tmp[i][(3)])) &((int)(x[i][(-4)]))))))))))+((short)((((int)(tmp[i][(35)])) ^((int)(tmp[i][(-4)])))))-((short)((((int)(((int)((((int)(x[i][(3)])) %((int)(x[i][(0xCD1)]))))))) >>((int)(x[i][(-4)] + (46) +((int)((((int)(x[i][(-4)])) %((int)(x[i][(-4)])))))))))) + (0x719) *((short)((((int)((42))) >>((int)(x[i][(3)] + (-43) +((int)((((int)(x[i][(19)])) %((int)(x[i][(-4)]))))))))))*((short)((((int)(x[i][(0x28DAC)] + (-43) +((int)((((int)(x[i][(67)])) %((int)(x[i][(19)])))))-((long)((((int)(tmp[i][(0x2FC)])) &((int)(x[i][(0x0F9B)])))))+((int)((((int)(tmp[i][(0xD44FD)])) |((int)(tmp[i][(3)]))))) + (0x6572) *((long)((((int)(x[i][(0x197C5)] + (170) +((int)((((int)(x[i][(0xF7B)])) %((int)(x[i][(0x78)])))))-((long)((((int)(tmp[i][(7)])) &((int)(x[i][(0xB0)])))))+((int)((((int)(tmp[i][(0x20C39)])) |((int)(tmp[i][(0x57F)]))))))) <<((int)(((long)((((int)(tmp[i][(3)])) &((int)(x[i][(11)])))))))))))) &((int)(((long)((((int)(tmp[i][(-4)])) &((int)(x[i][(-4)]))))))))));
~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:2:1: note: array 'x' declared here
double x[(37)][(0x2A13A3)] = { { (-11), (0x67E5), (0x18379), (-14), (0xFE0), (15), -(9), -(0x49), -(-2), -(-2) },
^
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:27:633: warning: array index -4 is before the beginning of the array [-Warray-bounds]
tmp[i][(131)] = x[i][(0x9B0CF)] + (-43) +((int)((((int)(x[i][(2)])) %((int)(x[i][(0xE64)])))))-((long)((((int)(tmp[i][(0xC2)])) &((int)(x[i][(-4)])))))+((int)((((int)(tmp[i][(-4)])) |((int)(tmp[i][(67)]))))) + (-43) *((long)((((int)(x[i][(0x1DA)] + (52) +((int)((((int)(x[i][(-4)])) %((int)(x[i][(3)])))))-((long)((((int)(tmp[i][(-4)])) &((int)(x[i][(131)])))))+((int)((((int)(tmp[i][(2)])) |((int)(tmp[i][(0xE7FA7)]))))))) <<((int)(((long)((((int)(tmp[i][(3)])) &((int)(x[i][(-4)]))))))))))+((short)((((int)(tmp[i][(35)])) ^((int)(tmp[i][(-4)])))))-((short)((((int)(((int)((((int)(x[i][(3)])) %((int)(x[i][(0xCD1)]))))))) >>((int)(x[i][(-4)] + (46) +((int)((((int)(x[i][(-4)])) %((int)(x[i][(-4)])))))))))) + (0x719) *((short)((((int)((42))) >>((int)(x[i][(3)] + (-43) +((int)((((int)(x[i][(19)])) %((int)(x[i][(-4)]))))))))))*((short)((((int)(x[i][(0x28DAC)] + (-43) +((int)((((int)(x[i][(67)])) %((int)(x[i][(19)])))))-((long)((((int)(tmp[i][(0x2FC)])) &((int)(x[i][(0x0F9B)])))))+((int)((((int)(tmp[i][(0xD44FD)])) |((int)(tmp[i][(3)]))))) + (0x6572) *((long)((((int)(x[i][(0x197C5)] + (170) +((int)((((int)(x[i][(0xF7B)])) %((int)(x[i][(0x78)])))))-((long)((((int)(tmp[i][(7)])) &((int)(x[i][(0xB0)])))))+((int)((((int)(tmp[i][(0x20C39)])) |((int)(tmp[i][(0x57F)]))))))) <<((int)(((long)((((int)(tmp[i][(3)])) &((int)(x[i][(11)])))))))))))) &((int)(((long)((((int)(tmp[i][(-4)])) &((int)(x[i][(-4)]))))))))));
~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:2:1: note: array 'x' declared here
double x[(37)][(0x2A13A3)] = { { (-11), (0x67E5), (0x18379), (-14), (0xFE0), (15), -(9), -(0x49), -(-2), -(-2) },
^
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:34:15: warning: array index -6 is before the beginning of the array [-Warray-bounds]
tmp[i][(5)] = x[i][(-6)] + (42) -((int)((((int)(x[i][(0x6B0B)])) ^((int)(x[i][(0xA)]))))) + (0x1DE032) *((long)((((int)(((int)((((int)(x[i][(-6)])) ^((int)(x[i][(-6)]))))))) |((int)(x[i][(5)] + (42) -((int)((((int)(x[i][(0xA7)])) ^((int)(x[i][(5)]))))))))))-((long)((((int)(x[i][(0x5)] + (0x42F58) -((int)((((int)(x[i][(0x20A)])) ^((int)(x[i][(5)]))))))) ^((int)((0xA2)))))) + (42) -((long)((((int)((42) *((long)((((int)(((int)((((int)(x[i][(7)])) ^((int)(x[i][(21)]))))))) |((int)(x[i][(5)] + (0x868045) -((int)((((int)(x[i][(5)])) ^((int)(x[i][(7)])))))))))))) <<((int)(tmp[i][(0x6)])))))-((short)((((int)(x[i][(0x5)] + (42))) &((int)(x[i][(0x8)])))))*((int)((((int)(x[i][(-6)] + (-43))) %((int)(tmp[i][(5)])))))+((short)((((int)(x[i][(4)] + (-43) -((int)((((int)(x[i][(69)])) ^((int)(x[i][(21)]))))) + (0xBA6) *((long)((((int)(((int)((((int)(x[i][(13)])) ^((int)(x[i][(0xB)]))))))) |((int)(x[i][(0xAD92)] + (-43) -((int)((((int)(x[i][(-6)])) ^((int)(x[i][(69)])))))))))))) %((int)(((long)((((int)(x[i][(0x1)] + (0x171CA0) -((int)((((int)(x[i][(0xC26)])) ^((int)(x[i][(5)]))))))) ^((int)((46)))))))))));
              ^     ~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:2:1: note: array 'x' declared here
double x[(37)][(0x2A13A3)] = { { (-11), (0x67E5), (0x18379), (-14), (0xFE0), (15), -(9), -(0x49), -(-2), -(-2) },
^
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:34:670: warning: array index -6 is before the beginning of the array [-Warray-bounds]
tmp[i][(5)] = x[i][(-6)] + (42) -((int)((((int)(x[i][(0x6B0B)])) ^((int)(x[i][(0xA)]))))) + (0x1DE032) *((long)((((int)(((int)((((int)(x[i][(-6)])) ^((int)(x[i][(-6)]))))))) |((int)(x[i][(5)] + (42) -((int)((((int)(x[i][(0xA7)])) ^((int)(x[i][(5)]))))))))))-((long)((((int)(x[i][(0x5)] + (0x42F58) -((int)((((int)(x[i][(0x20A)])) ^((int)(x[i][(5)]))))))) ^((int)((0xA2)))))) + (42) -((long)((((int)((42) *((long)((((int)(((int)((((int)(x[i][(7)])) ^((int)(x[i][(21)]))))))) |((int)(x[i][(5)] + (0x868045) -((int)((((int)(x[i][(5)])) ^((int)(x[i][(7)])))))))))))) <<((int)(tmp[i][(0x6)])))))-((short)((((int)(x[i][(0x5)] + (42))) &((int)(x[i][(0x8)])))))*((int)((((int)(x[i][(-6)] + (-43))) %((int)(tmp[i][(5)])))))+((short)((((int)(x[i][(4)] + (-43) -((int)((((int)(x[i][(69)])) ^((int)(x[i][(21)]))))) + (0xBA6) *((long)((((int)(((int)((((int)(x[i][(13)])) ^((int)(x[i][(0xB)]))))))) |((int)(x[i][(0xAD92)] + (-43) -((int)((((int)(x[i][(-6)])) ^((int)(x[i][(69)])))))))))))) %((int)(((long)((((int)(x[i][(0x1)] + (0x171CA0) -((int)((((int)(x[i][(0xC26)])) ^((int)(x[i][(5)]))))))) ^((int)((46)))))))))));
~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:2:1: note: array 'x' declared here
double x[(37)][(0x2A13A3)] = { { (-11), (0x67E5), (0x18379), (-14), (0xFE0), (15), -(9), -(0x49), -(-2), -(-2) },
^
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:35:15: warning: array index -6 is before the beginning of the array [-Warray-bounds]
tmp[i][(5)] = x[i][(-6)] + (42) -((int)((((int)(x[i][(0x6B0B)])) ^((int)(x[i][(0xA)]))))) + (0x1DE032) *((long)((((int)(((int)((((int)(x[i][(-6)])) ^((int)(x[i][(-6)]))))))) |((int)(x[i][(5)] + (42) -((int)((((int)(x[i][(0xA7)])) ^((int)(x[i][(5)]))))))))))-((long)((((int)(x[i][(0x5)] + (0x42F58) -((int)((((int)(x[i][(0x20A)])) ^((int)(x[i][(5)]))))))) ^((int)((0xA2)))))) + (42) -((long)((((int)((42) *((long)((((int)(((int)((((int)(x[i][(7)])) ^((int)(x[i][(21)]))))))) |((int)(x[i][(5)] + (0x868045) -((int)((((int)(x[i][(5)])) ^((int)(x[i][(7)])))))))))))) <<((int)(tmp[i][(0x6)])))))-((short)((((int)(x[i][(0x5)] + (42))) &((int)(x[i][(0x8)])))))*((int)((((int)(x[i][(-6)] + (-43))) %((int)(tmp[i][(5)])))))+((short)((((int)(x[i][(4)] + (-43) -((int)((((int)(x[i][(69)])) ^((int)(x[i][(21)]))))) + (0xBA6) *((long)((((int)(((int)((((int)(x[i][(13)])) ^((int)(x[i][(0xB)]))))))) |((int)(x[i][(0xAD92)] + (-43) -((int)((((int)(x[i][(-6)])) ^((int)(x[i][(69)])))))))))))) %((int)(((long)((((int)(x[i][(0x1)] + (0x171CA0) -((int)((((int)(x[i][(0xC26)])) ^((int)(x[i][(5)]))))))) ^((int)((46)))))))))));
              ^     ~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:2:1: note: array 'x' declared here
double x[(37)][(0x2A13A3)] = { { (-11), (0x67E5), (0x18379), (-14), (0xFE0), (15), -(9), -(0x49), -(-2), -(-2) },
^
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:35:670: warning: array index -6 is before the beginning of the array [-Warray-bounds]
tmp[i][(5)] = x[i][(-6)] + (42) -((int)((((int)(x[i][(0x6B0B)])) ^((int)(x[i][(0xA)]))))) + (0x1DE032) *((long)((((int)(((int)((((int)(x[i][(-6)])) ^((int)(x[i][(-6)]))))))) |((int)(x[i][(5)] + (42) -((int)((((int)(x[i][(0xA7)])) ^((int)(x[i][(5)]))))))))))-((long)((((int)(x[i][(0x5)] + (0x42F58) -((int)((((int)(x[i][(0x20A)])) ^((int)(x[i][(5)]))))))) ^((int)((0xA2)))))) + (42) -((long)((((int)((42) *((long)((((int)(((int)((((int)(x[i][(7)])) ^((int)(x[i][(21)]))))))) |((int)(x[i][(5)] + (0x868045) -((int)((((int)(x[i][(5)])) ^((int)(x[i][(7)])))))))))))) <<((int)(tmp[i][(0x6)])))))-((short)((((int)(x[i][(0x5)] + (42))) &((int)(x[i][(0x8)])))))*((int)((((int)(x[i][(-6)] + (-43))) %((int)(tmp[i][(5)])))))+((short)((((int)(x[i][(4)] + (-43) -((int)((((int)(x[i][(69)])) ^((int)(x[i][(21)]))))) + (0xBA6) *((long)((((int)(((int)((((int)(x[i][(13)])) ^((int)(x[i][(0xB)]))))))) |((int)(x[i][(0xAD92)] + (-43) -((int)((((int)(x[i][(-6)])) ^((int)(x[i][(69)])))))))))))) %((int)(((long)((((int)(x[i][(0x1)] + (0x171CA0) -((int)((((int)(x[i][(0xC26)])) ^((int)(x[i][(5)]))))))) ^((int)((46)))))))))));
~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:2:1: note: array 'x' declared here
double x[(37)][(0x2A13A3)] = { { (-11), (0x67E5), (0x18379), (-14), (0xFE0), (15), -(9), -(0x49), -(-2), -(-2) },
^
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:38:15: warning: array index -6 is before the beginning of the array [-Warray-bounds]
tmp[i][(5)] = x[i][(-6)] + (42) -((int)((((int)(x[i][(-6)])) ^((int)(x[i][(37)]))))) + (43) -((short)((((int)(((int)((((int)(x[i][(5)])) ^((int)(x[i][(5)]))))))) |((int)(((int)((((int)(x[i][(5)])) ^((int)(x[i][(0xC9)]))))))))))+((short)((((int)(x[i][(37)] + (52))) ^((int)(x[i][(5)] + (34))))))+((int)((((int)((-43))) &((int)(tmp[i][(133)])))))+((long)((((int)(((int)((((int)(x[i][(0xC0)])) ^((int)(x[i][(5)]))))))) %((int)(tmp[i][(-6)])))))+((int)((((int)(((int)((((int)(x[i][(13)])) ^((int)(x[i][(0x9B7)]))))))) <<((int)(tmp[i][(69)]))))) + (0xCE5) -((short)((((int)(x[i][(-6)] + (-43))) >>((int)(((int)((((int)((0x849F))) &((int)(tmp[i][(133)]))))))))));
              ^     ~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:2:1: note: array 'x' declared here
double x[(37)][(0x2A13A3)] = { { (-11), (0x67E5), (0x18379), (-14), (0xFE0), (15), -(9), -(0x49), -(-2), -(-2) },
^
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:38:570: warning: array index -6 is before the beginning of the array [-Warray-bounds]
tmp[i][(5)] = x[i][(-6)] + (42) -((int)((((int)(x[i][(-6)])) ^((int)(x[i][(37)]))))) + (43) -((short)((((int)(((int)((((int)(x[i][(5)])) ^((int)(x[i][(5)]))))))) |((int)(((int)((((int)(x[i][(5)])) ^((int)(x[i][(0xC9)]))))))))))+((short)((((int)(x[i][(37)] + (52))) ^((int)(x[i][(5)] + (34))))))+((int)((((int)((-43))) &((int)(tmp[i][(133)])))))+((long)((((int)(((int)((((int)(x[i][(0xC0)])) ^((int)(x[i][(5)]))))))) %((int)(tmp[i][(-6)])))))+((int)((((int)(((int)((((int)(x[i][(13)])) ^((int)(x[i][(0x9B7)]))))))) <<((int)(tmp[i][(69)]))))) + (0xCE5) -((short)((((int)(x[i][(-6)] + (-43))) >>((int)(((int)((((int)((0x849F))) &((int)(tmp[i][(133)]))))))))));
~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:2:1: note: array 'x' declared here
double x[(37)][(0x2A13A3)] = { { (-11), (0x67E5), (0x18379), (-14), (0xFE0), (15), -(9), -(0x49), -(-2), -(-2) },
^
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:39:15: warning: array index -6 is before the beginning of the array [-Warray-bounds]
tmp[i][(5)] = x[i][(-6)] + (42) -((int)((((int)(x[i][(-6)])) ^((int)(x[i][(37)]))))) + (43) -((short)((((int)(((int)((((int)(x[i][(5)])) ^((int)(x[i][(5)]))))))) |((int)(((int)((((int)(x[i][(5)])) ^((int)(x[i][(0xC9)]))))))))))+((short)((((int)(x[i][(37)] + (52))) ^((int)(x[i][(5)] + (34))))))+((int)((((int)((-43))) &((int)(tmp[i][(133)])))))+((long)((((int)(((int)((((int)(x[i][(0xC0)])) ^((int)(x[i][(5)]))))))) %((int)(tmp[i][(-6)])))))+((int)((((int)(((int)((((int)(x[i][(13)])) ^((int)(x[i][(0x9B7)]))))))) <<((int)(tmp[i][(69)]))))) + (0xCE5) -((short)((((int)(x[i][(-6)] + (-43))) >>((int)(((int)((((int)((0x849F))) &((int)(tmp[i][(133)]))))))))));
              ^     ~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:2:1: note: array 'x' declared here
double x[(37)][(0x2A13A3)] = { { (-11), (0x67E5), (0x18379), (-14), (0xFE0), (15), -(9), -(0x49), -(-2), -(-2) },
^
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:39:570: warning: array index -6 is before the beginning of the array [-Warray-bounds]
tmp[i][(5)] = x[i][(-6)] + (42) -((int)((((int)(x[i][(-6)])) ^((int)(x[i][(37)]))))) + (43) -((short)((((int)(((int)((((int)(x[i][(5)])) ^((int)(x[i][(5)]))))))) |((int)(((int)((((int)(x[i][(5)])) ^((int)(x[i][(0xC9)]))))))))))+((short)((((int)(x[i][(37)] + (52))) ^((int)(x[i][(5)] + (34))))))+((int)((((int)((-43))) &((int)(tmp[i][(133)])))))+((long)((((int)(((int)((((int)(x[i][(0xC0)])) ^((int)(x[i][(5)]))))))) %((int)(tmp[i][(-6)])))))+((int)((((int)(((int)((((int)(x[i][(13)])) ^((int)(x[i][(0x9B7)]))))))) <<((int)(tmp[i][(69)]))))) + (0xCE5) -((short)((((int)(x[i][(-6)] + (-43))) >>((int)(((int)((((int)((0x849F))) &((int)(tmp[i][(133)]))))))))));
~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:2:1: note: array 'x' declared here
double x[(37)][(0x2A13A3)] = { { (-11), (0x67E5), (0x18379), (-14), (0xFE0), (15), -(9), -(0x49), -(-2), -(-2) },
^
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:50:202: warning: remainder by zero is undefined [-Wdivision-by-zero]
    for (j = (0xC7) + (0x94) *((short)((((int)((34359738368))) %((int)((0x4F56C)))))) + (0xEACBB) -((short)((((double)((-43))) -((double)((0))))))*((long)((((int)((0) + (42) *((short)((((int)((0xA6))) %((int)((549755813888)))))))) %((int)(((short)((((int)((0xC87C))) %((int)((1)))))))))))-((int)((((int)(j)) <<((int)(j))))) + (0x6A22A6) -((int)((((int)(j)) <<((int)(j)))))+((int)((((int)((-1) + (0xBD) *((short)((((int)((0x6))) %((int)((0)))))) + (-43) -((short)((((double)((62))) -((double)((0))))))*((long)((((int)((0xE6) + (42) *((short)((((int)((0))) %((int)((36028797018963968)))))))) %((int)(((short)((((int)((-1))) %((int)((64)))))))))))-((int)((((int)(j)) <<((int)(j))))))) >>((int)(j)))))-((long)((((int)((0x9D8F7) + (43) *((short)((((int)((0))) %((int)((0xC76)))))) + (0x75D590) -((short)((((double)((46))) -((double)((8))))))*((long)((((int)((-1) + (42) *((short)((((int)((34359738368))) %((int)((0xA)))))))) %((int)(((short)((((int)((0))) %((int)((0)))))))))))-((int)((((int)(j)) <<((int)(j))))))) <<((int)((-1) + (10) *((short)((((int)((-1))) %((int)((0xBE)))))) + (0x4D5689) -((short)((((double)((42))) -((double)((-1))))))*((long)((((int)((0) + (-43) *((short)((((int)((-1))) %((int)((0)))))))) %((int)(((short)((((int)((0xD527))) %((int)((-1)))))))))))-((int)((((int)(j)) <<((int)(j))))))))))*((long)((((int)(j)) ^((int)((2) + (42) *((short)((((int)((131072))) %((int)((0)))))) + (0x8AC1F) -((short)((((double)((42))) -((double)((32))))))*((long)((((int)((-1) + (0x38DD57) *((short)((((int)((0))) %((int)((4096)))))))) %((int)(((short)((((int)((140737488355328))) %((int)((0xE6ED)))))))))))-((int)((((int)(j)) <<((int)(j))))))))))*((int)((((int)((262144) + (42) *((short)((((int)((1152921504606846976))) %((int)((0x0CC54)))))) + (46) -((short)((((double)((42))) -((double)((0))))))*((long)((((int)((0xAD) + (22) *((short)((((int)((0x99))) %((int)((0)))))))) %((int)(((short)((((int)((0))) %((int)((0)))))))))))-((int)((((int)(j)) <<((int)(j))))))) |((int)(j))))); j < (-7); ++j)
                                                                                                                                                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:50:232: warning: remainder by zero is undefined [-Wdivision-by-zero]
    for (j = (0xC7) + (0x94) *((short)((((int)((34359738368))) %((int)((0x4F56C)))))) + (0xEACBB) -((short)((((double)((-43))) -((double)((0))))))*((long)((((int)((0) + (42) *((short)((((int)((0xA6))) %((int)((549755813888)))))))) %((int)(((short)((((int)((0xC87C))) %((int)((1)))))))))))-((int)((((int)(j)) <<((int)(j))))) + (0x6A22A6) -((int)((((int)(j)) <<((int)(j)))))+((int)((((int)((-1) + (0xBD) *((short)((((int)((0x6))) %((int)((0)))))) + (-43) -((short)((((double)((62))) -((double)((0))))))*((long)((((int)((0xE6) + (42) *((short)((((int)((0))) %((int)((36028797018963968)))))))) %((int)(((short)((((int)((-1))) %((int)((64)))))))))))-((int)((((int)(j)) <<((int)(j))))))) >>((int)(j)))))-((long)((((int)((0x9D8F7) + (43) *((short)((((int)((0))) %((int)((0xC76)))))) + (0x75D590) -((short)((((double)((46))) -((double)((8))))))*((long)((((int)((-1) + (42) *((short)((((int)((34359738368))) %((int)((0xA)))))))) %((int)(((short)((((int)((0))) %((int)((0)))))))))))-((int)((((int)(j)) <<((int)(j))))))) <<((int)((-1) + (10) *((short)((((int)((-1))) %((int)((0xBE)))))) + (0x4D5689) -((short)((((double)((42))) -((double)((-1))))))*((long)((((int)((0) + (-43) *((short)((((int)((-1))) %((int)((0)))))))) %((int)(((short)((((int)((0xD527))) %((int)((-1)))))))))))-((int)((((int)(j)) <<((int)(j))))))))))*((long)((((int)(j)) ^((int)((2) + (42) *((short)((((int)((131072))) %((int)((0)))))) + (0x8AC1F) -((short)((((double)((42))) -((double)((32))))))*((long)((((int)((-1) + (0x38DD57) *((short)((((int)((0))) %((int)((4096)))))))) %((int)(((short)((((int)((140737488355328))) %((int)((0xE6ED)))))))))))-((int)((((int)(j)) <<((int)(j))))))))))*((int)((((int)((262144) + (42) *((short)((((int)((1152921504606846976))) %((int)((0x0CC54)))))) + (46) -((short)((((double)((42))) -((double)((0))))))*((long)((((int)((0xAD) + (22) *((short)((((int)((0x99))) %((int)((0)))))))) %((int)(((short)((((int)((0))) %((int)((0)))))))))))-((int)((((int)(j)) <<((int)(j))))))) |((int)(j))))); j < (-7); ++j)
                                                                                                                                                                                                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:50:429: warning: remainder by zero is undefined [-Wdivision-by-zero]
    for (j = (0xC7) + (0x94) *((short)((((int)((34359738368))) %((int)((0x4F56C)))))) + (0xEACBB) -((short)((((double)((-43))) -((double)((0))))))*((long)((((int)((0) + (42) *((short)((((int)((0xA6))) %((int)((549755813888)))))))) %((int)(((short)((((int)((0xC87C))) %((int)((1)))))))))))-((int)((((int)(j)) <<((int)(j))))) + (0x6A22A6) -((int)((((int)(j)) <<((int)(j)))))+((int)((((int)((-1) + (0xBD) *((short)((((int)((0x6))) %((int)((0)))))) + (-43) -((short)((((double)((62))) -((double)((0))))))*((long)((((int)((0xE6) + (42) *((short)((((int)((0))) %((int)((36028797018963968)))))))) %((int)(((short)((((int)((-1))) %((int)((64)))))))))))-((int)((((int)(j)) <<((int)(j))))))) >>((int)(j)))))-((long)((((int)((0x9D8F7) + (43) *((short)((((int)((0))) %((int)((0xC76)))))) + (0x75D590) -((short)((((double)((46))) -((double)((8))))))*((long)((((int)((-1) + (42) *((short)((((int)((34359738368))) %((int)((0xA)))))))) %((int)(((short)((((int)((0))) %((int)((0)))))))))))-((int)((((int)(j)) <<((int)(j))))))) <<((int)((-1) + (10) *((short)((((int)((-1))) %((int)((0xBE)))))) + (0x4D5689) -((short)((((double)((42))) -((double)((-1))))))*((long)((((int)((0) + (-43) *((short)((((int)((-1))) %((int)((0)))))))) %((int)(((short)((((int)((0xD527))) %((int)((-1)))))))))))-((int)((((int)(j)) <<((int)(j))))))))))*((long)((((int)(j)) ^((int)((2) + (42) *((short)((((int)((131072))) %((int)((0)))))) + (0x8AC1F) -((short)((((double)((42))) -((double)((32))))))*((long)((((int)((-1) + (0x38DD57) *((short)((((int)((0))) %((int)((4096)))))))) %((int)(((short)((((int)((140737488355328))) %((int)((0xE6ED)))))))))))-((int)((((int)(j)) <<((int)(j))))))))))*((int)((((int)((262144) + (42) *((short)((((int)((1152921504606846976))) %((int)((0x0CC54)))))) + (46) -((short)((((double)((42))) -((double)((0))))))*((long)((((int)((0xAD) + (22) *((short)((((int)((0x99))) %((int)((0)))))))) %((int)(((short)((((int)((0))) %((int)((0)))))))))))-((int)((((int)(j)) <<((int)(j))))))) |((int)(j))))); j < (-7); ++j)
                                                                                                                                                                                                                                                                                                                                                                                                                                            ^~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:50:556: warning: remainder by zero is undefined [-Wdivision-by-zero]
    for (j = (0xC7) + (0x94) *((short)((((int)((34359738368))) %((int)((0x4F56C)))))) + (0xEACBB) -((short)((((double)((-43))) -((double)((0))))))*((long)((((int)((0) + (42) *((short)((((int)((0xA6))) %((int)((549755813888)))))))) %((int)(((short)((((int)((0xC87C))) %((int)((1)))))))))))-((int)((((int)(j)) <<((int)(j))))) + (0x6A22A6) -((int)((((int)(j)) <<((int)(j)))))+((int)((((int)((-1) + (0xBD) *((short)((((int)((0x6))) %((int)((0)))))) + (-43) -((short)((((double)((62))) -((double)((0))))))*((long)((((int)((0xE6) + (42) *((short)((((int)((0))) %((int)((36028797018963968)))))))) %((int)(((short)((((int)((-1))) %((int)((64)))))))))))-((int)((((int)(j)) <<((int)(j))))))) >>((int)(j)))))-((long)((((int)((0x9D8F7) + (43) *((short)((((int)((0))) %((int)((0xC76)))))) + (0x75D590) -((short)((((double)((46))) -((double)((8))))))*((long)((((int)((-1) + (42) *((short)((((int)((34359738368))) %((int)((0xA)))))))) %((int)(((short)((((int)((0))) %((int)((0)))))))))))-((int)((((int)(j)) <<((int)(j))))))) <<((int)((-1) + (10) *((short)((((int)((-1))) %((int)((0xBE)))))) + (0x4D5689) -((short)((((double)((42))) -((double)((-1))))))*((long)((((int)((0) + (-43) *((short)((((int)((-1))) %((int)((0)))))))) %((int)(((short)((((int)((0xD527))) %((int)((-1)))))))))))-((int)((((int)(j)) <<((int)(j))))))))))*((long)((((int)(j)) ^((int)((2) + (42) *((short)((((int)((131072))) %((int)((0)))))) + (0x8AC1F) -((short)((((double)((42))) -((double)((32))))))*((long)((((int)((-1) + (0x38DD57) *((short)((((int)((0))) %((int)((4096)))))))) %((int)(((short)((((int)((140737488355328))) %((int)((0xE6ED)))))))))))-((int)((((int)(j)) <<((int)(j))))))))))*((int)((((int)((262144) + (42) *((short)((((int)((1152921504606846976))) %((int)((0x0CC54)))))) + (46) -((short)((((double)((42))) -((double)((0))))))*((long)((((int)((0xAD) + (22) *((short)((((int)((0x99))) %((int)((0)))))))) %((int)(((short)((((int)((0))) %((int)((0)))))))))))-((int)((((int)(j)) <<((int)(j))))))) |((int)(j))))); j < (-7); ++j)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:50:952: warning: remainder by zero is undefined [-Wdivision-by-zero]
    for (j = (0xC7) + (0x94) *((short)((((int)((34359738368))) %((int)((0x4F56C)))))) + (0xEACBB) -((short)((((double)((-43))) -((double)((0))))))*((long)((((int)((0) + (42) *((short)((((int)((0xA6))) %((int)((549755813888)))))))) %((int)(((short)((((int)((0xC87C))) %((int)((1)))))))))))-((int)((((int)(j)) <<((int)(j))))) + (0x6A22A6) -((int)((((int)(j)) <<((int)(j)))))+((int)((((int)((-1) + (0xBD) *((short)((((int)((0x6))) %((int)((0)))))) + (-43) -((short)((((double)((62))) -((double)((0))))))*((long)((((int)((0xE6) + (42) *((short)((((int)((0))) %((int)((36028797018963968)))))))) %((int)(((short)((((int)((-1))) %((int)((64)))))))))))-((int)((((int)(j)) <<((int)(j))))))) >>((int)(j)))))-((long)((((int)((0x9D8F7) + (43) *((short)((((int)((0))) %((int)((0xC76)))))) + (0x75D590) -((short)((((double)((46))) -((double)((8))))))*((long)((((int)((-1) + (42) *((short)((((int)((34359738368))) %((int)((0xA)))))))) %((int)(((short)((((int)((0))) %((int)((0)))))))))))-((int)((((int)(j)) <<((int)(j))))))) <<((int)((-1) + (10) *((short)((((int)((-1))) %((int)((0xBE)))))) + (0x4D5689) -((short)((((double)((42))) -((double)((-1))))))*((long)((((int)((0) + (-43) *((short)((((int)((-1))) %((int)((0)))))))) %((int)(((short)((((int)((0xD527))) %((int)((-1)))))))))))-((int)((((int)(j)) <<((int)(j))))))))))*((long)((((int)(j)) ^((int)((2) + (42) *((short)((((int)((131072))) %((int)((0)))))) + (0x8AC1F) -((short)((((double)((42))) -((double)((32))))))*((long)((((int)((-1) + (0x38DD57) *((short)((((int)((0))) %((int)((4096)))))))) %((int)(((short)((((int)((140737488355328))) %((int)((0xE6ED)))))))))))-((int)((((int)(j)) <<((int)(j))))))))))*((int)((((int)((262144) + (42) *((short)((((int)((1152921504606846976))) %((int)((0x0CC54)))))) + (46) -((short)((((double)((42))) -((double)((0))))))*((long)((((int)((0xAD) + (22) *((short)((((int)((0x99))) %((int)((0)))))))) %((int)(((short)((((int)((0))) %((int)((0)))))))))))-((int)((((int)(j)) <<((int)(j))))))) |((int)(j))))); j < (-7); ++j)
~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:50:1192: warning: remainder by zero is undefined [-Wdivision-by-zero]
    for (j = (0xC7) + (0x94) *((short)((((int)((34359738368))) %((int)((0x4F56C)))))) + (0xEACBB) -((short)((((double)((-43))) -((double)((0))))))*((long)((((int)((0) + (42) *((short)((((int)((0xA6))) %((int)((549755813888)))))))) %((int)(((short)((((int)((0xC87C))) %((int)((1)))))))))))-((int)((((int)(j)) <<((int)(j))))) + (0x6A22A6) -((int)((((int)(j)) <<((int)(j)))))+((int)((((int)((-1) + (0xBD) *((short)((((int)((0x6))) %((int)((0)))))) + (-43) -((short)((((double)((62))) -((double)((0))))))*((long)((((int)((0xE6) + (42) *((short)((((int)((0))) %((int)((36028797018963968)))))))) %((int)(((short)((((int)((-1))) %((int)((64)))))))))))-((int)((((int)(j)) <<((int)(j))))))) >>((int)(j)))))-((long)((((int)((0x9D8F7) + (43) *((short)((((int)((0))) %((int)((0xC76)))))) + (0x75D590) -((short)((((double)((46))) -((double)((8))))))*((long)((((int)((-1) + (42) *((short)((((int)((34359738368))) %((int)((0xA)))))))) %((int)(((short)((((int)((0))) %((int)((0)))))))))))-((int)((((int)(j)) <<((int)(j))))))) <<((int)((-1) + (10) *((short)((((int)((-1))) %((int)((0xBE)))))) + (0x4D5689) -((short)((((double)((42))) -((double)((-1))))))*((long)((((int)((0) + (-43) *((short)((((int)((-1))) %((int)((0)))))))) %((int)(((short)((((int)((0xD527))) %((int)((-1)))))))))))-((int)((((int)(j)) <<((int)(j))))))))))*((long)((((int)(j)) ^((int)((2) + (42) *((short)((((int)((131072))) %((int)((0)))))) + (0x8AC1F) -((short)((((double)((42))) -((double)((32))))))*((long)((((int)((-1) + (0x38DD57) *((short)((((int)((0))) %((int)((4096)))))))) %((int)(((short)((((int)((140737488355328))) %((int)((0xE6ED)))))))))))-((int)((((int)(j)) <<((int)(j))))))))))*((int)((((int)((262144) + (42) *((short)((((int)((1152921504606846976))) %((int)((0x0CC54)))))) + (46) -((short)((((double)((42))) -((double)((0))))))*((long)((((int)((0xAD) + (22) *((short)((((int)((0x99))) %((int)((0)))))))) %((int)(((short)((((int)((0))) %((int)((0)))))))))))-((int)((((int)(j)) <<((int)(j))))))) |((int)(j))))); j < (-7); ++j)
~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:50:1211: warning: remainder by zero is undefined [-Wdivision-by-zero]
    for (j = (0xC7) + (0x94) *((short)((((int)((34359738368))) %((int)((0x4F56C)))))) + (0xEACBB) -((short)((((double)((-43))) -((double)((0))))))*((long)((((int)((0) + (42) *((short)((((int)((0xA6))) %((int)((549755813888)))))))) %((int)(((short)((((int)((0xC87C))) %((int)((1)))))))))))-((int)((((int)(j)) <<((int)(j))))) + (0x6A22A6) -((int)((((int)(j)) <<((int)(j)))))+((int)((((int)((-1) + (0xBD) *((short)((((int)((0x6))) %((int)((0)))))) + (-43) -((short)((((double)((62))) -((double)((0))))))*((long)((((int)((0xE6) + (42) *((short)((((int)((0))) %((int)((36028797018963968)))))))) %((int)(((short)((((int)((-1))) %((int)((64)))))))))))-((int)((((int)(j)) <<((int)(j))))))) >>((int)(j)))))-((long)((((int)((0x9D8F7) + (43) *((short)((((int)((0))) %((int)((0xC76)))))) + (0x75D590) -((short)((((double)((46))) -((double)((8))))))*((long)((((int)((-1) + (42) *((short)((((int)((34359738368))) %((int)((0xA)))))))) %((int)(((short)((((int)((0))) %((int)((0)))))))))))-((int)((((int)(j)) <<((int)(j))))))) <<((int)((-1) + (10) *((short)((((int)((-1))) %((int)((0xBE)))))) + (0x4D5689) -((short)((((double)((42))) -((double)((-1))))))*((long)((((int)((0) + (-43) *((short)((((int)((-1))) %((int)((0)))))))) %((int)(((short)((((int)((0xD527))) %((int)((-1)))))))))))-((int)((((int)(j)) <<((int)(j))))))))))*((long)((((int)(j)) ^((int)((2) + (42) *((short)((((int)((131072))) %((int)((0)))))) + (0x8AC1F) -((short)((((double)((42))) -((double)((32))))))*((long)((((int)((-1) + (0x38DD57) *((short)((((int)((0))) %((int)((4096)))))))) %((int)(((short)((((int)((140737488355328))) %((int)((0xE6ED)))))))))))-((int)((((int)(j)) <<((int)(j))))))))))*((int)((((int)((262144) + (42) *((short)((((int)((1152921504606846976))) %((int)((0x0CC54)))))) + (46) -((short)((((double)((42))) -((double)((0))))))*((long)((((int)((0xAD) + (22) *((short)((((int)((0x99))) %((int)((0)))))))) %((int)(((short)((((int)((0))) %((int)((0)))))))))))-((int)((((int)(j)) <<((int)(j))))))) |((int)(j))))); j < (-7); ++j)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:50:1378: warning: remainder by zero is undefined [-Wdivision-by-zero]
    for (j = (0xC7) + (0x94) *((short)((((int)((34359738368))) %((int)((0x4F56C)))))) + (0xEACBB) -((short)((((double)((-43))) -((double)((0))))))*((long)((((int)((0) + (42) *((short)((((int)((0xA6))) %((int)((549755813888)))))))) %((int)(((short)((((int)((0xC87C))) %((int)((1)))))))))))-((int)((((int)(j)) <<((int)(j))))) + (0x6A22A6) -((int)((((int)(j)) <<((int)(j)))))+((int)((((int)((-1) + (0xBD) *((short)((((int)((0x6))) %((int)((0)))))) + (-43) -((short)((((double)((62))) -((double)((0))))))*((long)((((int)((0xE6) + (42) *((short)((((int)((0))) %((int)((36028797018963968)))))))) %((int)(((short)((((int)((-1))) %((int)((64)))))))))))-((int)((((int)(j)) <<((int)(j))))))) >>((int)(j)))))-((long)((((int)((0x9D8F7) + (43) *((short)((((int)((0))) %((int)((0xC76)))))) + (0x75D590) -((short)((((double)((46))) -((double)((8))))))*((long)((((int)((-1) + (42) *((short)((((int)((34359738368))) %((int)((0xA)))))))) %((int)(((short)((((int)((0))) %((int)((0)))))))))))-((int)((((int)(j)) <<((int)(j))))))) <<((int)((-1) + (10) *((short)((((int)((-1))) %((int)((0xBE)))))) + (0x4D5689) -((short)((((double)((42))) -((double)((-1))))))*((long)((((int)((0) + (-43) *((short)((((int)((-1))) %((int)((0)))))))) %((int)(((short)((((int)((0xD527))) %((int)((-1)))))))))))-((int)((((int)(j)) <<((int)(j))))))))))*((long)((((int)(j)) ^((int)((2) + (42) *((short)((((int)((131072))) %((int)((0)))))) + (0x8AC1F) -((short)((((double)((42))) -((double)((32))))))*((long)((((int)((-1) + (0x38DD57) *((short)((((int)((0))) %((int)((4096)))))))) %((int)(((short)((((int)((140737488355328))) %((int)((0xE6ED)))))))))))-((int)((((int)(j)) <<((int)(j))))))))))*((int)((((int)((262144) + (42) *((short)((((int)((1152921504606846976))) %((int)((0x0CC54)))))) + (46) -((short)((((double)((42))) -((double)((0))))))*((long)((((int)((0xAD) + (22) *((short)((((int)((0x99))) %((int)((0)))))))) %((int)(((short)((((int)((0))) %((int)((0)))))))))))-((int)((((int)(j)) <<((int)(j))))))) |((int)(j))))); j < (-7); ++j)
~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:50:1536: warning: remainder by zero is undefined [-Wdivision-by-zero]
    for (j = (0xC7) + (0x94) *((short)((((int)((34359738368))) %((int)((0x4F56C)))))) + (0xEACBB) -((short)((((double)((-43))) -((double)((0))))))*((long)((((int)((0) + (42) *((short)((((int)((0xA6))) %((int)((549755813888)))))))) %((int)(((short)((((int)((0xC87C))) %((int)((1)))))))))))-((int)((((int)(j)) <<((int)(j))))) + (0x6A22A6) -((int)((((int)(j)) <<((int)(j)))))+((int)((((int)((-1) + (0xBD) *((short)((((int)((0x6))) %((int)((0)))))) + (-43) -((short)((((double)((62))) -((double)((0))))))*((long)((((int)((0xE6) + (42) *((short)((((int)((0))) %((int)((36028797018963968)))))))) %((int)(((short)((((int)((-1))) %((int)((64)))))))))))-((int)((((int)(j)) <<((int)(j))))))) >>((int)(j)))))-((long)((((int)((0x9D8F7) + (43) *((short)((((int)((0))) %((int)((0xC76)))))) + (0x75D590) -((short)((((double)((46))) -((double)((8))))))*((long)((((int)((-1) + (42) *((short)((((int)((34359738368))) %((int)((0xA)))))))) %((int)(((short)((((int)((0))) %((int)((0)))))))))))-((int)((((int)(j)) <<((int)(j))))))) <<((int)((-1) + (10) *((short)((((int)((-1))) %((int)((0xBE)))))) + (0x4D5689) -((short)((((double)((42))) -((double)((-1))))))*((long)((((int)((0) + (-43) *((short)((((int)((-1))) %((int)((0)))))))) %((int)(((short)((((int)((0xD527))) %((int)((-1)))))))))))-((int)((((int)(j)) <<((int)(j))))))))))*((long)((((int)(j)) ^((int)((2) + (42) *((short)((((int)((131072))) %((int)((0)))))) + (0x8AC1F) -((short)((((double)((42))) -((double)((32))))))*((long)((((int)((-1) + (0x38DD57) *((short)((((int)((0))) %((int)((4096)))))))) %((int)(((short)((((int)((140737488355328))) %((int)((0xE6ED)))))))))))-((int)((((int)(j)) <<((int)(j))))))))))*((int)((((int)((262144) + (42) *((short)((((int)((1152921504606846976))) %((int)((0x0CC54)))))) + (46) -((short)((((double)((42))) -((double)((0))))))*((long)((((int)((0xAD) + (22) *((short)((((int)((0x99))) %((int)((0)))))))) %((int)(((short)((((int)((0))) %((int)((0)))))))))))-((int)((((int)(j)) <<((int)(j))))))) |((int)(j))))); j < (-7); ++j)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:50:1856: warning: remainder by zero is undefined [-Wdivision-by-zero]
    for (j = (0xC7) + (0x94) *((short)((((int)((34359738368))) %((int)((0x4F56C)))))) + (0xEACBB) -((short)((((double)((-43))) -((double)((0))))))*((long)((((int)((0) + (42) *((short)((((int)((0xA6))) %((int)((549755813888)))))))) %((int)(((short)((((int)((0xC87C))) %((int)((1)))))))))))-((int)((((int)(j)) <<((int)(j))))) + (0x6A22A6) -((int)((((int)(j)) <<((int)(j)))))+((int)((((int)((-1) + (0xBD) *((short)((((int)((0x6))) %((int)((0)))))) + (-43) -((short)((((double)((62))) -((double)((0))))))*((long)((((int)((0xE6) + (42) *((short)((((int)((0))) %((int)((36028797018963968)))))))) %((int)(((short)((((int)((-1))) %((int)((64)))))))))))-((int)((((int)(j)) <<((int)(j))))))) >>((int)(j)))))-((long)((((int)((0x9D8F7) + (43) *((short)((((int)((0))) %((int)((0xC76)))))) + (0x75D590) -((short)((((double)((46))) -((double)((8))))))*((long)((((int)((-1) + (42) *((short)((((int)((34359738368))) %((int)((0xA)))))))) %((int)(((short)((((int)((0))) %((int)((0)))))))))))-((int)((((int)(j)) <<((int)(j))))))) <<((int)((-1) + (10) *((short)((((int)((-1))) %((int)((0xBE)))))) + (0x4D5689) -((short)((((double)((42))) -((double)((-1))))))*((long)((((int)((0) + (-43) *((short)((((int)((-1))) %((int)((0)))))))) %((int)(((short)((((int)((0xD527))) %((int)((-1)))))))))))-((int)((((int)(j)) <<((int)(j))))))))))*((long)((((int)(j)) ^((int)((2) + (42) *((short)((((int)((131072))) %((int)((0)))))) + (0x8AC1F) -((short)((((double)((42))) -((double)((32))))))*((long)((((int)((-1) + (0x38DD57) *((short)((((int)((0))) %((int)((4096)))))))) %((int)(((short)((((int)((140737488355328))) %((int)((0xE6ED)))))))))))-((int)((((int)(j)) <<((int)(j))))))))))*((int)((((int)((262144) + (42) *((short)((((int)((1152921504606846976))) %((int)((0x0CC54)))))) + (46) -((short)((((double)((42))) -((double)((0))))))*((long)((((int)((0xAD) + (22) *((short)((((int)((0x99))) %((int)((0)))))))) %((int)(((short)((((int)((0))) %((int)((0)))))))))))-((int)((((int)(j)) <<((int)(j))))))) |((int)(j))))); j < (-7); ++j)
~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:50:1906: warning: remainder by zero is undefined [-Wdivision-by-zero]
    for (j = (0xC7) + (0x94) *((short)((((int)((34359738368))) %((int)((0x4F56C)))))) + (0xEACBB) -((short)((((double)((-43))) -((double)((0))))))*((long)((((int)((0) + (42) *((short)((((int)((0xA6))) %((int)((549755813888)))))))) %((int)(((short)((((int)((0xC87C))) %((int)((1)))))))))))-((int)((((int)(j)) <<((int)(j))))) + (0x6A22A6) -((int)((((int)(j)) <<((int)(j)))))+((int)((((int)((-1) + (0xBD) *((short)((((int)((0x6))) %((int)((0)))))) + (-43) -((short)((((double)((62))) -((double)((0))))))*((long)((((int)((0xE6) + (42) *((short)((((int)((0))) %((int)((36028797018963968)))))))) %((int)(((short)((((int)((-1))) %((int)((64)))))))))))-((int)((((int)(j)) <<((int)(j))))))) >>((int)(j)))))-((long)((((int)((0x9D8F7) + (43) *((short)((((int)((0))) %((int)((0xC76)))))) + (0x75D590) -((short)((((double)((46))) -((double)((8))))))*((long)((((int)((-1) + (42) *((short)((((int)((34359738368))) %((int)((0xA)))))))) %((int)(((short)((((int)((0))) %((int)((0)))))))))))-((int)((((int)(j)) <<((int)(j))))))) <<((int)((-1) + (10) *((short)((((int)((-1))) %((int)((0xBE)))))) + (0x4D5689) -((short)((((double)((42))) -((double)((-1))))))*((long)((((int)((0) + (-43) *((short)((((int)((-1))) %((int)((0)))))))) %((int)(((short)((((int)((0xD527))) %((int)((-1)))))))))))-((int)((((int)(j)) <<((int)(j))))))))))*((long)((((int)(j)) ^((int)((2) + (42) *((short)((((int)((131072))) %((int)((0)))))) + (0x8AC1F) -((short)((((double)((42))) -((double)((32))))))*((long)((((int)((-1) + (0x38DD57) *((short)((((int)((0))) %((int)((4096)))))))) %((int)(((short)((((int)((140737488355328))) %((int)((0xE6ED)))))))))))-((int)((((int)(j)) <<((int)(j))))))))))*((int)((((int)((262144) + (42) *((short)((((int)((1152921504606846976))) %((int)((0x0CC54)))))) + (46) -((short)((((double)((42))) -((double)((0))))))*((long)((((int)((0xAD) + (22) *((short)((((int)((0x99))) %((int)((0)))))))) %((int)(((short)((((int)((0))) %((int)((0)))))))))))-((int)((((int)(j)) <<((int)(j))))))) |((int)(j))))); j < (-7); ++j)
~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:81: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:360: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:433: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:656: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:958: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:1110: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:1159: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:1576: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:1626: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:1945: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:1993: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:2590: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:2640: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:2869: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:2939: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:2987: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:3158: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:3206: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:3465: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:3621: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:3669: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:4096: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:4150: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:4368: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:4418: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:4800: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:4849: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:5082: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:5148: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:5200: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:5376: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:5428: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:5683: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:5840: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:5888: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:6307: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:6356: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:6576: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:7010: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:7291: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:7359: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:7408: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:7584: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:7887: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:8045: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:8094: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:8542: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:8590: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:8800: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:8848: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:9252: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:9301: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:9538: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:9612: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:9845: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:10295: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:10763: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:10811: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:11007: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:11289: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:11359: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:11590: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:11638: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:12051: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:12100: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:12487: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:12539: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:12776: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:12850: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:13075: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:13124: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:13379: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:13537: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:13589: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:13967: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:14253: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:14324: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:14547: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:14595: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:14852: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:15004: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:15053: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:15542: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:15755: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:15803: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:16312: warning: shift count is negative [-Wshift-count-negative]
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_18/fuzzer-file-18458-2021-12-19-18:25:19.c:51:16366: warning: shift count is negative [-Wshift-count-negative]
PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: /usr/lib/llvm-12/bin/clang -cc1 -triple x86_64-pc-linux-gnu -emit-obj -mrelax-all --mrelax-relocations -disable-free -disable-llvm-verifier -discard-value-names -main-file-name fuzzer-file-18458-2021-12-19-18:25:19-5ed195.c -mrelocation-model static -mframe-pointer=all -fmath-errno -fno-rounding-math -mconstructor-aliases -munwind-tables -target-cpu x86-64 -tune-cpu generic -fno-split-dwarf-inlining -debugger-tuning=gdb -resource-dir /usr/lib/llvm-12/lib/clang/12.0.1 -internal-isystem /usr/local/include -internal-isystem /usr/lib/llvm-12/lib/clang/12.0.1/include -internal-externc-isystem /usr/include/x86_64-linux-gnu -internal-externc-isystem /include -internal-externc-isystem /usr/include -O0 -fdebug-compilation-dir /home/user42/agg_8_crash_19082022/tests -ferror-limit 19 -fgnuc-version=4.2.1 -faddrsig -o /tmp/fuzzer-file-18458-2021-12-19-18:25:19-5ed195-85ed07.o -x c fuzzer-file-18458-2021-12-19-18:25:19-5ed195.c
1.	<eof> parser at end of file
2.	Code generation
 #0 0x00007f8072086001 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xd1a001)
 #1 0x00007f8072084140 llvm::sys::RunSignalHandlers() (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xd18140)
 #2 0x00007f8072086712 (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xd1a712)
 #3 0x00007f8079c9c980 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x12980)
 #4 0x00007f8079c9b371 write (/lib/x86_64-linux-gnu/libpthread.so.0+0x11371)
 #5 0x00007f8072068327 llvm::raw_fd_ostream::write_impl(char const*, unsigned long) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xcfc327)
 #6 0x00007f8072066ee5 llvm::raw_ostream::write(char const*, unsigned long) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xcfaee5)
 #7 0x00007f80733096ee llvm::MCAssembler::writeSectionData(llvm::raw_ostream&, llvm::MCSection const*, llvm::MCAsmLayout const&) const (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x1f9d6ee)
 #8 0x00007f80732f58d9 (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x1f898d9)
 #9 0x00007f80732f4000 (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x1f88000)
#10 0x00007f807330a497 llvm::MCAssembler::Finish() (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x1f9e497)
#11 0x00007f80733442f7 llvm::MCStreamer::Finish(llvm::SMLoc) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x1fd82f7)
#12 0x00007f80728183f5 llvm::AsmPrinter::doFinalization(llvm::Module&) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x14ac3f5)
#13 0x00007f80721c0941 llvm::FPPassManager::doFinalization(llvm::Module&) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xe54941)
#14 0x00007f80721bb302 llvm::legacy::PassManagerImpl::run(llvm::Module&) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xe4f302)
#15 0x00007f80784d5b06 clang::EmitBackendOutput(clang::DiagnosticsEngine&, clang::HeaderSearchOptions const&, clang::CodeGenOptions const&, clang::TargetOptions const&, clang::LangOptions const&, llvm::DataLayout const&, llvm::Module*, clang::BackendAction, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream> >) (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x15ecb06)
#16 0x00007f807878774e (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x189e74e)
#17 0x00007f807782ceb4 clang::ParseAST(clang::Sema&, bool, bool) (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x943eb4)
#18 0x00007f80787843b3 clang::CodeGenAction::ExecuteAction() (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x189b3b3)
#19 0x00007f8078eb9446 clang::FrontendAction::Execute() (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x1fd0446)
#20 0x00007f8078e42c11 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x1f59c11)
#21 0x00007f8078f20576 clang::ExecuteCompilerInvocation(clang::CompilerInstance*) (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x2037576)
#22 0x0000000000412a7a cc1_main(llvm::ArrayRef<char const*>, char const*, void*) (/usr/lib/llvm-12/bin/clang+0x412a7a)
#23 0x0000000000410dbf (/usr/lib/llvm-12/bin/clang+0x410dbf)
#24 0x0000000000410bb6 main (/usr/lib/llvm-12/bin/clang+0x410bb6)
#25 0x00007f80705d9c87 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c87)
#26 0x000000000040ddfa _start (/usr/lib/llvm-12/bin/clang+0x40ddfa)
clang: error: unable to execute command: File size limit exceeded (core dumped)
clang: error: clang frontend command failed due to signal (use -v to see invocation)
Ubuntu clang version 12.0.1-++20211102090516+fed41342a82f-1~exp1~20211102211019.11
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/lib/llvm-12/bin
clang: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang: note: diagnostic msg: /tmp/fuzzer-file-18458-2021-12-19-18:25:19-5ed195-e6a56c.c
clang: note: diagnostic msg: /tmp/fuzzer-file-18458-2021-12-19-18:25:19-5ed195-e6a56c.sh
clang: note: diagnostic msg: 

********************
