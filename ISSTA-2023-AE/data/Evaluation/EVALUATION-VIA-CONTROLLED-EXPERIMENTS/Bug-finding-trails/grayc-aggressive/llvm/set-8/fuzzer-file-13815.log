/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_4/fuzzer-file-13815-2021-12-19-04:15:09.c:101:197: warning: operator '<<' has lower precedence than '-'; '-' will be evaluated first [-Wshift-op-parentheses]
c = 0xff << ((0x36AB) - b) + ((41)) +((long)((((double)(0xff << ((0x36AB) - b))) +((double)(c)))))-((int)((((double)(c)) -((double)(0xff << ((0x36AB) - b))))))+((short)((((int)(c)) >>((int)(c)))))-((long)((((int)(0xff << ((0x36AB) - b))) ^((int)(c)))));
         ~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_4/fuzzer-file-13815-2021-12-19-04:15:09.c:101:197: note: place parentheses around the '-' expression to silence this warning
c = 0xff << ((0x36AB) - b) + ((41)) +((long)((((double)(0xff << ((0x36AB) - b))) +((double)(c)))))-((int)((((double)(c)) -((double)(0xff << ((0x36AB) - b))))))+((short)((((int)(c)) >>((int)(c)))))-((long)((((int)(0xff << ((0x36AB) - b))) ^((int)(c)))));
                                                                                                                                                                                                    ^
            (                                                                                                                                                                                                                                               )
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_4/fuzzer-file-13815-2021-12-19-04:15:09.c:102:197: warning: operator '<<' has lower precedence than '-'; '-' will be evaluated first [-Wshift-op-parentheses]
c = 0xff << ((0x36AB) - b) + ((42)) +((long)((((double)(0xff << ((0x36AB) - b))) +((double)(c)))))-((int)((((double)(c)) -((double)(0xff << ((0x36AB) - b))))))+((short)((((int)(c)) >>((int)(c)))))-((long)((((int)(0xff << ((0x36AB) - b))) ^((int)(c)))));
         ~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_4/fuzzer-file-13815-2021-12-19-04:15:09.c:102:197: note: place parentheses around the '-' expression to silence this warning
c = 0xff << ((0x36AB) - b) + ((42)) +((long)((((double)(0xff << ((0x36AB) - b))) +((double)(c)))))-((int)((((double)(c)) -((double)(0xff << ((0x36AB) - b))))))+((short)((((int)(c)) >>((int)(c)))))-((long)((((int)(0xff << ((0x36AB) - b))) ^((int)(c)))));
                                                                                                                                                                                                    ^
            (                                                                                                                                                                                                                                               )
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_4/fuzzer-file-13815-2021-12-19-04:15:09.c:105:186: warning: operator '<<' has lower precedence than '-'; '-' will be evaluated first [-Wshift-op-parentheses]
c = 0xff << ((0x36AB) - b) + (-(-44)) *((short)((((double)(0xff << ((0x36AB) - b))) *((double)(0xff << ((0x36AB) - b))))))-((short)((((double)(0xff << ((0x36AB) - b))) -((double)(c)))))-((short)((((int)(c)) ^((int)(0xff << ((0x36AB) - b))))));
         ~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_4/fuzzer-file-13815-2021-12-19-04:15:09.c:105:186: note: place parentheses around the '-' expression to silence this warning
c = 0xff << ((0x36AB) - b) + (-(-44)) *((short)((((double)(0xff << ((0x36AB) - b))) *((double)(0xff << ((0x36AB) - b))))))-((short)((((double)(0xff << ((0x36AB) - b))) -((double)(c)))))-((short)((((int)(c)) ^((int)(0xff << ((0x36AB) - b))))));
                                                                                                                                                                                         ^
            (                                                                                                                                                                                                                                     )
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_4/fuzzer-file-13815-2021-12-19-04:15:09.c:106:186: warning: operator '<<' has lower precedence than '-'; '-' will be evaluated first [-Wshift-op-parentheses]
c = 0xff << ((0x36AB) - b) + (-(107)) *((short)((((double)(0xff << ((0x36AB) - b))) *((double)(0xff << ((0x36AB) - b))))))-((short)((((double)(0xff << ((0x36AB) - b))) -((double)(c)))))-((short)((((int)(c)) ^((int)(0xff << ((0x36AB) - b))))));
         ~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_4/fuzzer-file-13815-2021-12-19-04:15:09.c:106:186: note: place parentheses around the '-' expression to silence this warning
c = 0xff << ((0x36AB) - b) + (-(107)) *((short)((((double)(0xff << ((0x36AB) - b))) *((double)(0xff << ((0x36AB) - b))))))-((short)((((double)(0xff << ((0x36AB) - b))) -((double)(c)))))-((short)((((int)(c)) ^((int)(0xff << ((0x36AB) - b))))));
                                                                                                                                                                                         ^
            (                                                                                                                                                                                                                                     )
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_4/fuzzer-file-13815-2021-12-19-04:15:09.c:112:101: warning: operator '<<' has lower precedence than '+'; '+' will be evaluated first [-Wshift-op-parentheses]
c = 0xff << ((((24))) - b) + (-(93)) *((short)((((double)(c)) *((double)(0xff << (((-(9))) - b))))))+((int)((((int)(c)) |((int)(c)))));
         ~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_4/fuzzer-file-13815-2021-12-19-04:15:09.c:112:101: note: place parentheses around the '+' expression to silence this warning
c = 0xff << ((((24))) - b) + (-(93)) *((short)((((double)(c)) *((double)(0xff << (((-(9))) - b))))))+((int)((((int)(c)) |((int)(c)))));
                                                                                                    ^
            (                                                                                                                         )
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_4/fuzzer-file-13815-2021-12-19-04:15:09.c:113:103: warning: operator '<<' has lower precedence than '+'; '+' will be evaluated first [-Wshift-op-parentheses]
c = 0xff << ((((24))) - b) + (-(43)) *((short)((((double)(c)) *((double)(0xff << (((-(-10))) - b))))))+((int)((((int)(c)) |((int)(c)))));
         ~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_4/fuzzer-file-13815-2021-12-19-04:15:09.c:113:103: note: place parentheses around the '+' expression to silence this warning
c = 0xff << ((((24))) - b) + (-(43)) *((short)((((double)(c)) *((double)(0xff << (((-(-10))) - b))))))+((int)((((int)(c)) |((int)(c)))));
                                                                                                      ^
            (                                                                                                                           )
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_4/fuzzer-file-13815-2021-12-19-04:15:09.c:144:30: warning: implicit conversion from 'int' to 'unsigned char' changes value from 4681923 to 195 [-Wconstant-conversion]
  struct S x = { ((0x6C4)), (0x4770C3), (((6))), { 0xaa, 0xbb, 0xcc, 0xdd }};
               ~             ^~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_4/fuzzer-file-13815-2021-12-19-04:15:09.c:144:20: warning: implicit conversion from 'int' to 'unsigned char' changes value from 1732 to 196 [-Wconstant-conversion]
  struct S x = { ((0x6C4)), (0x4770C3), (((6))), { 0xaa, 0xbb, 0xcc, 0xdd }};
               ~   ^~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_4/fuzzer-file-13815-2021-12-19-04:15:09.c:145:39: warning: implicit conversion from 'int' to 'unsigned char' changes value from 65380 to 100 [-Wconstant-conversion]
  struct S y = { ((0x02)), (((25))), (0xFF64), { ((-(-2))) }};
               ~                      ^~~~~~
PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: /usr/lib/llvm-12/bin/clang -cc1 -triple x86_64-pc-linux-gnu -emit-obj -mrelax-all --mrelax-relocations -disable-free -disable-llvm-verifier -discard-value-names -main-file-name fuzzer-file-13815-2021-12-19-04:15:09-f988ed.c -mrelocation-model static -mframe-pointer=all -fmath-errno -fno-rounding-math -mconstructor-aliases -munwind-tables -target-cpu x86-64 -tune-cpu generic -fno-split-dwarf-inlining -debugger-tuning=gdb -resource-dir /usr/lib/llvm-12/lib/clang/12.0.1 -internal-isystem /usr/local/include -internal-isystem /usr/lib/llvm-12/lib/clang/12.0.1/include -internal-externc-isystem /usr/include/x86_64-linux-gnu -internal-externc-isystem /include -internal-externc-isystem /usr/include -O0 -fdebug-compilation-dir /home/user42/agg_8_crash_19082022/tests -ferror-limit 19 -fgnuc-version=4.2.1 -faddrsig -o /tmp/fuzzer-file-13815-2021-12-19-04:15:09-f988ed-33bd00.o -x c fuzzer-file-13815-2021-12-19-04:15:09-f988ed.c
1.	<eof> parser at end of file
2.	Code generation
 #0 0x00007f38e9671001 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xd1a001)
 #1 0x00007f38e966f140 llvm::sys::RunSignalHandlers() (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xd18140)
 #2 0x00007f38e9671712 (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xd1a712)
 #3 0x00007f38f1287980 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x12980)
 #4 0x00007f38f1286371 write (/lib/x86_64-linux-gnu/libpthread.so.0+0x11371)
 #5 0x00007f38e9653327 llvm::raw_fd_ostream::write_impl(char const*, unsigned long) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xcfc327)
 #6 0x00007f38e9651ee5 llvm::raw_ostream::write(char const*, unsigned long) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xcfaee5)
 #7 0x00007f38ea8f46ee llvm::MCAssembler::writeSectionData(llvm::raw_ostream&, llvm::MCSection const*, llvm::MCAsmLayout const&) const (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x1f9d6ee)
 #8 0x00007f38ea8e08d9 (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x1f898d9)
 #9 0x00007f38ea8df000 (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x1f88000)
#10 0x00007f38ea8f5497 llvm::MCAssembler::Finish() (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x1f9e497)
#11 0x00007f38ea92f2f7 llvm::MCStreamer::Finish(llvm::SMLoc) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x1fd82f7)
#12 0x00007f38e9e033f5 llvm::AsmPrinter::doFinalization(llvm::Module&) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x14ac3f5)
#13 0x00007f38e97ab941 llvm::FPPassManager::doFinalization(llvm::Module&) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xe54941)
#14 0x00007f38e97a6302 llvm::legacy::PassManagerImpl::run(llvm::Module&) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xe4f302)
#15 0x00007f38efac0b06 clang::EmitBackendOutput(clang::DiagnosticsEngine&, clang::HeaderSearchOptions const&, clang::CodeGenOptions const&, clang::TargetOptions const&, clang::LangOptions const&, llvm::DataLayout const&, llvm::Module*, clang::BackendAction, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream> >) (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x15ecb06)
#16 0x00007f38efd7274e (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x189e74e)
#17 0x00007f38eee17eb4 clang::ParseAST(clang::Sema&, bool, bool) (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x943eb4)
#18 0x00007f38efd6f3b3 clang::CodeGenAction::ExecuteAction() (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x189b3b3)
#19 0x00007f38f04a4446 clang::FrontendAction::Execute() (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x1fd0446)
#20 0x00007f38f042dc11 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x1f59c11)
#21 0x00007f38f050b576 clang::ExecuteCompilerInvocation(clang::CompilerInstance*) (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x2037576)
#22 0x0000000000412a7a cc1_main(llvm::ArrayRef<char const*>, char const*, void*) (/usr/lib/llvm-12/bin/clang+0x412a7a)
#23 0x0000000000410dbf (/usr/lib/llvm-12/bin/clang+0x410dbf)
#24 0x0000000000410bb6 main (/usr/lib/llvm-12/bin/clang+0x410bb6)
#25 0x00007f38e7bc4c87 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c87)
#26 0x000000000040ddfa _start (/usr/lib/llvm-12/bin/clang+0x40ddfa)
clang: error: unable to execute command: File size limit exceeded (core dumped)
clang: error: clang frontend command failed due to signal (use -v to see invocation)
Ubuntu clang version 12.0.1-++20211102090516+fed41342a82f-1~exp1~20211102211019.11
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/lib/llvm-12/bin
clang: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang: note: diagnostic msg: /tmp/fuzzer-file-13815-2021-12-19-04:15:09-f988ed-f572d5.c
clang: note: diagnostic msg: /tmp/fuzzer-file-13815-2021-12-19-04:15:09-f988ed-f572d5.sh
clang: note: diagnostic msg: 

********************
