/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:24:22: warning: array index -4 is before the beginning of the array [-Warray-bounds]
tmp[i][((0xFA2A))] = x[i][(-(4))] + ((-41)) +((int)((((int)(x[i][(-(0xA))])) %((int)(x[i][((0xFDA015))])))))-((long)((((int)(tmp[i][((35))])) &((int)(x[i][((0xE))])))))+((int)((((int)(tmp[i][(-(0x00))])) |((int)(tmp[i][(0x1)]))))) + ((170)) -((int)((((int)(((int)((((int)(tmp[i][((0x80))])) |((int)(tmp[i][(-(4))]))))))) <<((int)(tmp[i][((-20))])))))+((int)((((int)(((int)((((int)(tmp[i][((-36))])) |((int)(tmp[i][((0x34EF))]))))))) ^((int)(((58)))))))*((long)((((int)(((int)((((int)(tmp[i][(0xAE5)])) |((int)(tmp[i][((0x0DBBD))]))))))) ^((int)(((long)((((int)(tmp[i][((35))])) &((int)(x[i][(0xA52C5)]))))))))))*((int)((((int)(((int)((((int)(tmp[i][((0))])) |((int)(tmp[i][(-(0x351))]))))))) >>((int)(((170))))))) + (-(-44)) *((short)((((int)((0x1ACAC))) ^((int)(((int)((((int)(((int)((((int)(tmp[i][(-(68))])) |((int)(tmp[i][((-4))]))))))) ^((int)(((106)))))))*((long)((((int)(((int)((((int)(tmp[i][((3))])) |((int)(tmp[i][((35))]))))))) ^((int)(((long)((((int)(tmp[i][(-(6))])) &((int)(x[i][(0xBD39)]))))))))))*((int)((((int)(((int)((((int)(tmp[i][((8))])) |((int)(tmp[i][((0x98))]))))))) >>((int)((-(41))))))))))))+((short)((((int)(x[i][((3))] + ((-43)) +((int)((((int)(x[i][((0x9A))])) %((int)(x[i][((0xE2))])))))-((long)((((int)(tmp[i][((83))])) &((int)(x[i][(-(4))])))))+((int)((((int)(tmp[i][(0x2)])) |((int)(tmp[i][((-4))]))))))) >>((int)(tmp[i][((4))])))))-((short)((((int)(((-41)))) &((int)(x[i][((7))] + ((58)))))))-((int)((((int)(x[i][(-(0xC))] + (-(11)) +((int)((((int)(x[i][(0xF)])) %((int)(x[i][((0x6E))])))))-((long)((((int)(tmp[i][(-(0xB7EB))])) &((int)(x[i][((4))])))))+((int)((((int)(tmp[i][(-(5))])) |((int)(tmp[i][((3))]))))) + ((33)) -((int)((((int)(((int)((((int)(tmp[i][((69))])) |((int)(tmp[i][(0xD032D)]))))))) <<((int)(tmp[i][((-20))]))))))) &((int)(x[i][(0xEB9E3)] + ((32)) +((int)((((int)(x[i][(-(0))])) %((int)(x[i][(0x1F6EA)])))))-((long)((((int)(tmp[i][((0xE7))])) &((int)(x[i][(0x659F)]))))))))))-((int)((((int)(x[i][(-(4))] + (-(-44)) +((int)((((int)(x[i][(-(-5))])) %((int)(x[i][(0x6D)])))))-((long)((((int)(tmp[i][((3))])) &((int)(x[i][(0x3EA1)])))))+((int)((((int)(tmp[i][((-36))])) |((int)(tmp[i][(0xE7)]))))) + (0xA0E))) %((int)(x[i][(-(4))] + ((22)) +((int)((((int)(x[i][((3))])) %((int)(x[i][((0xC))])))))-((long)((((int)(tmp[i][(0x5103)])) &((int)(x[i][((0x7D400))])))))+((int)((((int)(tmp[i][((0x1DAB1))])) |((int)(tmp[i][((0xC5))]))))) + (-(-44)) -((int)((((int)(((int)((((int)(tmp[i][(-(36))])) |((int)(tmp[i][(0x5)]))))))) <<((int)(tmp[i][((0xF))])))))+((int)((((int)(((int)((((int)(tmp[i][(-(0))])) |((int)(tmp[i][(-(6))]))))))) ^((int)((-(-44)))))))*((long)((((int)(((int)((((int)(tmp[i][(-(0))])) |((int)(tmp[i][(-(4))]))))))) ^((int)(((long)((((int)(tmp[i][(0x972)])) &((int)(x[i][((131))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][(0x93FF)])) |((int)(tmp[i][(-(0))]))))))) >>((int)(((-43))))))))))));
                     ^     ~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:2:1: note: array 'x' declared here
double x[(0x23B)][((0xFA1D6))] = { { ((0x1E9)), ((10)), ((-15)), ((-16)), ((-15)), ((0xCA5C2)), -((-10)), -(-(66)), -((1)), -(-(66)) },
^
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:24:693: warning: shift count >= width of type [-Wshift-count-overflow]
tmp[i][((0xFA2A))] = x[i][(-(4))] + ((-41)) +((int)((((int)(x[i][(-(0xA))])) %((int)(x[i][((0xFDA015))])))))-((long)((((int)(tmp[i][((35))])) &((int)(x[i][((0xE))])))))+((int)((((int)(tmp[i][(-(0x00))])) |((int)(tmp[i][(0x1)]))))) + ((170)) -((int)((((int)(((int)((((int)(tmp[i][((0x80))])) |((int)(tmp[i][(-(4))]))))))) <<((int)(tmp[i][((-20))])))))+((int)((((int)(((int)((((int)(tmp[i][((-36))])) |((int)(tmp[i][((0x34EF))]))))))) ^((int)(((58)))))))*((long)((((int)(((int)((((int)(tmp[i][(0xAE5)])) |((int)(tmp[i][((0x0DBBD))]))))))) ^((int)(((long)((((int)(tmp[i][((35))])) &((int)(x[i][(0xA52C5)]))))))))))*((int)((((int)(((int)((((int)(tmp[i][((0))])) |((int)(tmp[i][(-(0x351))]))))))) >>((int)(((170))))))) + (-(-44)) *((short)((((int)((0x1ACAC))) ^((int)(((int)((((int)(((int)((((int)(tmp[i][(-(68))])) |((int)(tmp[i][((-4))]))))))) ^((int)(((106)))))))*((long)((((int)(((int)((((int)(tmp[i][((3))])) |((int)(tmp[i][((35))]))))))) ^((int)(((long)((((int)(tmp[i][(-(6))])) &((int)(x[i][(0xBD39)]))))))))))*((int)((((int)(((int)((((int)(tmp[i][((8))])) |((int)(tmp[i][((0x98))]))))))) >>((int)((-(41))))))))))))+((short)((((int)(x[i][((3))] + ((-43)) +((int)((((int)(x[i][((0x9A))])) %((int)(x[i][((0xE2))])))))-((long)((((int)(tmp[i][((83))])) &((int)(x[i][(-(4))])))))+((int)((((int)(tmp[i][(0x2)])) |((int)(tmp[i][((-4))]))))))) >>((int)(tmp[i][((4))])))))-((short)((((int)(((-41)))) &((int)(x[i][((7))] + ((58)))))))-((int)((((int)(x[i][(-(0xC))] + (-(11)) +((int)((((int)(x[i][(0xF)])) %((int)(x[i][((0x6E))])))))-((long)((((int)(tmp[i][(-(0xB7EB))])) &((int)(x[i][((4))])))))+((int)((((int)(tmp[i][(-(5))])) |((int)(tmp[i][((3))]))))) + ((33)) -((int)((((int)(((int)((((int)(tmp[i][((69))])) |((int)(tmp[i][(0xD032D)]))))))) <<((int)(tmp[i][((-20))]))))))) &((int)(x[i][(0xEB9E3)] + ((32)) +((int)((((int)(x[i][(-(0))])) %((int)(x[i][(0x1F6EA)])))))-((long)((((int)(tmp[i][((0xE7))])) &((int)(x[i][(0x659F)]))))))))))-((int)((((int)(x[i][(-(4))] + (-(-44)) +((int)((((int)(x[i][(-(-5))])) %((int)(x[i][(0x6D)])))))-((long)((((int)(tmp[i][((3))])) &((int)(x[i][(0x3EA1)])))))+((int)((((int)(tmp[i][((-36))])) |((int)(tmp[i][(0xE7)]))))) + (0xA0E))) %((int)(x[i][(-(4))] + ((22)) +((int)((((int)(x[i][((3))])) %((int)(x[i][((0xC))])))))-((long)((((int)(tmp[i][(0x5103)])) &((int)(x[i][((0x7D400))])))))+((int)((((int)(tmp[i][((0x1DAB1))])) |((int)(tmp[i][((0xC5))]))))) + (-(-44)) -((int)((((int)(((int)((((int)(tmp[i][(-(36))])) |((int)(tmp[i][(0x5)]))))))) <<((int)(tmp[i][((0xF))])))))+((int)((((int)(((int)((((int)(tmp[i][(-(0))])) |((int)(tmp[i][(-(6))]))))))) ^((int)((-(-44)))))))*((long)((((int)(((int)((((int)(tmp[i][(-(0))])) |((int)(tmp[i][(-(4))]))))))) ^((int)(((long)((((int)(tmp[i][(0x972)])) &((int)(x[i][((131))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][(0x93FF)])) |((int)(tmp[i][(-(0))]))))))) >>((int)(((-43))))))))))));
~~~~~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:24:1092: warning: shift count is negative [-Wshift-count-negative]
tmp[i][((0xFA2A))] = x[i][(-(4))] + ((-41)) +((int)((((int)(x[i][(-(0xA))])) %((int)(x[i][((0xFDA015))])))))-((long)((((int)(tmp[i][((35))])) &((int)(x[i][((0xE))])))))+((int)((((int)(tmp[i][(-(0x00))])) |((int)(tmp[i][(0x1)]))))) + ((170)) -((int)((((int)(((int)((((int)(tmp[i][((0x80))])) |((int)(tmp[i][(-(4))]))))))) <<((int)(tmp[i][((-20))])))))+((int)((((int)(((int)((((int)(tmp[i][((-36))])) |((int)(tmp[i][((0x34EF))]))))))) ^((int)(((58)))))))*((long)((((int)(((int)((((int)(tmp[i][(0xAE5)])) |((int)(tmp[i][((0x0DBBD))]))))))) ^((int)(((long)((((int)(tmp[i][((35))])) &((int)(x[i][(0xA52C5)]))))))))))*((int)((((int)(((int)((((int)(tmp[i][((0))])) |((int)(tmp[i][(-(0x351))]))))))) >>((int)(((170))))))) + (-(-44)) *((short)((((int)((0x1ACAC))) ^((int)(((int)((((int)(((int)((((int)(tmp[i][(-(68))])) |((int)(tmp[i][((-4))]))))))) ^((int)(((106)))))))*((long)((((int)(((int)((((int)(tmp[i][((3))])) |((int)(tmp[i][((35))]))))))) ^((int)(((long)((((int)(tmp[i][(-(6))])) &((int)(x[i][(0xBD39)]))))))))))*((int)((((int)(((int)((((int)(tmp[i][((8))])) |((int)(tmp[i][((0x98))]))))))) >>((int)((-(41))))))))))))+((short)((((int)(x[i][((3))] + ((-43)) +((int)((((int)(x[i][((0x9A))])) %((int)(x[i][((0xE2))])))))-((long)((((int)(tmp[i][((83))])) &((int)(x[i][(-(4))])))))+((int)((((int)(tmp[i][(0x2)])) |((int)(tmp[i][((-4))]))))))) >>((int)(tmp[i][((4))])))))-((short)((((int)(((-41)))) &((int)(x[i][((7))] + ((58)))))))-((int)((((int)(x[i][(-(0xC))] + (-(11)) +((int)((((int)(x[i][(0xF)])) %((int)(x[i][((0x6E))])))))-((long)((((int)(tmp[i][(-(0xB7EB))])) &((int)(x[i][((4))])))))+((int)((((int)(tmp[i][(-(5))])) |((int)(tmp[i][((3))]))))) + ((33)) -((int)((((int)(((int)((((int)(tmp[i][((69))])) |((int)(tmp[i][(0xD032D)]))))))) <<((int)(tmp[i][((-20))]))))))) &((int)(x[i][(0xEB9E3)] + ((32)) +((int)((((int)(x[i][(-(0))])) %((int)(x[i][(0x1F6EA)])))))-((long)((((int)(tmp[i][((0xE7))])) &((int)(x[i][(0x659F)]))))))))))-((int)((((int)(x[i][(-(4))] + (-(-44)) +((int)((((int)(x[i][(-(-5))])) %((int)(x[i][(0x6D)])))))-((long)((((int)(tmp[i][((3))])) &((int)(x[i][(0x3EA1)])))))+((int)((((int)(tmp[i][((-36))])) |((int)(tmp[i][(0xE7)]))))) + (0xA0E))) %((int)(x[i][(-(4))] + ((22)) +((int)((((int)(x[i][((3))])) %((int)(x[i][((0xC))])))))-((long)((((int)(tmp[i][(0x5103)])) &((int)(x[i][((0x7D400))])))))+((int)((((int)(tmp[i][((0x1DAB1))])) |((int)(tmp[i][((0xC5))]))))) + (-(-44)) -((int)((((int)(((int)((((int)(tmp[i][(-(36))])) |((int)(tmp[i][(0x5)]))))))) <<((int)(tmp[i][((0xF))])))))+((int)((((int)(((int)((((int)(tmp[i][(-(0))])) |((int)(tmp[i][(-(6))]))))))) ^((int)((-(-44)))))))*((long)((((int)(((int)((((int)(tmp[i][(-(0))])) |((int)(tmp[i][(-(4))]))))))) ^((int)(((long)((((int)(tmp[i][(0x972)])) &((int)(x[i][((131))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][(0x93FF)])) |((int)(tmp[i][(-(0))]))))))) >>((int)(((-43))))))))))));
~~~~~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:24:1443: warning: array index -12 is before the beginning of the array [-Warray-bounds]
tmp[i][((0xFA2A))] = x[i][(-(4))] + ((-41)) +((int)((((int)(x[i][(-(0xA))])) %((int)(x[i][((0xFDA015))])))))-((long)((((int)(tmp[i][((35))])) &((int)(x[i][((0xE))])))))+((int)((((int)(tmp[i][(-(0x00))])) |((int)(tmp[i][(0x1)]))))) + ((170)) -((int)((((int)(((int)((((int)(tmp[i][((0x80))])) |((int)(tmp[i][(-(4))]))))))) <<((int)(tmp[i][((-20))])))))+((int)((((int)(((int)((((int)(tmp[i][((-36))])) |((int)(tmp[i][((0x34EF))]))))))) ^((int)(((58)))))))*((long)((((int)(((int)((((int)(tmp[i][(0xAE5)])) |((int)(tmp[i][((0x0DBBD))]))))))) ^((int)(((long)((((int)(tmp[i][((35))])) &((int)(x[i][(0xA52C5)]))))))))))*((int)((((int)(((int)((((int)(tmp[i][((0))])) |((int)(tmp[i][(-(0x351))]))))))) >>((int)(((170))))))) + (-(-44)) *((short)((((int)((0x1ACAC))) ^((int)(((int)((((int)(((int)((((int)(tmp[i][(-(68))])) |((int)(tmp[i][((-4))]))))))) ^((int)(((106)))))))*((long)((((int)(((int)((((int)(tmp[i][((3))])) |((int)(tmp[i][((35))]))))))) ^((int)(((long)((((int)(tmp[i][(-(6))])) &((int)(x[i][(0xBD39)]))))))))))*((int)((((int)(((int)((((int)(tmp[i][((8))])) |((int)(tmp[i][((0x98))]))))))) >>((int)((-(41))))))))))))+((short)((((int)(x[i][((3))] + ((-43)) +((int)((((int)(x[i][((0x9A))])) %((int)(x[i][((0xE2))])))))-((long)((((int)(tmp[i][((83))])) &((int)(x[i][(-(4))])))))+((int)((((int)(tmp[i][(0x2)])) |((int)(tmp[i][((-4))]))))))) >>((int)(tmp[i][((4))])))))-((short)((((int)(((-41)))) &((int)(x[i][((7))] + ((58)))))))-((int)((((int)(x[i][(-(0xC))] + (-(11)) +((int)((((int)(x[i][(0xF)])) %((int)(x[i][((0x6E))])))))-((long)((((int)(tmp[i][(-(0xB7EB))])) &((int)(x[i][((4))])))))+((int)((((int)(tmp[i][(-(5))])) |((int)(tmp[i][((3))]))))) + ((33)) -((int)((((int)(((int)((((int)(tmp[i][((69))])) |((int)(tmp[i][(0xD032D)]))))))) <<((int)(tmp[i][((-20))]))))))) &((int)(x[i][(0xEB9E3)] + ((32)) +((int)((((int)(x[i][(-(0))])) %((int)(x[i][(0x1F6EA)])))))-((long)((((int)(tmp[i][((0xE7))])) &((int)(x[i][(0x659F)]))))))))))-((int)((((int)(x[i][(-(4))] + (-(-44)) +((int)((((int)(x[i][(-(-5))])) %((int)(x[i][(0x6D)])))))-((long)((((int)(tmp[i][((3))])) &((int)(x[i][(0x3EA1)])))))+((int)((((int)(tmp[i][((-36))])) |((int)(tmp[i][(0xE7)]))))) + (0xA0E))) %((int)(x[i][(-(4))] + ((22)) +((int)((((int)(x[i][((3))])) %((int)(x[i][((0xC))])))))-((long)((((int)(tmp[i][(0x5103)])) &((int)(x[i][((0x7D400))])))))+((int)((((int)(tmp[i][((0x1DAB1))])) |((int)(tmp[i][((0xC5))]))))) + (-(-44)) -((int)((((int)(((int)((((int)(tmp[i][(-(36))])) |((int)(tmp[i][(0x5)]))))))) <<((int)(tmp[i][((0xF))])))))+((int)((((int)(((int)((((int)(tmp[i][(-(0))])) |((int)(tmp[i][(-(6))]))))))) ^((int)((-(-44)))))))*((long)((((int)(((int)((((int)(tmp[i][(-(0))])) |((int)(tmp[i][(-(4))]))))))) ^((int)(((long)((((int)(tmp[i][(0x972)])) &((int)(x[i][((131))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][(0x93FF)])) |((int)(tmp[i][(-(0))]))))))) >>((int)(((-43))))))))))));
~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:2:1: note: array 'x' declared here
double x[(0x23B)][((0xFA1D6))] = { { ((0x1E9)), ((10)), ((-15)), ((-16)), ((-15)), ((0xCA5C2)), -((-10)), -(-(66)), -((1)), -(-(66)) },
^
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:24:1946: warning: array index -4 is before the beginning of the array [-Warray-bounds]
tmp[i][((0xFA2A))] = x[i][(-(4))] + ((-41)) +((int)((((int)(x[i][(-(0xA))])) %((int)(x[i][((0xFDA015))])))))-((long)((((int)(tmp[i][((35))])) &((int)(x[i][((0xE))])))))+((int)((((int)(tmp[i][(-(0x00))])) |((int)(tmp[i][(0x1)]))))) + ((170)) -((int)((((int)(((int)((((int)(tmp[i][((0x80))])) |((int)(tmp[i][(-(4))]))))))) <<((int)(tmp[i][((-20))])))))+((int)((((int)(((int)((((int)(tmp[i][((-36))])) |((int)(tmp[i][((0x34EF))]))))))) ^((int)(((58)))))))*((long)((((int)(((int)((((int)(tmp[i][(0xAE5)])) |((int)(tmp[i][((0x0DBBD))]))))))) ^((int)(((long)((((int)(tmp[i][((35))])) &((int)(x[i][(0xA52C5)]))))))))))*((int)((((int)(((int)((((int)(tmp[i][((0))])) |((int)(tmp[i][(-(0x351))]))))))) >>((int)(((170))))))) + (-(-44)) *((short)((((int)((0x1ACAC))) ^((int)(((int)((((int)(((int)((((int)(tmp[i][(-(68))])) |((int)(tmp[i][((-4))]))))))) ^((int)(((106)))))))*((long)((((int)(((int)((((int)(tmp[i][((3))])) |((int)(tmp[i][((35))]))))))) ^((int)(((long)((((int)(tmp[i][(-(6))])) &((int)(x[i][(0xBD39)]))))))))))*((int)((((int)(((int)((((int)(tmp[i][((8))])) |((int)(tmp[i][((0x98))]))))))) >>((int)((-(41))))))))))))+((short)((((int)(x[i][((3))] + ((-43)) +((int)((((int)(x[i][((0x9A))])) %((int)(x[i][((0xE2))])))))-((long)((((int)(tmp[i][((83))])) &((int)(x[i][(-(4))])))))+((int)((((int)(tmp[i][(0x2)])) |((int)(tmp[i][((-4))]))))))) >>((int)(tmp[i][((4))])))))-((short)((((int)(((-41)))) &((int)(x[i][((7))] + ((58)))))))-((int)((((int)(x[i][(-(0xC))] + (-(11)) +((int)((((int)(x[i][(0xF)])) %((int)(x[i][((0x6E))])))))-((long)((((int)(tmp[i][(-(0xB7EB))])) &((int)(x[i][((4))])))))+((int)((((int)(tmp[i][(-(5))])) |((int)(tmp[i][((3))]))))) + ((33)) -((int)((((int)(((int)((((int)(tmp[i][((69))])) |((int)(tmp[i][(0xD032D)]))))))) <<((int)(tmp[i][((-20))]))))))) &((int)(x[i][(0xEB9E3)] + ((32)) +((int)((((int)(x[i][(-(0))])) %((int)(x[i][(0x1F6EA)])))))-((long)((((int)(tmp[i][((0xE7))])) &((int)(x[i][(0x659F)]))))))))))-((int)((((int)(x[i][(-(4))] + (-(-44)) +((int)((((int)(x[i][(-(-5))])) %((int)(x[i][(0x6D)])))))-((long)((((int)(tmp[i][((3))])) &((int)(x[i][(0x3EA1)])))))+((int)((((int)(tmp[i][((-36))])) |((int)(tmp[i][(0xE7)]))))) + (0xA0E))) %((int)(x[i][(-(4))] + ((22)) +((int)((((int)(x[i][((3))])) %((int)(x[i][((0xC))])))))-((long)((((int)(tmp[i][(0x5103)])) &((int)(x[i][((0x7D400))])))))+((int)((((int)(tmp[i][((0x1DAB1))])) |((int)(tmp[i][((0xC5))]))))) + (-(-44)) -((int)((((int)(((int)((((int)(tmp[i][(-(36))])) |((int)(tmp[i][(0x5)]))))))) <<((int)(tmp[i][((0xF))])))))+((int)((((int)(((int)((((int)(tmp[i][(-(0))])) |((int)(tmp[i][(-(6))]))))))) ^((int)((-(-44)))))))*((long)((((int)(((int)((((int)(tmp[i][(-(0))])) |((int)(tmp[i][(-(4))]))))))) ^((int)(((long)((((int)(tmp[i][(0x972)])) &((int)(x[i][((131))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][(0x93FF)])) |((int)(tmp[i][(-(0))]))))))) >>((int)(((-43))))))))))));
~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:2:1: note: array 'x' declared here
double x[(0x23B)][((0xFA1D6))] = { { ((0x1E9)), ((10)), ((-15)), ((-16)), ((-15)), ((0xCA5C2)), -((-10)), -(-(66)), -((1)), -(-(66)) },
^
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:24:2169: warning: array index -4 is before the beginning of the array [-Warray-bounds]
tmp[i][((0xFA2A))] = x[i][(-(4))] + ((-41)) +((int)((((int)(x[i][(-(0xA))])) %((int)(x[i][((0xFDA015))])))))-((long)((((int)(tmp[i][((35))])) &((int)(x[i][((0xE))])))))+((int)((((int)(tmp[i][(-(0x00))])) |((int)(tmp[i][(0x1)]))))) + ((170)) -((int)((((int)(((int)((((int)(tmp[i][((0x80))])) |((int)(tmp[i][(-(4))]))))))) <<((int)(tmp[i][((-20))])))))+((int)((((int)(((int)((((int)(tmp[i][((-36))])) |((int)(tmp[i][((0x34EF))]))))))) ^((int)(((58)))))))*((long)((((int)(((int)((((int)(tmp[i][(0xAE5)])) |((int)(tmp[i][((0x0DBBD))]))))))) ^((int)(((long)((((int)(tmp[i][((35))])) &((int)(x[i][(0xA52C5)]))))))))))*((int)((((int)(((int)((((int)(tmp[i][((0))])) |((int)(tmp[i][(-(0x351))]))))))) >>((int)(((170))))))) + (-(-44)) *((short)((((int)((0x1ACAC))) ^((int)(((int)((((int)(((int)((((int)(tmp[i][(-(68))])) |((int)(tmp[i][((-4))]))))))) ^((int)(((106)))))))*((long)((((int)(((int)((((int)(tmp[i][((3))])) |((int)(tmp[i][((35))]))))))) ^((int)(((long)((((int)(tmp[i][(-(6))])) &((int)(x[i][(0xBD39)]))))))))))*((int)((((int)(((int)((((int)(tmp[i][((8))])) |((int)(tmp[i][((0x98))]))))))) >>((int)((-(41))))))))))))+((short)((((int)(x[i][((3))] + ((-43)) +((int)((((int)(x[i][((0x9A))])) %((int)(x[i][((0xE2))])))))-((long)((((int)(tmp[i][((83))])) &((int)(x[i][(-(4))])))))+((int)((((int)(tmp[i][(0x2)])) |((int)(tmp[i][((-4))]))))))) >>((int)(tmp[i][((4))])))))-((short)((((int)(((-41)))) &((int)(x[i][((7))] + ((58)))))))-((int)((((int)(x[i][(-(0xC))] + (-(11)) +((int)((((int)(x[i][(0xF)])) %((int)(x[i][((0x6E))])))))-((long)((((int)(tmp[i][(-(0xB7EB))])) &((int)(x[i][((4))])))))+((int)((((int)(tmp[i][(-(5))])) |((int)(tmp[i][((3))]))))) + ((33)) -((int)((((int)(((int)((((int)(tmp[i][((69))])) |((int)(tmp[i][(0xD032D)]))))))) <<((int)(tmp[i][((-20))]))))))) &((int)(x[i][(0xEB9E3)] + ((32)) +((int)((((int)(x[i][(-(0))])) %((int)(x[i][(0x1F6EA)])))))-((long)((((int)(tmp[i][((0xE7))])) &((int)(x[i][(0x659F)]))))))))))-((int)((((int)(x[i][(-(4))] + (-(-44)) +((int)((((int)(x[i][(-(-5))])) %((int)(x[i][(0x6D)])))))-((long)((((int)(tmp[i][((3))])) &((int)(x[i][(0x3EA1)])))))+((int)((((int)(tmp[i][((-36))])) |((int)(tmp[i][(0xE7)]))))) + (0xA0E))) %((int)(x[i][(-(4))] + ((22)) +((int)((((int)(x[i][((3))])) %((int)(x[i][((0xC))])))))-((long)((((int)(tmp[i][(0x5103)])) &((int)(x[i][((0x7D400))])))))+((int)((((int)(tmp[i][((0x1DAB1))])) |((int)(tmp[i][((0xC5))]))))) + (-(-44)) -((int)((((int)(((int)((((int)(tmp[i][(-(36))])) |((int)(tmp[i][(0x5)]))))))) <<((int)(tmp[i][((0xF))])))))+((int)((((int)(((int)((((int)(tmp[i][(-(0))])) |((int)(tmp[i][(-(6))]))))))) ^((int)((-(-44)))))))*((long)((((int)(((int)((((int)(tmp[i][(-(0))])) |((int)(tmp[i][(-(4))]))))))) ^((int)(((long)((((int)(tmp[i][(0x972)])) &((int)(x[i][((131))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][(0x93FF)])) |((int)(tmp[i][(-(0))]))))))) >>((int)(((-43))))))))))));
~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:2:1: note: array 'x' declared here
double x[(0x23B)][((0xFA1D6))] = { { ((0x1E9)), ((10)), ((-15)), ((-16)), ((-15)), ((0xCA5C2)), -((-10)), -(-(66)), -((1)), -(-(66)) },
^
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:24:2830: warning: shift count is negative [-Wshift-count-negative]
tmp[i][((0xFA2A))] = x[i][(-(4))] + ((-41)) +((int)((((int)(x[i][(-(0xA))])) %((int)(x[i][((0xFDA015))])))))-((long)((((int)(tmp[i][((35))])) &((int)(x[i][((0xE))])))))+((int)((((int)(tmp[i][(-(0x00))])) |((int)(tmp[i][(0x1)]))))) + ((170)) -((int)((((int)(((int)((((int)(tmp[i][((0x80))])) |((int)(tmp[i][(-(4))]))))))) <<((int)(tmp[i][((-20))])))))+((int)((((int)(((int)((((int)(tmp[i][((-36))])) |((int)(tmp[i][((0x34EF))]))))))) ^((int)(((58)))))))*((long)((((int)(((int)((((int)(tmp[i][(0xAE5)])) |((int)(tmp[i][((0x0DBBD))]))))))) ^((int)(((long)((((int)(tmp[i][((35))])) &((int)(x[i][(0xA52C5)]))))))))))*((int)((((int)(((int)((((int)(tmp[i][((0))])) |((int)(tmp[i][(-(0x351))]))))))) >>((int)(((170))))))) + (-(-44)) *((short)((((int)((0x1ACAC))) ^((int)(((int)((((int)(((int)((((int)(tmp[i][(-(68))])) |((int)(tmp[i][((-4))]))))))) ^((int)(((106)))))))*((long)((((int)(((int)((((int)(tmp[i][((3))])) |((int)(tmp[i][((35))]))))))) ^((int)(((long)((((int)(tmp[i][(-(6))])) &((int)(x[i][(0xBD39)]))))))))))*((int)((((int)(((int)((((int)(tmp[i][((8))])) |((int)(tmp[i][((0x98))]))))))) >>((int)((-(41))))))))))))+((short)((((int)(x[i][((3))] + ((-43)) +((int)((((int)(x[i][((0x9A))])) %((int)(x[i][((0xE2))])))))-((long)((((int)(tmp[i][((83))])) &((int)(x[i][(-(4))])))))+((int)((((int)(tmp[i][(0x2)])) |((int)(tmp[i][((-4))]))))))) >>((int)(tmp[i][((4))])))))-((short)((((int)(((-41)))) &((int)(x[i][((7))] + ((58)))))))-((int)((((int)(x[i][(-(0xC))] + (-(11)) +((int)((((int)(x[i][(0xF)])) %((int)(x[i][((0x6E))])))))-((long)((((int)(tmp[i][(-(0xB7EB))])) &((int)(x[i][((4))])))))+((int)((((int)(tmp[i][(-(5))])) |((int)(tmp[i][((3))]))))) + ((33)) -((int)((((int)(((int)((((int)(tmp[i][((69))])) |((int)(tmp[i][(0xD032D)]))))))) <<((int)(tmp[i][((-20))]))))))) &((int)(x[i][(0xEB9E3)] + ((32)) +((int)((((int)(x[i][(-(0))])) %((int)(x[i][(0x1F6EA)])))))-((long)((((int)(tmp[i][((0xE7))])) &((int)(x[i][(0x659F)]))))))))))-((int)((((int)(x[i][(-(4))] + (-(-44)) +((int)((((int)(x[i][(-(-5))])) %((int)(x[i][(0x6D)])))))-((long)((((int)(tmp[i][((3))])) &((int)(x[i][(0x3EA1)])))))+((int)((((int)(tmp[i][((-36))])) |((int)(tmp[i][(0xE7)]))))) + (0xA0E))) %((int)(x[i][(-(4))] + ((22)) +((int)((((int)(x[i][((3))])) %((int)(x[i][((0xC))])))))-((long)((((int)(tmp[i][(0x5103)])) &((int)(x[i][((0x7D400))])))))+((int)((((int)(tmp[i][((0x1DAB1))])) |((int)(tmp[i][((0xC5))]))))) + (-(-44)) -((int)((((int)(((int)((((int)(tmp[i][(-(36))])) |((int)(tmp[i][(0x5)]))))))) <<((int)(tmp[i][((0xF))])))))+((int)((((int)(((int)((((int)(tmp[i][(-(0))])) |((int)(tmp[i][(-(6))]))))))) ^((int)((-(-44)))))))*((long)((((int)(((int)((((int)(tmp[i][(-(0))])) |((int)(tmp[i][(-(4))]))))))) ^((int)(((long)((((int)(tmp[i][(0x972)])) &((int)(x[i][((131))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][(0x93FF)])) |((int)(tmp[i][(-(0))]))))))) >>((int)(((-43))))))))))));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ^ ~~~~~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:24:1: warning: array index 64042 is past the end of the array (which contains 67 elements) [-Warray-bounds]
tmp[i][((0xFA2A))] = x[i][(-(4))] + ((-41)) +((int)((((int)(x[i][(-(0xA))])) %((int)(x[i][((0xFDA015))])))))-((long)((((int)(tmp[i][((35))])) &((int)(x[i][((0xE))])))))+((int)((((int)(tmp[i][(-(0x00))])) |((int)(tmp[i][(0x1)]))))) + ((170)) -((int)((((int)(((int)((((int)(tmp[i][((0x80))])) |((int)(tmp[i][(-(4))]))))))) <<((int)(tmp[i][((-20))])))))+((int)((((int)(((int)((((int)(tmp[i][((-36))])) |((int)(tmp[i][((0x34EF))]))))))) ^((int)(((58)))))))*((long)((((int)(((int)((((int)(tmp[i][(0xAE5)])) |((int)(tmp[i][((0x0DBBD))]))))))) ^((int)(((long)((((int)(tmp[i][((35))])) &((int)(x[i][(0xA52C5)]))))))))))*((int)((((int)(((int)((((int)(tmp[i][((0))])) |((int)(tmp[i][(-(0x351))]))))))) >>((int)(((170))))))) + (-(-44)) *((short)((((int)((0x1ACAC))) ^((int)(((int)((((int)(((int)((((int)(tmp[i][(-(68))])) |((int)(tmp[i][((-4))]))))))) ^((int)(((106)))))))*((long)((((int)(((int)((((int)(tmp[i][((3))])) |((int)(tmp[i][((35))]))))))) ^((int)(((long)((((int)(tmp[i][(-(6))])) &((int)(x[i][(0xBD39)]))))))))))*((int)((((int)(((int)((((int)(tmp[i][((8))])) |((int)(tmp[i][((0x98))]))))))) >>((int)((-(41))))))))))))+((short)((((int)(x[i][((3))] + ((-43)) +((int)((((int)(x[i][((0x9A))])) %((int)(x[i][((0xE2))])))))-((long)((((int)(tmp[i][((83))])) &((int)(x[i][(-(4))])))))+((int)((((int)(tmp[i][(0x2)])) |((int)(tmp[i][((-4))]))))))) >>((int)(tmp[i][((4))])))))-((short)((((int)(((-41)))) &((int)(x[i][((7))] + ((58)))))))-((int)((((int)(x[i][(-(0xC))] + (-(11)) +((int)((((int)(x[i][(0xF)])) %((int)(x[i][((0x6E))])))))-((long)((((int)(tmp[i][(-(0xB7EB))])) &((int)(x[i][((4))])))))+((int)((((int)(tmp[i][(-(5))])) |((int)(tmp[i][((3))]))))) + ((33)) -((int)((((int)(((int)((((int)(tmp[i][((69))])) |((int)(tmp[i][(0xD032D)]))))))) <<((int)(tmp[i][((-20))]))))))) &((int)(x[i][(0xEB9E3)] + ((32)) +((int)((((int)(x[i][(-(0))])) %((int)(x[i][(0x1F6EA)])))))-((long)((((int)(tmp[i][((0xE7))])) &((int)(x[i][(0x659F)]))))))))))-((int)((((int)(x[i][(-(4))] + (-(-44)) +((int)((((int)(x[i][(-(-5))])) %((int)(x[i][(0x6D)])))))-((long)((((int)(tmp[i][((3))])) &((int)(x[i][(0x3EA1)])))))+((int)((((int)(tmp[i][((-36))])) |((int)(tmp[i][(0xE7)]))))) + (0xA0E))) %((int)(x[i][(-(4))] + ((22)) +((int)((((int)(x[i][((3))])) %((int)(x[i][((0xC))])))))-((long)((((int)(tmp[i][(0x5103)])) &((int)(x[i][((0x7D400))])))))+((int)((((int)(tmp[i][((0x1DAB1))])) |((int)(tmp[i][((0xC5))]))))) + (-(-44)) -((int)((((int)(((int)((((int)(tmp[i][(-(36))])) |((int)(tmp[i][(0x5)]))))))) <<((int)(tmp[i][((0xF))])))))+((int)((((int)(((int)((((int)(tmp[i][(-(0))])) |((int)(tmp[i][(-(6))]))))))) ^((int)((-(-44)))))))*((long)((((int)(((int)((((int)(tmp[i][(-(0))])) |((int)(tmp[i][(-(4))]))))))) ^((int)(((long)((((int)(tmp[i][(0x972)])) &((int)(x[i][((131))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][(0x93FF)])) |((int)(tmp[i][(-(0))]))))))) >>((int)(((-43))))))))))));
^        ~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:7:1: note: array 'tmp' declared here
double tmp[(0x7E)][((0x43))];
^
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:25:668: warning: shift count >= width of type [-Wshift-count-overflow]
tmp[i][((0xCA))] = x[i][(0x0)] + (-(44)) +((int)((((int)(x[i][((-4))])) %((int)(x[i][((-4))])))))-((long)((((int)(tmp[i][((34))])) &((int)(x[i][(0xEC0AE)])))))+((int)((((int)(tmp[i][(0x5)])) |((int)(tmp[i][((2))]))))) + (0x167) -((int)((((int)(((int)((((int)(tmp[i][(-(5))])) |((int)(tmp[i][(-(-5))]))))))) <<((int)(tmp[i][((-8))])))))+((int)((((int)(((int)((((int)(tmp[i][((0x7E5E))])) |((int)(tmp[i][(0x7)]))))))) ^((int)((0x1AC))))))*((long)((((int)(((int)((((int)(tmp[i][(0x5)])) |((int)(tmp[i][((7))]))))))) ^((int)(((long)((((int)(tmp[i][(-(-5))])) &((int)(x[i][((0x63))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][(0xFC3E)])) |((int)(tmp[i][(-(6))]))))))) >>((int)((0xE3E1)))))) + (0x55A6F) *((short)((((int)(((0xA87)))) ^((int)(((int)((((int)(((int)((((int)(tmp[i][((11))])) |((int)(tmp[i][(-(0x81350))]))))))) ^((int)((-(0xA089)))))))*((long)((((int)(((int)((((int)(tmp[i][(-(12))])) |((int)(tmp[i][((19))]))))))) ^((int)(((long)((((int)(tmp[i][((67))])) &((int)(x[i][(-(0))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][(0xD6E)])) |((int)(tmp[i][(-(0x9D87))]))))))) >>((int)(((170))))))))))))+((short)((((int)(x[i][((11))] + ((-107)) +((int)((((int)(x[i][((35))])) %((int)(x[i][((-2))])))))-((long)((((int)(tmp[i][(0x98D)])) &((int)(x[i][((-4))])))))+((int)((((int)(tmp[i][(0x8B3DA)])) |((int)(tmp[i][(-(0xDEFB))]))))))) >>((int)(tmp[i][(0x5)])))))-((short)((((int)((-(0xFC)))) &((int)(x[i][((35))] + (0xE7CE85))))))-((int)((((int)(x[i][(-(0x84E25))] + (0xA4DC) +((int)((((int)(x[i][(-(0x2E039))])) %((int)(x[i][((-20))])))))-((long)((((int)(tmp[i][((35))])) &((int)(x[i][(0x7E67)])))))+((int)((((int)(tmp[i][(-(-5))])) |((int)(tmp[i][((3))]))))) + (-(0x8889D)) -((int)((((int)(((int)((((int)(tmp[i][(-(-5))])) |((int)(tmp[i][(0x70)]))))))) <<((int)(tmp[i][((0x5F18))]))))))) &((int)(x[i][((831))] + (0x09F8B) +((int)((((int)(x[i][((7))])) %((int)(x[i][(-(-5))])))))-((long)((((int)(tmp[i][((3))])) &((int)(x[i][(0xA)]))))))))))-((int)((((int)(x[i][(0x5)] + ((-43)) +((int)((((int)(x[i][((-68))])) %((int)(x[i][((131))])))))-((long)((((int)(tmp[i][(-(0))])) &((int)(x[i][(0x4)])))))+((int)((((int)(tmp[i][(-(4))])) |((int)(tmp[i][(-(4))]))))) + (0x355E31))) %((int)(x[i][(-(0x86))] + (-(42)) +((int)((((int)(x[i][(0x8C1D3)])) %((int)(x[i][(-(-5))])))))-((long)((((int)(tmp[i][(0x5CD)])) &((int)(x[i][(0x0E)])))))+((int)((((int)(tmp[i][(-(36))])) |((int)(tmp[i][(-(0x939))]))))) + ((0xDDE962)) -((int)((((int)(((int)((((int)(tmp[i][(0x7CF84)])) |((int)(tmp[i][((66))]))))))) <<((int)(tmp[i][(-(36))])))))+((int)((((int)(((int)((((int)(tmp[i][((67))])) |((int)(tmp[i][((0x9E))]))))))) ^((int)((0xAA))))))*((long)((((int)(((int)((((int)(tmp[i][((2))])) |((int)(tmp[i][(0x819F)]))))))) ^((int)(((long)((((int)(tmp[i][((-3))])) &((int)(x[i][((0xD))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][((0xC55E66))])) |((int)(tmp[i][(-(0x775AF))]))))))) >>((int)((-(0x98))))))))))));
~~~~~~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:25:1083: warning: shift count >= width of type [-Wshift-count-overflow]
tmp[i][((0xCA))] = x[i][(0x0)] + (-(44)) +((int)((((int)(x[i][((-4))])) %((int)(x[i][((-4))])))))-((long)((((int)(tmp[i][((34))])) &((int)(x[i][(0xEC0AE)])))))+((int)((((int)(tmp[i][(0x5)])) |((int)(tmp[i][((2))]))))) + (0x167) -((int)((((int)(((int)((((int)(tmp[i][(-(5))])) |((int)(tmp[i][(-(-5))]))))))) <<((int)(tmp[i][((-8))])))))+((int)((((int)(((int)((((int)(tmp[i][((0x7E5E))])) |((int)(tmp[i][(0x7)]))))))) ^((int)((0x1AC))))))*((long)((((int)(((int)((((int)(tmp[i][(0x5)])) |((int)(tmp[i][((7))]))))))) ^((int)(((long)((((int)(tmp[i][(-(-5))])) &((int)(x[i][((0x63))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][(0xFC3E)])) |((int)(tmp[i][(-(6))]))))))) >>((int)((0xE3E1)))))) + (0x55A6F) *((short)((((int)(((0xA87)))) ^((int)(((int)((((int)(((int)((((int)(tmp[i][((11))])) |((int)(tmp[i][(-(0x81350))]))))))) ^((int)((-(0xA089)))))))*((long)((((int)(((int)((((int)(tmp[i][(-(12))])) |((int)(tmp[i][((19))]))))))) ^((int)(((long)((((int)(tmp[i][((67))])) &((int)(x[i][(-(0))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][(0xD6E)])) |((int)(tmp[i][(-(0x9D87))]))))))) >>((int)(((170))))))))))))+((short)((((int)(x[i][((11))] + ((-107)) +((int)((((int)(x[i][((35))])) %((int)(x[i][((-2))])))))-((long)((((int)(tmp[i][(0x98D)])) &((int)(x[i][((-4))])))))+((int)((((int)(tmp[i][(0x8B3DA)])) |((int)(tmp[i][(-(0xDEFB))]))))))) >>((int)(tmp[i][(0x5)])))))-((short)((((int)((-(0xFC)))) &((int)(x[i][((35))] + (0xE7CE85))))))-((int)((((int)(x[i][(-(0x84E25))] + (0xA4DC) +((int)((((int)(x[i][(-(0x2E039))])) %((int)(x[i][((-20))])))))-((long)((((int)(tmp[i][((35))])) &((int)(x[i][(0x7E67)])))))+((int)((((int)(tmp[i][(-(-5))])) |((int)(tmp[i][((3))]))))) + (-(0x8889D)) -((int)((((int)(((int)((((int)(tmp[i][(-(-5))])) |((int)(tmp[i][(0x70)]))))))) <<((int)(tmp[i][((0x5F18))]))))))) &((int)(x[i][((831))] + (0x09F8B) +((int)((((int)(x[i][((7))])) %((int)(x[i][(-(-5))])))))-((long)((((int)(tmp[i][((3))])) &((int)(x[i][(0xA)]))))))))))-((int)((((int)(x[i][(0x5)] + ((-43)) +((int)((((int)(x[i][((-68))])) %((int)(x[i][((131))])))))-((long)((((int)(tmp[i][(-(0))])) &((int)(x[i][(0x4)])))))+((int)((((int)(tmp[i][(-(4))])) |((int)(tmp[i][(-(4))]))))) + (0x355E31))) %((int)(x[i][(-(0x86))] + (-(42)) +((int)((((int)(x[i][(0x8C1D3)])) %((int)(x[i][(-(-5))])))))-((long)((((int)(tmp[i][(0x5CD)])) &((int)(x[i][(0x0E)])))))+((int)((((int)(tmp[i][(-(36))])) |((int)(tmp[i][(-(0x939))]))))) + ((0xDDE962)) -((int)((((int)(((int)((((int)(tmp[i][(0x7CF84)])) |((int)(tmp[i][((66))]))))))) <<((int)(tmp[i][(-(36))])))))+((int)((((int)(((int)((((int)(tmp[i][((67))])) |((int)(tmp[i][((0x9E))]))))))) ^((int)((0xAA))))))*((long)((((int)(((int)((((int)(tmp[i][((2))])) |((int)(tmp[i][(0x819F)]))))))) ^((int)(((long)((((int)(tmp[i][((-3))])) &((int)(x[i][((0xD))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][((0xC55E66))])) |((int)(tmp[i][(-(0x775AF))]))))))) >>((int)((-(0x98))))))))))));
~~~~~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:25:1449: warning: array index -544293 is before the beginning of the array [-Warray-bounds]
tmp[i][((0xCA))] = x[i][(0x0)] + (-(44)) +((int)((((int)(x[i][((-4))])) %((int)(x[i][((-4))])))))-((long)((((int)(tmp[i][((34))])) &((int)(x[i][(0xEC0AE)])))))+((int)((((int)(tmp[i][(0x5)])) |((int)(tmp[i][((2))]))))) + (0x167) -((int)((((int)(((int)((((int)(tmp[i][(-(5))])) |((int)(tmp[i][(-(-5))]))))))) <<((int)(tmp[i][((-8))])))))+((int)((((int)(((int)((((int)(tmp[i][((0x7E5E))])) |((int)(tmp[i][(0x7)]))))))) ^((int)((0x1AC))))))*((long)((((int)(((int)((((int)(tmp[i][(0x5)])) |((int)(tmp[i][((7))]))))))) ^((int)(((long)((((int)(tmp[i][(-(-5))])) &((int)(x[i][((0x63))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][(0xFC3E)])) |((int)(tmp[i][(-(6))]))))))) >>((int)((0xE3E1)))))) + (0x55A6F) *((short)((((int)(((0xA87)))) ^((int)(((int)((((int)(((int)((((int)(tmp[i][((11))])) |((int)(tmp[i][(-(0x81350))]))))))) ^((int)((-(0xA089)))))))*((long)((((int)(((int)((((int)(tmp[i][(-(12))])) |((int)(tmp[i][((19))]))))))) ^((int)(((long)((((int)(tmp[i][((67))])) &((int)(x[i][(-(0))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][(0xD6E)])) |((int)(tmp[i][(-(0x9D87))]))))))) >>((int)(((170))))))))))))+((short)((((int)(x[i][((11))] + ((-107)) +((int)((((int)(x[i][((35))])) %((int)(x[i][((-2))])))))-((long)((((int)(tmp[i][(0x98D)])) &((int)(x[i][((-4))])))))+((int)((((int)(tmp[i][(0x8B3DA)])) |((int)(tmp[i][(-(0xDEFB))]))))))) >>((int)(tmp[i][(0x5)])))))-((short)((((int)((-(0xFC)))) &((int)(x[i][((35))] + (0xE7CE85))))))-((int)((((int)(x[i][(-(0x84E25))] + (0xA4DC) +((int)((((int)(x[i][(-(0x2E039))])) %((int)(x[i][((-20))])))))-((long)((((int)(tmp[i][((35))])) &((int)(x[i][(0x7E67)])))))+((int)((((int)(tmp[i][(-(-5))])) |((int)(tmp[i][((3))]))))) + (-(0x8889D)) -((int)((((int)(((int)((((int)(tmp[i][(-(-5))])) |((int)(tmp[i][(0x70)]))))))) <<((int)(tmp[i][((0x5F18))]))))))) &((int)(x[i][((831))] + (0x09F8B) +((int)((((int)(x[i][((7))])) %((int)(x[i][(-(-5))])))))-((long)((((int)(tmp[i][((3))])) &((int)(x[i][(0xA)]))))))))))-((int)((((int)(x[i][(0x5)] + ((-43)) +((int)((((int)(x[i][((-68))])) %((int)(x[i][((131))])))))-((long)((((int)(tmp[i][(-(0))])) &((int)(x[i][(0x4)])))))+((int)((((int)(tmp[i][(-(4))])) |((int)(tmp[i][(-(4))]))))) + (0x355E31))) %((int)(x[i][(-(0x86))] + (-(42)) +((int)((((int)(x[i][(0x8C1D3)])) %((int)(x[i][(-(-5))])))))-((long)((((int)(tmp[i][(0x5CD)])) &((int)(x[i][(0x0E)])))))+((int)((((int)(tmp[i][(-(36))])) |((int)(tmp[i][(-(0x939))]))))) + ((0xDDE962)) -((int)((((int)(((int)((((int)(tmp[i][(0x7CF84)])) |((int)(tmp[i][((66))]))))))) <<((int)(tmp[i][(-(36))])))))+((int)((((int)(((int)((((int)(tmp[i][((67))])) |((int)(tmp[i][((0x9E))]))))))) ^((int)((0xAA))))))*((long)((((int)(((int)((((int)(tmp[i][((2))])) |((int)(tmp[i][(0x819F)]))))))) ^((int)(((long)((((int)(tmp[i][((-3))])) &((int)(x[i][((0xD))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][((0xC55E66))])) |((int)(tmp[i][(-(0x775AF))]))))))) >>((int)((-(0x98))))))))))));
~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:2:1: note: array 'x' declared here
double x[(0x23B)][((0xFA1D6))] = { { ((0x1E9)), ((10)), ((-15)), ((-16)), ((-15)), ((0xCA5C2)), -((-10)), -(-(66)), -((1)), -(-(66)) },
^
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:25:2183: warning: array index -134 is before the beginning of the array [-Warray-bounds]
tmp[i][((0xCA))] = x[i][(0x0)] + (-(44)) +((int)((((int)(x[i][((-4))])) %((int)(x[i][((-4))])))))-((long)((((int)(tmp[i][((34))])) &((int)(x[i][(0xEC0AE)])))))+((int)((((int)(tmp[i][(0x5)])) |((int)(tmp[i][((2))]))))) + (0x167) -((int)((((int)(((int)((((int)(tmp[i][(-(5))])) |((int)(tmp[i][(-(-5))]))))))) <<((int)(tmp[i][((-8))])))))+((int)((((int)(((int)((((int)(tmp[i][((0x7E5E))])) |((int)(tmp[i][(0x7)]))))))) ^((int)((0x1AC))))))*((long)((((int)(((int)((((int)(tmp[i][(0x5)])) |((int)(tmp[i][((7))]))))))) ^((int)(((long)((((int)(tmp[i][(-(-5))])) &((int)(x[i][((0x63))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][(0xFC3E)])) |((int)(tmp[i][(-(6))]))))))) >>((int)((0xE3E1)))))) + (0x55A6F) *((short)((((int)(((0xA87)))) ^((int)(((int)((((int)(((int)((((int)(tmp[i][((11))])) |((int)(tmp[i][(-(0x81350))]))))))) ^((int)((-(0xA089)))))))*((long)((((int)(((int)((((int)(tmp[i][(-(12))])) |((int)(tmp[i][((19))]))))))) ^((int)(((long)((((int)(tmp[i][((67))])) &((int)(x[i][(-(0))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][(0xD6E)])) |((int)(tmp[i][(-(0x9D87))]))))))) >>((int)(((170))))))))))))+((short)((((int)(x[i][((11))] + ((-107)) +((int)((((int)(x[i][((35))])) %((int)(x[i][((-2))])))))-((long)((((int)(tmp[i][(0x98D)])) &((int)(x[i][((-4))])))))+((int)((((int)(tmp[i][(0x8B3DA)])) |((int)(tmp[i][(-(0xDEFB))]))))))) >>((int)(tmp[i][(0x5)])))))-((short)((((int)((-(0xFC)))) &((int)(x[i][((35))] + (0xE7CE85))))))-((int)((((int)(x[i][(-(0x84E25))] + (0xA4DC) +((int)((((int)(x[i][(-(0x2E039))])) %((int)(x[i][((-20))])))))-((long)((((int)(tmp[i][((35))])) &((int)(x[i][(0x7E67)])))))+((int)((((int)(tmp[i][(-(-5))])) |((int)(tmp[i][((3))]))))) + (-(0x8889D)) -((int)((((int)(((int)((((int)(tmp[i][(-(-5))])) |((int)(tmp[i][(0x70)]))))))) <<((int)(tmp[i][((0x5F18))]))))))) &((int)(x[i][((831))] + (0x09F8B) +((int)((((int)(x[i][((7))])) %((int)(x[i][(-(-5))])))))-((long)((((int)(tmp[i][((3))])) &((int)(x[i][(0xA)]))))))))))-((int)((((int)(x[i][(0x5)] + ((-43)) +((int)((((int)(x[i][((-68))])) %((int)(x[i][((131))])))))-((long)((((int)(tmp[i][(-(0))])) &((int)(x[i][(0x4)])))))+((int)((((int)(tmp[i][(-(4))])) |((int)(tmp[i][(-(4))]))))) + (0x355E31))) %((int)(x[i][(-(0x86))] + (-(42)) +((int)((((int)(x[i][(0x8C1D3)])) %((int)(x[i][(-(-5))])))))-((long)((((int)(tmp[i][(0x5CD)])) &((int)(x[i][(0x0E)])))))+((int)((((int)(tmp[i][(-(36))])) |((int)(tmp[i][(-(0x939))]))))) + ((0xDDE962)) -((int)((((int)(((int)((((int)(tmp[i][(0x7CF84)])) |((int)(tmp[i][((66))]))))))) <<((int)(tmp[i][(-(36))])))))+((int)((((int)(((int)((((int)(tmp[i][((67))])) |((int)(tmp[i][((0x9E))]))))))) ^((int)((0xAA))))))*((long)((((int)(((int)((((int)(tmp[i][((2))])) |((int)(tmp[i][(0x819F)]))))))) ^((int)(((long)((((int)(tmp[i][((-3))])) &((int)(x[i][((0xD))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][((0xC55E66))])) |((int)(tmp[i][(-(0x775AF))]))))))) >>((int)((-(0x98))))))))))));
~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:2:1: note: array 'x' declared here
double x[(0x23B)][((0xFA1D6))] = { { ((0x1E9)), ((10)), ((-15)), ((-16)), ((-15)), ((0xCA5C2)), -((-10)), -(-(66)), -((1)), -(-(66)) },
^
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:25:2861: warning: shift count is negative [-Wshift-count-negative]
tmp[i][((0xCA))] = x[i][(0x0)] + (-(44)) +((int)((((int)(x[i][((-4))])) %((int)(x[i][((-4))])))))-((long)((((int)(tmp[i][((34))])) &((int)(x[i][(0xEC0AE)])))))+((int)((((int)(tmp[i][(0x5)])) |((int)(tmp[i][((2))]))))) + (0x167) -((int)((((int)(((int)((((int)(tmp[i][(-(5))])) |((int)(tmp[i][(-(-5))]))))))) <<((int)(tmp[i][((-8))])))))+((int)((((int)(((int)((((int)(tmp[i][((0x7E5E))])) |((int)(tmp[i][(0x7)]))))))) ^((int)((0x1AC))))))*((long)((((int)(((int)((((int)(tmp[i][(0x5)])) |((int)(tmp[i][((7))]))))))) ^((int)(((long)((((int)(tmp[i][(-(-5))])) &((int)(x[i][((0x63))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][(0xFC3E)])) |((int)(tmp[i][(-(6))]))))))) >>((int)((0xE3E1)))))) + (0x55A6F) *((short)((((int)(((0xA87)))) ^((int)(((int)((((int)(((int)((((int)(tmp[i][((11))])) |((int)(tmp[i][(-(0x81350))]))))))) ^((int)((-(0xA089)))))))*((long)((((int)(((int)((((int)(tmp[i][(-(12))])) |((int)(tmp[i][((19))]))))))) ^((int)(((long)((((int)(tmp[i][((67))])) &((int)(x[i][(-(0))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][(0xD6E)])) |((int)(tmp[i][(-(0x9D87))]))))))) >>((int)(((170))))))))))))+((short)((((int)(x[i][((11))] + ((-107)) +((int)((((int)(x[i][((35))])) %((int)(x[i][((-2))])))))-((long)((((int)(tmp[i][(0x98D)])) &((int)(x[i][((-4))])))))+((int)((((int)(tmp[i][(0x8B3DA)])) |((int)(tmp[i][(-(0xDEFB))]))))))) >>((int)(tmp[i][(0x5)])))))-((short)((((int)((-(0xFC)))) &((int)(x[i][((35))] + (0xE7CE85))))))-((int)((((int)(x[i][(-(0x84E25))] + (0xA4DC) +((int)((((int)(x[i][(-(0x2E039))])) %((int)(x[i][((-20))])))))-((long)((((int)(tmp[i][((35))])) &((int)(x[i][(0x7E67)])))))+((int)((((int)(tmp[i][(-(-5))])) |((int)(tmp[i][((3))]))))) + (-(0x8889D)) -((int)((((int)(((int)((((int)(tmp[i][(-(-5))])) |((int)(tmp[i][(0x70)]))))))) <<((int)(tmp[i][((0x5F18))]))))))) &((int)(x[i][((831))] + (0x09F8B) +((int)((((int)(x[i][((7))])) %((int)(x[i][(-(-5))])))))-((long)((((int)(tmp[i][((3))])) &((int)(x[i][(0xA)]))))))))))-((int)((((int)(x[i][(0x5)] + ((-43)) +((int)((((int)(x[i][((-68))])) %((int)(x[i][((131))])))))-((long)((((int)(tmp[i][(-(0))])) &((int)(x[i][(0x4)])))))+((int)((((int)(tmp[i][(-(4))])) |((int)(tmp[i][(-(4))]))))) + (0x355E31))) %((int)(x[i][(-(0x86))] + (-(42)) +((int)((((int)(x[i][(0x8C1D3)])) %((int)(x[i][(-(-5))])))))-((long)((((int)(tmp[i][(0x5CD)])) &((int)(x[i][(0x0E)])))))+((int)((((int)(tmp[i][(-(36))])) |((int)(tmp[i][(-(0x939))]))))) + ((0xDDE962)) -((int)((((int)(((int)((((int)(tmp[i][(0x7CF84)])) |((int)(tmp[i][((66))]))))))) <<((int)(tmp[i][(-(36))])))))+((int)((((int)(((int)((((int)(tmp[i][((67))])) |((int)(tmp[i][((0x9E))]))))))) ^((int)((0xAA))))))*((long)((((int)(((int)((((int)(tmp[i][((2))])) |((int)(tmp[i][(0x819F)]))))))) ^((int)(((long)((((int)(tmp[i][((-3))])) &((int)(x[i][((0xD))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][((0xC55E66))])) |((int)(tmp[i][(-(0x775AF))]))))))) >>((int)((-(0x98))))))))))));
~~~~~~~~~~~~~~~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:25:1: warning: array index 202 is past the end of the array (which contains 67 elements) [-Warray-bounds]
tmp[i][((0xCA))] = x[i][(0x0)] + (-(44)) +((int)((((int)(x[i][((-4))])) %((int)(x[i][((-4))])))))-((long)((((int)(tmp[i][((34))])) &((int)(x[i][(0xEC0AE)])))))+((int)((((int)(tmp[i][(0x5)])) |((int)(tmp[i][((2))]))))) + (0x167) -((int)((((int)(((int)((((int)(tmp[i][(-(5))])) |((int)(tmp[i][(-(-5))]))))))) <<((int)(tmp[i][((-8))])))))+((int)((((int)(((int)((((int)(tmp[i][((0x7E5E))])) |((int)(tmp[i][(0x7)]))))))) ^((int)((0x1AC))))))*((long)((((int)(((int)((((int)(tmp[i][(0x5)])) |((int)(tmp[i][((7))]))))))) ^((int)(((long)((((int)(tmp[i][(-(-5))])) &((int)(x[i][((0x63))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][(0xFC3E)])) |((int)(tmp[i][(-(6))]))))))) >>((int)((0xE3E1)))))) + (0x55A6F) *((short)((((int)(((0xA87)))) ^((int)(((int)((((int)(((int)((((int)(tmp[i][((11))])) |((int)(tmp[i][(-(0x81350))]))))))) ^((int)((-(0xA089)))))))*((long)((((int)(((int)((((int)(tmp[i][(-(12))])) |((int)(tmp[i][((19))]))))))) ^((int)(((long)((((int)(tmp[i][((67))])) &((int)(x[i][(-(0))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][(0xD6E)])) |((int)(tmp[i][(-(0x9D87))]))))))) >>((int)(((170))))))))))))+((short)((((int)(x[i][((11))] + ((-107)) +((int)((((int)(x[i][((35))])) %((int)(x[i][((-2))])))))-((long)((((int)(tmp[i][(0x98D)])) &((int)(x[i][((-4))])))))+((int)((((int)(tmp[i][(0x8B3DA)])) |((int)(tmp[i][(-(0xDEFB))]))))))) >>((int)(tmp[i][(0x5)])))))-((short)((((int)((-(0xFC)))) &((int)(x[i][((35))] + (0xE7CE85))))))-((int)((((int)(x[i][(-(0x84E25))] + (0xA4DC) +((int)((((int)(x[i][(-(0x2E039))])) %((int)(x[i][((-20))])))))-((long)((((int)(tmp[i][((35))])) &((int)(x[i][(0x7E67)])))))+((int)((((int)(tmp[i][(-(-5))])) |((int)(tmp[i][((3))]))))) + (-(0x8889D)) -((int)((((int)(((int)((((int)(tmp[i][(-(-5))])) |((int)(tmp[i][(0x70)]))))))) <<((int)(tmp[i][((0x5F18))]))))))) &((int)(x[i][((831))] + (0x09F8B) +((int)((((int)(x[i][((7))])) %((int)(x[i][(-(-5))])))))-((long)((((int)(tmp[i][((3))])) &((int)(x[i][(0xA)]))))))))))-((int)((((int)(x[i][(0x5)] + ((-43)) +((int)((((int)(x[i][((-68))])) %((int)(x[i][((131))])))))-((long)((((int)(tmp[i][(-(0))])) &((int)(x[i][(0x4)])))))+((int)((((int)(tmp[i][(-(4))])) |((int)(tmp[i][(-(4))]))))) + (0x355E31))) %((int)(x[i][(-(0x86))] + (-(42)) +((int)((((int)(x[i][(0x8C1D3)])) %((int)(x[i][(-(-5))])))))-((long)((((int)(tmp[i][(0x5CD)])) &((int)(x[i][(0x0E)])))))+((int)((((int)(tmp[i][(-(36))])) |((int)(tmp[i][(-(0x939))]))))) + ((0xDDE962)) -((int)((((int)(((int)((((int)(tmp[i][(0x7CF84)])) |((int)(tmp[i][((66))]))))))) <<((int)(tmp[i][(-(36))])))))+((int)((((int)(((int)((((int)(tmp[i][((67))])) |((int)(tmp[i][((0x9E))]))))))) ^((int)((0xAA))))))*((long)((((int)(((int)((((int)(tmp[i][((2))])) |((int)(tmp[i][(0x819F)]))))))) ^((int)(((long)((((int)(tmp[i][((-3))])) &((int)(x[i][((0xD))]))))))))))*((int)((((int)(((int)((((int)(tmp[i][((0xC55E66))])) |((int)(tmp[i][(-(0x775AF))]))))))) >>((int)((-(0x98))))))))))));
^        ~~~~
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:7:1: note: array 'tmp' declared here
double tmp[(0x7E)][((0x43))];
^
/home/user42/directed-compiler-fuzzing-code/scripts/8-crash-testing/input/segment_13/fuzzer-file-10083-2021-12-19-14:05:32.c:41:1235: warning: remainder by zero is undefined [-Wdivision-by-zero]
    for (j = ((4294967296)) + (0x23AFE) *((short)((((int)(((64)))) %((int)(((2048))))))) + (0xFC5F) -((short)((((double)(((46)))) -((double)((-(17)))))))*((long)((((int)(((-2)) + ((10)) *((short)((((int)((-(-2)))) %((int)((-(-2))))))))) %((int)(((short)((((int)(((0x3)))) %((int)(((-129))))))))))))-((int)((((int)(j)) <<((int)(j))))) + (0xB49079) -((int)((((int)((0x2) + ((46)) *((short)((((int)((-(-2)))) %((int)((0xE7B14)))))) + ((-43)) -((short)((((double)((0x13))) -((double)((0x117D))))))*((long)((((int)(((12)) + ((43)) *((short)((((int)((0x63))) %((int)(((-16385))))))))) %((int)(((short)((((int)((0x7290))) %((int)(((64))))))))))))-((int)((((int)(j)) <<((int)(j))))))) >>((int)((0x5A15) + ((34)) *((short)((((int)(((-129)))) %((int)(((576))))))) + (-(-44)) -((short)((((double)(((40)))) -((double)((0xDD0AF))))))*((long)((((int)((-(-2)) + (0xD3D) *((short)((((int)((-(1)))) %((int)(((0xED2650))))))))) %((int)(((short)((((int)(((-1)))) %((int)(((2))))))))))))-((int)((((int)(j)) <<((int)(j))))))))))-((short)((((int)(((65436)) + (-(35)) *((short)((((int)(((-1073741825)))) %((int)((0x529C3)))))) + ((-11)) -((short)((((double)(((0x607)))) -((double)(((-4)))))))*((long)((((int)(((1024)) + ((-43)) *((short)((((int)((0x4D2C))) %((int)(((2216203124736))))))))) %((int)(((short)((((int)(((0xFBDC)))) %((int)(((0x6E51243160B))))))))))))-((int)((((int)(j)) <<((int)(j))))))) &((int)(j)))))*((long)((((int)(j)) ^((int)((0x17) + ((46)) *((short)((((int)(((524288)))) %((int)(((0xF03))))))) + (0x170546) -((short)((((double)((-(43)))) -((double)(((0x1D2)))))))*((long)((((int)(((0x9338)) + (-(0xF4)) *((short)((((int)(((-8589934593)))) %((int)((0xA)))))))) %((int)(((short)((((int)(((10)))) %((int)((0x3F724)))))))))))-((int)((((int)(j)) <<((int)(j)))))))))); j < ((-7)); ++j)
~~~~~~~~~~~~~~~~~~~~~~~~~~
<unknown>:0: error: invalid number of bytes
<unknown>:0: error: invalid number of bytes
PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: /usr/lib/llvm-12/bin/clang -cc1 -triple x86_64-pc-linux-gnu -emit-obj -mrelax-all --mrelax-relocations -disable-free -disable-llvm-verifier -discard-value-names -main-file-name fuzzer-file-10083-2021-12-19-14:05:32-b589a1.c -mrelocation-model static -mframe-pointer=all -fmath-errno -fno-rounding-math -mconstructor-aliases -munwind-tables -target-cpu x86-64 -tune-cpu generic -fno-split-dwarf-inlining -debugger-tuning=gdb -resource-dir /usr/lib/llvm-12/lib/clang/12.0.1 -internal-isystem /usr/local/include -internal-isystem /usr/lib/llvm-12/lib/clang/12.0.1/include -internal-externc-isystem /usr/include/x86_64-linux-gnu -internal-externc-isystem /include -internal-externc-isystem /usr/include -O0 -fdebug-compilation-dir /home/user42/agg_8_crash_19082022/tests -ferror-limit 19 -fgnuc-version=4.2.1 -faddrsig -o /tmp/fuzzer-file-10083-2021-12-19-14:05:32-b589a1-4b8c8b.o -x c fuzzer-file-10083-2021-12-19-14:05:32-b589a1.c
1.	<eof> parser at end of file
2.	Code generation
 #0 0x00007f20aacec001 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xd1a001)
 #1 0x00007f20aacea140 llvm::sys::RunSignalHandlers() (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xd18140)
 #2 0x00007f20aacec712 (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xd1a712)
 #3 0x00007f20b2902980 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x12980)
 #4 0x00007f20b2901371 write (/lib/x86_64-linux-gnu/libpthread.so.0+0x11371)
 #5 0x00007f20aacce327 llvm::raw_fd_ostream::write_impl(char const*, unsigned long) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xcfc327)
 #6 0x00007f20aacccee5 llvm::raw_ostream::write(char const*, unsigned long) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xcfaee5)
 #7 0x00007f20abf6f6ee llvm::MCAssembler::writeSectionData(llvm::raw_ostream&, llvm::MCSection const*, llvm::MCAsmLayout const&) const (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x1f9d6ee)
 #8 0x00007f20abf5b8d9 (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x1f898d9)
 #9 0x00007f20abf5a000 (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x1f88000)
#10 0x00007f20abf70497 llvm::MCAssembler::Finish() (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x1f9e497)
#11 0x00007f20abfaa2f7 llvm::MCStreamer::Finish(llvm::SMLoc) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x1fd82f7)
#12 0x00007f20ab47e3f5 llvm::AsmPrinter::doFinalization(llvm::Module&) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0x14ac3f5)
#13 0x00007f20aae26941 llvm::FPPassManager::doFinalization(llvm::Module&) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xe54941)
#14 0x00007f20aae21302 llvm::legacy::PassManagerImpl::run(llvm::Module&) (/usr/lib/x86_64-linux-gnu/libLLVM-12.so.1+0xe4f302)
#15 0x00007f20b113bb06 clang::EmitBackendOutput(clang::DiagnosticsEngine&, clang::HeaderSearchOptions const&, clang::CodeGenOptions const&, clang::TargetOptions const&, clang::LangOptions const&, llvm::DataLayout const&, llvm::Module*, clang::BackendAction, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream> >) (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x15ecb06)
#16 0x00007f20b13ed74e (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x189e74e)
#17 0x00007f20b0492eb4 clang::ParseAST(clang::Sema&, bool, bool) (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x943eb4)
#18 0x00007f20b13ea3b3 clang::CodeGenAction::ExecuteAction() (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x189b3b3)
#19 0x00007f20b1b1f446 clang::FrontendAction::Execute() (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x1fd0446)
#20 0x00007f20b1aa8c11 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x1f59c11)
#21 0x00007f20b1b86576 clang::ExecuteCompilerInvocation(clang::CompilerInstance*) (/usr/lib/x86_64-linux-gnu/libclang-cpp.so.12+0x2037576)
#22 0x0000000000412a7a cc1_main(llvm::ArrayRef<char const*>, char const*, void*) (/usr/lib/llvm-12/bin/clang+0x412a7a)
#23 0x0000000000410dbf (/usr/lib/llvm-12/bin/clang+0x410dbf)
#24 0x0000000000410bb6 main (/usr/lib/llvm-12/bin/clang+0x410bb6)
#25 0x00007f20a923fc87 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c87)
#26 0x000000000040ddfa _start (/usr/lib/llvm-12/bin/clang+0x40ddfa)
clang: error: unable to execute command: File size limit exceeded (core dumped)
clang: error: clang frontend command failed due to signal (use -v to see invocation)
Ubuntu clang version 12.0.1-++20211102090516+fed41342a82f-1~exp1~20211102211019.11
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/lib/llvm-12/bin
clang: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang: note: diagnostic msg: /tmp/fuzzer-file-10083-2021-12-19-14:05:32-b589a1-92b2f0.c
clang: note: diagnostic msg: /tmp/fuzzer-file-10083-2021-12-19-14:05:32-b589a1-92b2f0.sh
clang: note: diagnostic msg: 

********************
